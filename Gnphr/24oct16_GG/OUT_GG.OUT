0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; Game Gear / Master System
0000                      ; -------------------------------------------------
0000                      
0000                      		include "incl/macros.asm"
0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; MACROS
0000                      ; -------------------------------------------------
0000                      
0000                      ; -------------------------------------------------
0000                      ; Slot 2 bankswitch
0000                      ; -------------------------------------------------
0000                      
0000                      bankdata macro LABEL
0000                      	ld	a,(LABEL>>14)&0FFh
0000                      	ld      (0FFFEh),a
0000                      	endm
0000                      	endm
0000                      		include "ram.asm"
0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; Variables
0000                      ; -------------------------------------------------
0000                      
0000 =000000D0            bitFrameWait		equ	0
0000 =000000E5            bitVBlankWait		equ	1
0000 =000000FA            bitHBlankWait		equ	2
0000 =00000111            bitDontWaitHInt		equ	3
0000 =00000124            bitLockPads		equ	4
0000 =00000137            bitHotStart		equ	5
0000 =00000148            bitVerDir		equ	6
0000                      
0000                      ; -------------------------------------------------
0000                      ; RAM
0000                      ; -------------------------------------------------
0000                      
0000                      			rsset 0C000h
0000 =000001E0            ram_modebuffer		rb 800h
0000                      
0000 =000001F5            ram_vintjmpto		rb 1
0000 =00000208            ram_vintaddr		rw 1
0000 =0000021C            ram_hintjmpto		rb 1
0000 =0000022F            ram_hintaddr		rw 1
0000                      
0000 =00000243            ram_vintwait		rb 1
0000 =00000257            ram_vdpregs		rb 0Ah
0000 =0000026E            ram_runfadecol		rb 10h
0000 =00000280            ram_joypads		rb 8
0000 =00000293            ram_gamemode		rb 1
0000                      
0000 =000002B4            ram_vscroll		rw 1			;now a WORD
0000 =000002C6            ram_hscroll		rw 1
0000                      
0000 =000002E1            ram_sounddriver		rb 0200h
0000 =000002F8            ram_palbuffer		rb 32*2
0000 =00000311            ram_palfadebuff		rb 32*2
0000 =00000328            ram_sprbuffer		rb 100h
0000 =0000033F            ram_sprcontrol		rb 10h
0000                      
0000                      
0000 =00000359            ram_tilestovdp		rb 800h
0000                      
0000 =00000369            ram_end			rb 0
0000                       			inform 0,"RAM ENDS AT: %h",ram_end
0000                       			inform 0,"RAM ENDS AT: %h",ram_end
0000                      		
0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; Game starts
0000                      ; -------------------------------------------------
0000                      
0000                      		org     0
0000 F3                   		di				; disable interrupts
0001 ED 56                		im      1
0003 31 F8 DF             		ld      sp,0DFF8h
0006 C3 00 00             		jp      Init
0009                      
0009                      ; ====================================================================
0009                      ; -------------------------------------------------
0009                      ; IRQ
0009                      ; -------------------------------------------------
0009                      
0009                      		include "ints.asm"
0009                      ; ====================================================================
0009                      ; -------------------------------------------------
0009                      ; IRQ
0009                      ; 
0009                      ; AF is always saved
0009                      ; -------------------------------------------------
0009                      
0009                      		org     38h		; AT 38h: Interrupts
0038 F3                    		di
0039 F5                   		push	af
003A                      		
003A DB 00                		in      a,(Vcom)
003C E6 80                		and	%10000000
003E 20 00                		jr	nz,@its_vint
0040                      		
0040                      		;Save manually
0040 CD 03 C8             		call	ram_hintjmpto
0043 C3 00 00             		jp	@cont_irq
0046                      @its_vint:
0046 3A 06 C8              		ld	a,(ram_vintwait)
0049 CB 87                 		res	bitFrameWait,a
004B 32 06 C8              		ld	(ram_vintwait),a
004E CD 00 C8             		call	ram_vintjmpto
0051                      @cont_irq:
0051 F1                   		pop     af
0052 FB                   		ei
0053 ED 45                		retn
0055                      
0055                      ; ====================================================================
0055                      ; -------------------------------------------------
0055                      ; SMS PAUSE
0055                      ; -------------------------------------------------
0055                      
0055                      		org     66h		; SMS pause button
0066 ED 45                		retn	
0068                      
0068                      ; ====================================================================
0068                      ; -------------------------------------------------
0068                      ; VBlank
0068                      ; -------------------------------------------------
0068                      
0068                      VBlank_Default:	
0068 C5                   		push	bc
0069 D5                   		push	de
006A E5                   		push	hl
006B DD E5                		push	ix
006D FD E5                		push	iy
006F                      
006F CD 00 00             		call	palfade
0072 CD 00 00             		call	pads_read
0075                      
0075                      ; --------------------
0075                      
0075 21 BE CB             		ld	hl,ram_tilestovdp
0078 AF                   		xor	a
0079 D3 00                  		out 	(Vcom),a
007B 3E 00                  		ld	a,20h|WriteMask
007D D3 00                    		out 	(Vcom),a
007F 0E 00                		ld	c,Vdata
0081 06 D0                		ld	b,0D0h
0083 ED B3                		otir
0085                      
0085                      ; --------------------
0085                      
0085                      ; --------------------
0085                      ; Horizontal scroll
0085                      ; --------------------
0085                      
0085 3A 2C C8             		ld	a,(ram_hscroll)
0088 C6 30                  		add 	30h
008A D3 00                		out     (Vcom),a
008C 3E 88                		ld      a,088h
008E D3 00                		out     (Vcom),a
0090                      
0090                      ; --------------------
0090                      ; Vertical scroll
0090                      ; 
0090                      ; WORD
0090                      ; --------------------
0090                      
0090 01 00 00             		ld	bc,0
0093 3A 2A C8             		ld	a,(ram_vscroll)
0096 CB 3F                		srl	a
0098 CB 3F                		srl	a
009A CB 3F                		srl	a
009C 4F                   		ld	c,a
009D 3A 2B C8             		ld	a,(ram_vscroll+1)
00A0 E6 07                		and	111b
00A2 CB 27                		sla	a
00A4 CB 27                		sla	a
00A6 CB 27                		sla	a
00A8 CB 27                		sla	a
00AA CB 27                		sla	a
00AC B1                   		or	c
00AD 4F                   		ld	c,a	
00AE 3A 2B C8              		ld	a,(ram_vscroll+1)
00B1 E6 F8                 		and	11111000b
00B3 CB 3F                  		srl	a
00B5 CB 3F                  		srl	a
00B7 CB 3F                  		srl	a
00B9 E6 07                  		and 	111b
00BB 57                     		ld	d,a
00BC                       		
00BC 3A 2B C8             		ld	a,(ram_vscroll+1)
00BF CB 7F                		bit 	7,a
00C1 CA 00 00             		jp	z,@down
00C4                      		
00C4 0B                    		dec 	bc
00C5 0B                    		dec 	bc
00C6 0B                    		dec 	bc
00C7 0B                    		dec 	bc
00C8                      		
00C8                      @down:
00C8 21 00 00             		ld	hl,ver_table
00CB 09                   		add 	hl,bc
00CC 7E                   		ld	a,(hl)
00CD 4F                   		ld	c,a
00CE                      		
00CE 3A 2A C8             		ld	a,(ram_vscroll)
00D1 E6 07                		and 	07h
00D3 B1                   		or	c
00D4 D3 00                 		out     (Vcom),a
00D6 3E 89                 		ld      a,089h
00D8 D3 00                 		out     (Vcom),a
00DA                      
00DA                      ; --------------------
00DA                      ; Palette
00DA                      ; --------------------
00DA                       		
00DA AF                   		xor 	a
00DB D3 00                 		out     (Vcom),a
00DD 3E 00                 		ld      a,Vcolor
00DF D3 00                 		out     (Vcom),a
00E1                       		
00E1 21 2E CA             		ld	hl,ram_palbuffer
00E4 06 40                		ld	b,32*2
00E6 0E 00                 		ld 	c,Vdata	
00E8 ED B3                 		otir	
00EA                      
00EA                      ; --------------------
00EA                      
00EA 21 8E CC             		ld	hl,ram_tilestovdp+0D0h
00ED 3E D0                		ld	a,0D0h
00EF D3 00                  		out 	(Vcom),a
00F1 3E 00                  		ld	a,20h|WriteMask
00F3 D3 00                    		out 	(Vcom),a
00F5 0E 00                		ld	c,Vdata
00F7 06 D0                		ld	b,0D0h
00F9 ED B3                		otir
00FB                      
00FB                      ; --------------------
00FB                      
00FB                      ; --------------------------
00FB                      ; Sprites
00FB                      ;
00FB                      ; Y X Chr
00FB                      ; 
00FB                      ; MERCURY:
00FB                      ; X:
00FB                      ; $00-$9F Visible
00FB                      ; Y:
00FB                      ; $00-$3F Hidden
00FB                      ; $40-$CF Visible
00FB                      ; 
00FB                      ; MASTER SYSTEM:
00FB                      ; X:
00FB                      ; $00-$FF Visible
00FB                      ; (Cannot hide horizontally
00FB                      ;  without the border)
00FB                      ; Y:
00FB                      ; $00-$3F Hidden
00FB                      ; $40-$FF Visible
00FB                      ; --------------------------
00FB                      
00FB 11 AE CA             		ld	de,ram_sprbuffer
00FE 06 3F                		ld	b,03Fh
0100 0E 00                		ld	c,0
0102                      @next_spr:
0102 79                   		ld	a,c
0103 D3 00                		out	(Vcom),a
0105 3E 7F                		ld	a,3Fh|40h
0107 D3 00                		out	(Vcom),a
0109 1A                   		ld      a,(de)
010A 3D                   		dec	a
010B 13                   		inc	de
010C C6 D8                		add 	18h-40h
010E D3 00                		out     (Vdata),a
0110 F5                   		push    af
0111 F1                   		pop     af
0112                      		
0112 79                   		ld	a,c
0113 CB 27                		sla	a
0115 F6 80                		or	80h
0117 D3 00                		out	(Vcom),a
0119 3E 7F                		ld	a,3Fh|40h
011B D3 00                		out	(Vcom),a
011D 1A                   		ld      a,(de)
011E 13                   		inc	de
011F C6 28                 		add 	28h
0121 D3 00                		out     (Vdata),a
0123 F5                   		push    af
0124 F1                   		pop     af
0125 1A                   		ld      a,(de)
0126 13                   		inc	de
0127 D3 00                		out     (Vdata),a
0129 F5                   		push    af
012A F1                   		pop     af
012B                      		
012B 0C                   		inc	c
012C 1A                   		ld	a,(de)
012D CA 00 00             		jp	z,@stop_spr
0130 10 D0                 		djnz	@next_spr
0132                      @stop_spr:
0132                      
0132                      ; --------------------
0132                      ; VSync done
0132                      ; --------------------
0132                       		
0132 CD 00 00              		call	SMEG_Upd
0135                      
0135 FD E1                		pop	iy
0137 DD E1                		pop	ix
0139 E1                   		pop	hl
013A D1                   		pop	de
013B C1                   		pop	bc
013C C9                   		ret
013D                      
013D                      ; -------------------------------------------------
013D                      ; HBlank
013D                      ; -------------------------------------------------
013D                      
013D                      HBlank_Default:
013D C9                    		ret
013E                      		
013E                      ; -------------------------------------------------
013E                      ; Data
013E                      ; -------------------------------------------------
013E                      
013E                      ver_table:
013E                      		incbin "subs/vertblm.bin"
0F3E                      		
0F3E                      ; ====================================================================
0F3E                      ; -------------------------------------------------
0F3E                      ; Subs
0F3E                      ; -------------------------------------------------
0F3E                      
0F3E                      		include "subs/vdp.asm"
0F3E                      ; ====================================================================
0F3E                      ; -------------------------------------------------
0F3E                      ; VDP
0F3E                      ; -------------------------------------------------
0F3E                      
0F3E =000000C9            bit_HscrlBar	equ	5
0F3E                      
0F3E                      ; Resolutions:
0F3E                      ; MS: 256x192
0F3E                      ; GG: 160x144 (center)
0F3E                      
0F3E                      ; GG SPRITES AT TOP SCREEN:
0F3E                      ; Y 17h X 30h
0F3E                      
0F3E =0000016C            Vcom            equ     0BFh    ; ADDRESS SETUP FOR VDP REGISTERS
0F3E =000001BB            Vdata           equ     0BEh    ; WRITE OR READ DATA ADDRESS FOR VDP REGISTERS
0F3E =000001F5            Writemask       equ     040h    ; SETS VRAM TO WRITE MODE
0F3E =0000023E            Vcolor          equ     0C0h    ; VALUE OF 2nd BYTE FOR COLOR VRAM WRITE
0F3E =0000028C            Vreg            equ     080h    ; STARTING LOCATION OF VDP REGISTERS (0 - 10)
0F3E =000002D6            sprites         equ     2000h   ; START ADDRESS OF SPRITE GENERATOR TABLE
0F3E =00000321            spritevert      equ     3F00h   ; START ADDRESS OF SPRITE ATTRIBUTE TABLE,
0F3E                      				; VERTICAL POSITION
0F3E =00000384            spritehori      equ     3F80h   ; START ADDRESS OF SPRITE ATTRIBUTE TABLE,
0F3E                      				; HORIZONTAL POSITION
0F3E =000003E9            patterns        equ     0000h   ; START ADDRESS OF PATTERN GENERATOR TABLE
0F3E                      
0F3E                      ; START ADDRESS OF PATTERN NAME TABLE, | topleft    hl = 38CCh
0F3E                      ; OR SCROLL SCREEN
0F3E                      
0F3E =00000453            screen		equ     3800h
0F3E =00000468            screen_gg	equ	38CCh	
0F3E                      
0F3E =00000484            celllength      equ     32
0F3E =0000049F            numcolors       equ     64
0F3E =000004BC            screenlength    equ     1440
0F3E                      
0F3E                      ; -------------------------------------------------
0F3E                      
0F3E                      VDPWrite:
0F3E                      ;****************************************************
0F3E                      ; Inserts a quantity of a number in VRAM
0F3E                      ;        e: holds the number to be written
0F3E                      ;       bc: holds the quantity to be written
0F3E                      ;       hl: holds the VRAM destination to start at
0F3E                      ;****************************************************
0F3E                      
0F3E                      	; set up an initial address in VRAM to write to
0F3E                      
0F3E 7D                   	ld      a,l            ;1st 8 bits
0F3F D3 BF                	out     (Vcom),a
0F41 7C                   	ld      a,h            ; 2nd 8 bits
0F42 F6 40                	or      Writemask      ; set write mode
0F44 D3 BF                	out     (Vcom),a
0F46                      
0F46                      	; insert the number into VRAM a quantity of times
0F46                      
0F46                      VDPWriteLoop:
0F46 7B                   	ld      a,e            ; load data to 3rd byte
0F47 D3 BE                	out     (Vdata),a      ; write to VRAM
0F49 0B                   	dec     bc             ; dec # of times to write by 1
0F4A B1                   	or      c              ; or c with a
0F4B 20 F9                	jr      nz,VDPWriteLoop; continue loop if or != 0
0F4D                      
0F4D C9                   	ret
0F4E                      
0F4E                      
0F4E                      VDP_Init:
0F4E                      ;****************************************************
0F4E                      ; initialize the VDP registers and VRAM
0F4E                      ;****************************************************
0F4E                      
0F4E 21 00 00             	ld      hl,VDPregSet    ; address of register initialize table
0F51 11 07 C8             	ld	de,ram_vdpregs
0F54 06 0B                	ld      b,11            ; number of registers to initialize
0F56 0E 80                	ld      c,80h           ; register = 0
0F58                      
0F58                      	; read register settings from hl, outputting them to the VDP registers
0F58                      
0F58                      VDPinitLoop:
0F58 7E                   	ld	a,(hl)
0F59 12                   	ld	(de),a
0F5A 23                   	inc 	hl
0F5B 13                   	inc 	de
0F5C 10 FA                	djnz    VDPinitLoop     ; dec b, jump if b != 0
0F5E                      
0F5E CD 00 00             	call	VDP_update
0F61                      
0F61                      	; set up VDP to clear VRAM
0F61 AF                   	xor     a
0F62 D3 BF                	out     (Vcom),a        ; a is all zeros
0F64 3E 40                	ld      a,Writemask     ; 0100 0000
0F66 D3 BF                	out     (Vcom),a        ; setting write mode
0F68 01 00 40             	ld      bc,4000h        ; how many times to write to VRAM
0F6B                      BlankLoop:
0F6B AF                   	xor     a               ; a = 0
0F6C D3 BE                	out     (Vdata),a       ; data is zero
0F6E 0B                   	dec     bc              ; dec bc by 1
0F6F 78                   	ld      a,b
0F70 B1                   	or      c               ; or a with c
0F71 20 F8                	jr      nz,BlankLoop    ; continue blanking until bc = 0
0F73                      
0F73 C9                   	ret
0F74                      	
0F74                      WriteVRAM:
0F74                      ;****************************************************
0F74                      ; Write to VRAM
0F74                      ;       hl: address of source bytes to load in VRAM
0F74                      ;       de: destination address in VRAM
0F74                      ;       bc: number of bytes to write
0F74                      ;****************************************************
0F74                      
0F74 E5                   	push    hl
0F75 D5                   	push    de              ; save values
0F76 C5                   	push    bc
0F77                      
0F77                      	; let a.b = number of bytes to write
0F77 78                   	ld      a,b
0F78 41                   	ld      b,c
0F79                      
0F79 F5                   	push    af              ; save copy of high byte value for # of bytes
0F7A                      				;  to write
0F7A                      				;  to write to VRAM
0F7A 7B                   	ld      a,e             ; dest address in vram to write to
0F7B D3 BF                	out     (Vcom),a
0F7D 7A                   	ld      a,d             ; 2nd byte of dest address
0F7E F6 40                	or      Writemask       ; writemode
0F80 D3 BF                	out     (Vcom),a
0F82                      
0F82 0E BE                	ld      c,Vdata         ; data write address in vram, needed for OUTI
0F84                      
0F84 78                   	ld      a,b             ; low byte of # of times to write to vram
0F85 A7                   	and     a
0F86 20 00                	jr      nz,WriteLoop    ; jump if a not zero
0F88                      
0F88 F1                   	pop     af              ; high byte of # of times to write to vram
0F89 3D                   	dec     a               ; dec high byte
0F8A                      
0F8A                      OuterLoop:
0F8A F5                   	push    af              ; save value of high byte
0F8B                      
0F8B                      	; write values to VRAM until b, reaches zero
0F8B                      Writeloop:
0F8B ED A3                	outi                    ; write (hl) to (c), dec b, inc hl
0F8D                      
0F8D 20 FC                	jr      nz,WriteLoop    ; jump if b != 0
0F8F                      
0F8F F1                   	pop     af              ; high byte of # of times to write to vram
0F90                      
0F90                      	; go to writeloop until a reaches zero
0F90 3D                   	dec     a
0F91 F2 8A 0F             	jp      p,OuterLoop     ; jump until a = 0
0F94                      
0F94 C1                   	pop     bc
0F95 D1                   	pop     de              ; restore values
0F96 E1                   	pop     hl
0F97 C9                   	ret
0F98                      
0F98                      
0F98                      WriteSprite:
0F98                      ;****************************************************
0F98                      ; change the attribute table values for a sprite
0F98                      ;       b: the sprite number (0-63)
0F98                      ;       c: the character number in sprite table
0F98                      ;       d: the sprite's x location on screen
0F98                      ;       e: the sprite's y location on screen
0F98                      ;****************************************************
0F98                      
0F98 21 00 3F             	ld      hl,spritevert      ; start of sprite attrib. table, vert pos.
0F9B 7D                   	ld      a,l                ; low part of sprite vert. address
0F9C 80                   	add     a,b                ; index into table
0F9D D3 BF                	out     (Vcom),a           ; 1st byte of Write address
0F9F 7C                   	ld      a,h                ; high part of sprite vert. address
0FA0 F6 40                	or      Writemask          ; set write mode
0FA2 D3 BF                	out     (Vcom),a           ; 2nd byte of Write address
0FA4                      
0FA4 7B                   	ld      a,e                ; new sprite y, vertical, position
0FA5 D3 BE                	out     (Vdata),a          ; write new vertical position
0FA7 F5                   	push    af
0FA8 F1                   	pop     af                 ; delay for vram write
0FA9                      
0FA9 21 80 3F             	ld      hl,spritehori      ; start of sprite attrib. table, horiz pos
0FAC 7D                   	ld      a,l                ; low part of sprite horiz address
0FAD 80                   	add     a,b                ; skip over horizontal data
0FAE 80                   	add     a,b                ; skip over character data
0FAF D3 BF                	out     (Vcom),a           ; 1st byte of Write address
0FB1 7C                   	ld      a,h                ; high part of sprite horiz address
0FB2 F6 40                	or      Writemask          ; writemode
0FB4 D3 BF                	out     (Vcom),a           ; 2nd byte of Write address
0FB6                      
0FB6 7A                   	ld      a,d                ; new sprite x, horiz, position
0FB7 D3 BE                	out     (Vdata),a          ; write new horizontal position
0FB9 F5                   	push    af
0FBA F1                   	pop     af                 ; delay for Vram write
0FBB 79                   	ld      a,c                ; character number
0FBC D3 BE                	out     (Vdata),a          ; write new char. number
0FBE F5                   	push    af
0FBF F1                   	pop     af                 ; delay for Vram write
0FC0                      
0FC0 C9                   	ret
0FC1                      
0FC1                      
0FC1                      screenoff:
0FC1                      ;****************************************************
0FC1                      ; De-activates the screen from being drawn
0FC1                      ;****************************************************
0FC1                      
0FC1                      	;set BLANK bit of VDP register 1 to zero
0FC1                      
0FC1 3E A0                	ld      a,0A0h          ; 1010 0000
0FC3 D3 BF                	out     (Vcom),a
0FC5 3E 81                	ld      a,Vreg+1        ; register 1
0FC7 D3 BF                	out     (Vcom),a        ; set blank bit to zero
0FC9                      
0FC9 C9                   	ret
0FCA                      
0FCA                      
0FCA                      screenon:
0FCA                      ;****************************************************
0FCA                      ;Re-activates the screen
0FCA                      ;****************************************************
0FCA                      
0FCA 3E E0                	ld      a,0E0h          ; 1110 0000
0FCC D3 BF                	out     (Vcom),a
0FCE 3E 81                	ld      a,Vreg+1        ; register 1
0FD0 D3 BF                	out     (Vcom),a        ; set blank bit to 1, screen on
0FD2                      
0FD2 C9                   	ret
0FD3                      	
0FD3                      ; -------------------------------------------------
0FD3                      ; VDP_LoadMaps
0FD3                      ; 
0FD3                      ; normal:
0FD3                      ; bc - X size, Y size
0FD3                      ; ix - mappings
0FD3                      ; hl - vdp address
0FD3                      ; 
0FD3                      ; uses stack
0FD3                      ; -------------------------------------------------
0FD3                      
0FD3                      VDP_LoadMaps:
0FD3 62                   		ld	h,d
0FD4 6B                   		ld	l,e
0FD5 C5                   		push	bc
0FD6                      @X_draw:
0FD6 7D                   		ld	a,l		; VDP: address
0FD7 D3 BF                		out	(Vcom),a
0FD9 7C                   		ld	a,h
0FDA F6 40                		or	Writemask
0FDC D3 BF                		out	(Vcom),a
0FDE                      		
0FDE DD 7E 00             		ld	a,(ix)
0FE1 D3 BE                		out	(Vdata),a	; VDP: read
0FE3 DD 23                		inc 	ix
0FE5 DD 7E 00             		ld	a,(ix)
0FE8                      ; 		and 	111b
0FE8 D3 BE                		out	(Vdata),a
0FEA DD 23                		inc 	ix
0FEC                      		
0FEC 23                   		inc	hl
0FED 23                   		inc	hl
0FEE 10 E6                		djnz	@X_draw
0FF0                      
0FF0 62                   		ld	h,d		;Next line
0FF1 6B                   		ld	l,e
0FF2 01 40 00             		ld	bc,40h		
0FF5 09                   		add 	hl,bc
0FF6 54                   		ld	d,h
0FF7 5D                   		ld	e,l
0FF8                      		
0FF8 C1                   		pop	bc
0FF9 0D                   		dec	c
0FFA 79                   		ld	a,c
0FFB C2 D3 0F              		jp	nz,VDP_LoadMaps
0FFE C9                   		ret
0FFF                      		
0FFF                      ; -------------------------------------------------
0FFF                      ; VDP_ClearLayer
0FFF                      ;
0FFF                      ; uses:
0FFF                      ; bc,hl
0FFF                      ; -------------------------------------------------
0FFF                      
0FFF                      VDP_ClearLayer:
0FFF 21 00 38             		ld	hl,screen
1002                      	
1002 0E 1C                		ld	c,1Ch
1004                      @y_loop:
1004 06 20                		ld	b,20h
1006                      @x_loop:		
1006 7D                    		ld	a,l
1007 D3 BF                 		out	(Vcom),a
1009 7C                    		ld	a,h
100A F6 40                 		or	Writemask
100C D3 BF                 		out	(Vcom),a
100E                       		
100E AF                    		xor	a
100F D3 BE                 		out	(Vdata),a
1011 D3 BE                 		out	(Vdata),a
1013                       		
1013 23                    		inc	hl
1014 23                    		inc	hl
1015 10 EF                		djnz	@x_loop
1017                      		
1017 0D                   		dec	c
1018 C2 04 10             		jp	nz,@y_loop
101B C9                   		ret
101C                      		
101C                      ; -------------------------------------------------
101C                      ; VDP_LoadPal
101C                      ; 
101C                      ; normal:
101C                      ; b - Num of colors
101C                      ; c - Start from
101C                      ; 
101C                      ; uses:
101C                      ; bc,d,hl
101C                      ; 
101C                      ; uses stack
101C                      ; -------------------------------------------------
101C                      
101C                      VDP_LoadPal:
101C CB 20                		sla	b
101E CB 21                		sla	c
1020 79                   		ld	a,c
1021 DD 21 2E CA          		ld	ix,ram_palbuffer
1025                      ; 		out     (Vcom),a        ; color ram address
1025                      ; 		ld      a,Vcolor        ; sets required C0h for a color write
1025                      ; 		out     (Vcom),a
1025                      
1025                      @color_loop:
1025 7E                   		ld	a,(hl)
1026                      		
1026 DD 77 00             		ld	(ix),a
1029 DD 23                		inc	ix
102B 23                   		inc 	hl
102C                      		
102C F5                    		push    af
102D F1                    		pop     af		; delay for writing to ram
102E 10 F5                		djnz	@color_loop
1030 C9                   		ret
1031                      	
1031                      ; ; -------------------------------------------------
1031                      ; ; VDP_GrabPal
1031                      ; ; 
1031                      ; ; Copy the palette from RAM to VDP
1031                      ; ; -------------------------------------------------
1031                      ; 
1031                      ; VDP_GrabPal:
1031                      
1031                      ; -------------------------------------------------
1031                      ; VDP_Update
1031                      ; -------------------------------------------------
1031                      
1031                      VDP_update:
1031 21 07 C8             		ld	hl,ram_vdpregs
1034 06 07                		ld	b,7		; 80h-87h
1036 0E 80                		ld	c,80h
1038                      @nextreg:
1038 7E                   		ld      a,(hl)          ; initial  register configs
1039 D3 BF                		out     (Vcom),a        ; data out to 1st byte
103B 23                   		inc     hl              ; next reg in table
103C 79                   		ld      a,c             ; register number
103D D3 BF                		out     (Vcom),a        ; write data to register
103F 0C                   		inc     c               ; next register
1040 10 F6                		djnz	@nextreg
1042                      		
1042 3A 11 C8             		ld      a,(ram_vdpregs+00Ah) ;08Ah
1045 D3 BF                		out     (Vcom),a
1047 3E 8A                		ld      a,08Ah
1049 D3 BF                		out     (Vcom),a
104B C9                   		ret
104C                      		
104C                      ; -------------------------------------------------
104C                      ; Data
104C                      ; -------------------------------------------------
104C                      
104C                      VDPregSet:
104C 06                   		db      00000110b       ;reg 0 (???H???? HBLANK)
104D E2                   		db      11100010b       ;1 SPRITES 8x16
104E FF                   		db      11111111b       ;2
104F FF                   		db      11111111b       ;3
1050 FF                   		db      11111111b       ;4
1051 FF                   		db      11111111b       ;5
1052 04                   		db      00000100b       ;bit 2: Sprite characters $0x00 ($00xx,$01xx)
1053 00                   		db      00000000b       ;7
1054 00                   		db      00000000b       ;8 X
1055 00                   		db      00000000b       ;9 Y
1056 00                   		db      00000000b       ;10 HInt counter
1057                      		
1057                      ; --------------------------------------------
1057                      ; VSync
1057                      ; --------------------------------------------
1057                      
1057                      vsync:
1057 3A 06 C8              		ld	a,(ram_vintwait)
105A CB C7                 		set	bitFrameWait,a
105C 32 06 C8              		ld	(ram_vintwait),a
105F                      @loop:
105F 3A 06 C8               		ld	a,(ram_vintwait)
1062 CB 47                 		bit	bitFrameWait,a
1064 C2 5F 10              		jp	nz,@loop
1067 C9                   		ret
1068                      		
1068                      		
1068                      		
1068                      		include "subs/misc.asm"
1068                      ;****************************************************
1068                      ; initialize the system
1068                      ;****************************************************
1068                      
1068                      initsys:
1068 3E FF                		ld      a,0FFh    	; all ones
106A D3 02                		out     (02h),a   	; set i/o port 2h (read/write) to all ones
106C AF                   		xor     a         	; set a to zero
106D D3 01                		out     (01h),a   	; set i/o port 1h (read/write from ext
106F                      			       	  	;  connector) to zero
106F D3 05                		out     (05h),a   	; set i/o port 5h (read/write serial comm)
1071                      			      	  	;  to zero
1071                      			      	  	
1071 3E FF                                ld	a,0FFh
1073 D3 06                                out 	(06h),a
1075                      
1075 AF                   		xor     a         	; set a to zero
1076 32 FC FF             		ld      (0FFFCh),a	; set bank control register to all zeros
1079 32 FD FF             		ld      (0FFFDh),a	; set bank reg #0 to all zeros
107C 3C                   		inc	a
107D 32 FE FF             		ld      (0FFFEh),a	; set bank reg #1 to 0001
1080 3C                   		inc	a
1081 32 FF FF             		ld      (0FFFFh),a	; set bank reg #2 to 0010
1084                      		
1084 21 00 C0             		ld      hl,0C000h  	; zero system RAM
1087 11 01 C0             		ld      de,0C001h  	; C000h to DFF0h
108A 01 F0 1F             		ld      bc,01FF0h  	; number of times to write
108D 36 00                		ld      (hl),0
108F ED B0                		ldir               	; load (de) with (hl). inc de, inc hl, dec bc
1091                      					; continue until bc = 0
1091                      					
1091 C9                   		ret
1092                      
1092                      ;****************************************************
1092                      ; clear the screen data area
1092                      ;****************************************************
1092                      
1092                      clearscreen:
1092 21 00 38             		ld      hl,screen  	; start at VRAM address 3800h
1095 1E 00                		ld      e,0        	; number to place in VRAM
1097 01 00 06             		ld      bc,768*2   	; number of times to write to VRAM
109A C3 3E 0F             		jp      VDPWrite
109D                      
109D                      ; --------------------------------------------
109D                      ; HexToBCD
109D                      ; --------------------------------------------
109D                      
109D                      HexToBCD:
109D 4F                   		ld	c,a		; Original (hex) number
109E 06 08                		ld	b,8		; How many bits
10A0 AF                   		xor	a		; Output (BCD) number, starts at 0
10A1 CB 21                @rept:		sla	c		; shift c into carry
10A3 8F                   		adc	a,a
10A4 27                   		daa			; Decimal adjust a, so shift = BCD x2 plus carry
10A5 10 FA                		djnz	@rept		; Repeat for 8 bits
10A7 C9                   		ret
10A8                      		
10A8                      ; --------------------------------------------
10A8                      ; Mode cleanup
10A8                      ; --------------------------------------------
10A8                      		
10A8                      Mode_Cleanup:
10A8 01 00 00             		ld	bc,0
10AB ED 43 2C C8          		ld	(ram_hscroll),bc
10AF ED 43 2A C8          		ld	(ram_vscroll),bc
10B3 C9                   		ret
10B4                      
10B4                      ; ====================================================================
10B4                      ; ---------------------------------------------
10B4                      ; Sprites system
10B4                      ; ---------------------------------------------
10B4                      
10B4                      ; TODO: talvez moverlo
10B4                      
10B4                      		rsreset
10B4 =00000898            sprite_free	rw	1
10B4 =000008A9            sprite_used	rb	1
10B4                      
10B4                      ; ---------------------------------------------
10B4                      ; Sprites_Reset
10B4                      ; ---------------------------------------------
10B4                      
10B4                      Sprites_Reset:
10B4                      ; 		lea	(RAM_SprControl),a6
10B4                      ; 		movea.l	sprite_free(a6),a5
10B4                      ; 		cmpa	#((RAM_SprBuffer)&$FFFF),a5
10B4                      ; 		blt.s	@Full
10B4                      ; @NextEntry:
10B4                      ; ; 		tst.l	(a5)
10B4                      ; ; 		beq.s	@Full
10B4                      ; ; 		tst.l	4(a5)
10B4                      ; ; 		beq.s	@Full
10B4                      ;  		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
10B4                      ;  		bgt.s	@Full
10B4                      ;  		clr.l	(a5)+
10B4                      ;   		clr.l	(a5)+
10B4                      ;   		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
10B4                      ;   		blt.s	@NextEntry
10B4                      ; @Full:
10B4 01 AE CA             		ld	bc,RAM_SprBuffer
10B7 ED 43 AE CB          		ld	(RAM_SprControl),bc
10BB                      ; 		move.w	#1,sprite_link(a6)
10BB                      ; @Return:
10BB C9                   		ret
10BC                      	
10BC                      ; ---------------------------------------------
10BC                      ; Sprites_CopyTiles
10BC                      ; 
10BC                      ; since i dont have DMA here
10BC                      ; lets use RAM-to-VDP
10BC                      ; ---------------------------------------------
10BC                      
10BC                      Sprites_CopyTiles:
10BC 21 BE CB             		ld	hl,ram_tilestovdp
10BF                      		
10BF AF                   		xor	a
10C0 D3 BF                  		out 	(Vcom),a
10C2 3E 20                  		ld	a,20h
10C4 F6 40                  		or	WriteMask
10C6 D3 BF                    		out 	(Vcom),a
10C8 0E BE                		ld	c,Vdata
10CA                      		
10CA                      ; 		ld	a,(ram_vdpregs+1)
10CA                      ; 		res 	6,a
10CA                      ; 		out 	(Vcom),a
10CA                      ; 		ld	a,81h
10CA                      ; 		out 	(Vcom),a
10CA                      ; 		
10CA 06 00                		ld	b,0
10CC ED B3                		otir
10CE 06 00                		ld	b,0
10D0 ED B3                		otir
10D2 06 00                		ld	b,0
10D4 ED B3                		otir
10D6 06 00                		ld	b,0
10D8 ED B3                		otir
10DA                      		
10DA                      ; 		ld	a,(ram_vdpregs+1)
10DA                      ; 		out 	(Vcom),a
10DA                      ; 		ld	a,81h
10DA                      ; 		out 	(Vcom),a
10DA C9                   		ret 
10DB                      		
10DB                      		
10DB                      		include "subs/fade.asm"
10DB                      ; ====================================================================
10DB                      ; ---------------------------------------
10DB                      ; Equs
10DB                      ; ---------------------------------------
10DB                      
10DB =000000B7            ID_FadeOut		equ	01h
10DB =000000CA            ID_FadeIn		equ	02h
10DB =000000DE            ID_ToWhite		equ	03h
10DB =000000F4            ID_FadeWhite		equ	04h
10DB                      
10DB                      ; ---------------------------------------
10DB                      
10DB =00000134            PalFadeFlags		equ	1
10DB =00000148            PalFadeStart		equ	2
10DB =0000015A            PalFadeEnd		equ	3
10DB =0000016C            PalFadeTmr		equ	4
10DB =00000181            PalFadeSource		equ	8
10DB                      
10DB                      ; -------------------------------------------------
10DB                      ; FadeIn/FadeOut
10DB                      ; -------------------------------------------------
10DB                      
10DB                      PalFade:
10DB DD 21 11 C8          		ld	ix,ram_runfadecol
10DF DD 7E 00             		ld	a,(ix)
10E2 CB 7F                		bit	7,a
10E4 CA 00 00             		jp	z,@run_tasks
10E7 DD 7E 05               		ld	a,(ix+(PalFadeTmr+1))
10EA 3D                     		dec	a
10EB DD 77 05               		ld	(ix+(PalFadeTmr+1)),a
10EE F2 00 00              		jp	p,@Return
10F1 DD 7E 04             		ld	a,(ix+PalFadeTmr)
10F4 DD 77 05             		ld	(ix+(PalFadeTmr+1)),a
10F7 AF                   		xor	a
10F8 DD 77 00             		ld	(ix),a
10FB                      @Return:
10FB C9                   		ret
10FC                      		
10FC                      @run_tasks:
10FC CB 27                 		sla	a
10FE 01 00 00              		ld	bc,0
1101 4F                    		ld	c,a
1102 21 00 00             		ld	hl,@task_list
1105 09                    		add 	hl,bc
1106 E9                   		jp	(hl)
1107                      
1107                      ; -------------------------------------------------
1107                      
1107                      @task_list:
1107 18 F2                		jr	@Return
1109 18 00                		jr	Pal_FadeOut
110B 18 00                		jr	Pal_FadeIn
110D 18 EC                		jr	@Return
110F 18 EA                		jr	@Return
1111                      	
1111                      ; -------------------------------------------------
1111                      ; FADEIN
1111                      ; -------------------------------------------------
1111                      
1111                      Pal_FadeIn:	
1111 DD 7E 05             		ld	a,(ix+(PalFadeTmr+1))
1114 3D                   		dec	a
1115 DD 77 05             		ld	(ix+(PalFadeTmr+1)),a
1118 F2 00 00             		jp	p,@wait
111B DD 7E 04             		ld	a,(ix+(PalFadeTmr))
111E DD 77 05             		ld	(ix+(PalFadeTmr+1)),a
1121                      		
1121 FD 21 6E CA           		ld	iy,ram_palfadebuff
1125 21 2E CA             		ld	hl,ram_palbuffer
1128                      		
1128 11 00 00             		ld	de,0
112B 01 00 00             		ld	bc,0
112E DD 46 03             		ld	b,(ix+(PalFadeEnd))
1131 58                   		ld	e,b
1132 04                   		inc 	b
1133                      
1133                      ; --------------------
1133                      ; MERCURY
1133                      ; --------------------
1133                      
1133 CB 23                  		sla	e
1135                      @next_entry:
1135 FD 7E 00             		ld	a,(iy)
1138 E6 0F                		and	00001111b
113A 4F                   		ld	c,a
113B 7E                   		ld	a,(hl)		;RED
113C E6 0F                		and	00001111b
113E B9                   		cp	c
113F 7E                   		ld	a,(hl)
1140 D2 00 00             		jp	nc,@cont_red
1143 3C                   		inc	a
1144 CB C2                		set 	0,d
1146                      @cont_red:
1146 77                     		ld	(hl),a
1147                        		
1147 FD 7E 00             		ld	a,(iy)
114A E6 F0                		and	11110000b
114C 4F                   		ld	c,a
114D 7E                   		ld	a,(hl)		;GREEN
114E E6 F0                		and	11110000b
1150 B9                   		cp	c
1151 7E                   		ld	a,(hl)
1152 D2 00 00             		jp	nc,@cont_gre
1155 C6 10                		add 	a,10h
1157 CB CA                		set 	1,d
1159                      @cont_gre:
1159 77                     		ld	(hl),a
115A                        		
115A 7A                     		ld	a,d
115B FE 03                  		cp	00000011b
115D D2 00 00               		jp	nc,@redgreend
1160 1D                    		dec	e
1161                      @redgreend:
1161 23                   		inc	hl
1162 FD 23                		inc	iy
1164                      		
1164 7E                   		ld	a,(hl)		;BLUE
1165 FD 4E 00             		ld	c,(iy)
1168 B9                   		cp	c
1169 3C                   		inc	a
116A DA 00 00             		jp	c,@cont_blue
116D 1D                   		dec 	e
116E FD 7E 00             		ld	a,(iy)
1171                      @cont_blue:
1171 77                   		ld	(hl),a
1172 23                   		inc	hl
1173 FD 23                		inc	iy
1175 10 BE                		djnz	@next_entry
1177                      		
1177                      ; --------------------
1177                      ; MASTER SYSTEM
1177                      ; 
1177                      ; (GG Colors to MS)
1177                      ; --------------------
1177                      
1177                       		
1177 7B                   		ld	a,e
1178 F2 00 00             		jp	p,@wait
117B                      		
117B DD 7E 00             		ld 	a,(ix)
117E CB FF                		set 	7,a
1180 DD 77 00             		ld	(ix),a
1183                      @wait:
1183 C9                   		ret
1184                      
1184                      ; -------------------------------------------------
1184                      ; FADEOUT
1184                      ; -------------------------------------------------
1184                      
1184                      Pal_FadeOut:	
1184 DD 7E 05              		ld	a,(ix+(PalFadeTmr+1))
1187 3D                    		dec	a
1188 DD 77 05              		ld	(ix+(PalFadeTmr+1)),a
118B F2 00 00              		jp	p,@wait
118E DD 7E 04              		ld	a,(ix+(PalFadeTmr))
1191 DD 77 05              		ld	(ix+(PalFadeTmr+1)),a
1194                       		
1194 FD 21 6E CA            		ld	iy,ram_palfadebuff
1198 21 2E CA              		ld	hl,ram_palbuffer
119B                       		
119B 11 00 00              		ld	de,0
119E 01 00 00              		ld	bc,0
11A1 DD 46 03              		ld	b,(ix+(PalFadeEnd))
11A4 58                    		ld	e,b
11A5 04                    		inc 	b
11A6                       		
11A6                      ; --------------------
11A6                      ; MERCURY
11A6                      ; --------------------
11A6                      
11A6 CB 23                    		sla	e		
11A8                      @next_entry:
11A8 7E                       		ld	a,(hl)
11A9 57                       		ld	d,a
11AA E6 0F                    		and 	00001111b
11AC FE 00                   		cp	0
11AE CA 00 00                		jp	z,@red_done
11B1 3D                       		dec	a
11B2 E6 0F                    		and 	00001111b
11B4 57                       		ld	d,a
11B5                      @red_done:
11B5 7E                   		ld	a,(hl)
11B6 E6 F0                		and	11110000b
11B8 B2                   		or	d
11B9 77                    		ld	(hl),a
11BA                       		
11BA 7E                    		ld	a,(hl)
11BB 57                    		ld	d,a
11BC E6 F0                 		and	11110000b
11BE FE 00                 		cp	0
11C0 CA 00 00              		jp	z,@green_done
11C3 D6 10                 		sub	a,10h
11C5 57                    		ld	d,a
11C6 7E                     		ld	a,(hl)
11C7 4F                     		ld	c,a
11C8 E6 0F                  		and	00001111b
11CA 4F                     		ld	c,a
11CB 7A                     		ld	a,d
11CC B1                     		or	c
11CD                      @green_done:
11CD 7E                   		ld	a,(hl)
11CE E6 0F                		and	00001111b
11D0 B2                   		or	d
11D1 77                    		ld	(hl),a
11D2                       		
11D2 7E                    		ld	a,(hl)
11D3 FE 00                 		cp	0
11D5 C2 00 00              		jp	nz,@not_zero
11D8 1D                      		dec	e
11D9                      @not_zero:
11D9 23                    		inc	hl
11DA FD 23                 		inc	iy
11DC                       		
11DC 7E                      		ld	a,(hl)
11DD E6 0F                   		and	00001111b
11DF FE 00                  		cp	0
11E1 CA 00 00               		jp	z,@blue_done
11E4 3D                      		dec	a
11E5                      @blue_done:
11E5 C2 00 00             		jp	nz,@setb_done
11E8 1D                    		dec	e
11E9                      @setb_done:
11E9 77                    		ld	(hl),a
11EA                      		
11EA 23                    		inc	hl
11EB FD 23                 		inc	iy
11ED 10 B9                 		djnz	@next_entry
11EF                       		
11EF                      ; --------------------
11EF                      ; MASTER SYSTEM
11EF                      ; --------------------
11EF                      
11EF                       		
11EF 7B                    		ld	a,e
11F0 F2 00 00              		jp	p,@wait
11F3                      		
11F3 DD 7E 00             		ld 	a,(ix)
11F6 CB FF                		set 	7,a
11F8 DD 77 00               		ld	(ix),a
11FB                      @wait:
11FB C9                   		ret
11FC                      		
11FC                      ; -------------------------------------------------
11FC                      ; PalFade_Set
11FC                      ;
11FC                      ; b -  Command
11FC                      ; de - NumOfColors|Speed
11FC                      ; -------------------------------------------------
11FC                      
11FC                      PalFade_Set:
11FC DD 21 11 C8          		ld	ix,ram_runfadecol
1200 48                   		ld	c,b
1201                      		
1201 41                   		ld	b,c
1202 7A                   		ld	a,d
1203 DD 77 03             		ld	(ix+(PalFadeEnd)),a
1206 7B                   		ld	a,e
1207 DD 77 04             		ld	(ix+(PalFadeTmr)),a
120A 78                   		ld	a,b
120B DD 70 00             		ld	(ix),b
120E                      		
120E 48                   		ld	c,b
120F C9                   		ret
1210                      		
1210                      ; -------------------------------------------------
1210                      ; PalFade_Load
1210                      ; 
1210                      ; normal:
1210                      ; b - Num of colors
1210                      ; c - Start from
1210                      ; 
1210                      ; uses:
1210                      ; bc,d,hl
1210                      ; 
1210                      ; uses stack
1210                      ; -------------------------------------------------
1210                      
1210                      PalFade_Load:
1210 D5                   		push	de
1211 CB 20                		sla	b
1213 CB 21                		sla	c
1215 11 00 00             		ld	de,0
1218 58                    		ld	e,b
1219                      ;  		ld	ix,ram_palfadebuff
1219 DD 19                 		add 	ix,de
121B                      		
121B                      ; 		out     (Vcom),a        ; color ram address
121B                      ; 		ld      a,Vcolor        ; sets required C0h for a color write
121B                      ; 		out     (Vcom),a
121B                      
121B                      @color_loop:
121B 7E                   		ld	a,(hl)
121C                      		
121C DD 77 00             		ld	(ix),a
121F DD 23                		inc	ix
1221 23                   		inc 	hl
1222                      		
1222 0D                   		dec	c
1223 C2 1B 12             		jp	nz,@color_loop
1226 D1                   		pop	de
1227 C9                   		ret
1228                      		
1228                      ; -------------------------------------------------
1228                      
1228                      PalFade_Wait:
1228 CD 57 10                		call	VSync
122B                         		
122B 3A 11 C8                  		ld	a,(ram_runfadecol)
122E FE 00                     		cp	0
1230 C2 28 12                  		jp	nz,PalFade_Wait
1233 C9                   		ret
1234                      		
1234                      		
1234                      		include "subs/pads.asm"
1234                      ; ====================================================================
1234                      ; -------------------------------------------------
1234                      ; Joypads/GG controller
1234                      ; -------------------------------------------------
1234                      
1234                      ; -------------------------------------------------
1234                      ; Variables
1234                      ; -------------------------------------------------
1234                      
1234 =00000184            pad             equ     0DCh    ; I/O PORT FOR JOYPAD AND FIRE BUTTONS
1234 =000001A8            padright        equ     08h     ; \
1234 =000001F3            padleft         equ     04h     ;  \___ bit values in joypad port register
1234 =00000218            padup           equ     01h     ;  /
1234 =0000023C            paddown         equ     02h     ; /
1234                      
1234 =00000262            bitJoyStart	equ	7	; DONT CHANGE THIS
1234 =00000271            bitJoy1		equ	4
1234 =00000280            bitJoy2		equ	5
1234 =00000292            bitJoyRight	equ	3
1234 =000002A3            bitJoyLeft	equ	2
1234 =000002B4            bitJoyDown	equ	1
1234 =000002C3            bitJoyUp	equ	0
1234                      
1234 =000002D3            on_hold		equ	0
1234 =000002E2            on_press	equ	1
1234                      
1234                      ; -------------------------------------------------
1234                      ; Read
1234                      ; -------------------------------------------------
1234                      
1234                      pads_read:
1234 DD 21 21 C8          		ld	ix,ram_joypads
1238 DB 00                		in	a,(00h)
123A 2F                   		cpl
123B E6 80                		and	%10000000
123D 47                   		ld	b,a
123E DB DC                		in      a,(pad)
1240 EE FF                		xor     0FFh
1242 B0                   		or	b
1243 47                   		ld	b,a
1244 DD 7E 00              		ld	a,(ix+on_hold)
1247 A8                    		xor	b
1248 DD 70 00             		ld	(ix+on_hold),b
124B A0                   		and	b	
124C DD 77 01             		ld	(ix+on_press),a
124F C9                   		ret
1250                      		
1250                      		
1250                      		
1250                      ; ====================================================================
1250                      ; -------------------------------------------------
1250                      ; Init
1250                      ; -------------------------------------------------
1250                      
1250                      Init:
1250 CD 68 10             		call    initsys			; init I/O ports and bank registers
1253 CD 4E 0F             		call    VDP_Init		; init VDP and VRAM
1256 CD 00 00             		call	SMEG_Init
1259                      		
1259 3E C3                		ld	a,0C3h			; JMP @here
125B 32 00 C8             		ld	(ram_vintjmpto),a
125E 32 03 C8             		ld	(ram_hintjmpto),a
1261 01 68 00             		ld	bc,VBlank_Default
1264 ED 43 01 C8          		ld	(ram_vintaddr),bc
1268 01 3D 01             		ld	bc,HBlank_Default
126B ED 43 04 C8          		ld	(ram_hintaddr),bc
126F FB                   		ei
1270                      		
1270                      @MainLoop:
1270 3A 29 C8             		ld	a,(ram_gamemode)
1273 CB 27                		sla	a
1275 CB 27                		sla	a
1277 CB 27                		sla	a
1279 01 00 00             		ld	bc,0
127C 4F                   		ld	c,a
127D 21 00 00             		ld	hl,@modes_list
1280 09                    		add 	hl,bc
1281 E9                   		jp	(hl)
1282                      	
1282                      ; -------------------------------------------------
1282                      
1282                      @modes_list:
1282 CD 00 00             		call	segalogo
1285 C3 70 12             		jp	@MainLoop
1288 00                   		nop
1289 00                   		nop
128A CD 00 00             		call	Level
128D C3 70 12             		jp	@MainLoop
1290 00                   		nop
1291 00                   		nop
1292                      		
1292                      ; ====================================================================
1292                      ; -------------------------------------------------
1292                      ; Modes
1292                      ; -------------------------------------------------
1292                      
1292                      		include "modes/title/code.asm"
1292                      ; ====================================================================
1292                      ; -------------------------------------------------
1292                      ; Title Screen
1292                      ; -------------------------------------------------
1292                      
1292                      segalogo:
1292 06 01                 		ld	b,ID_FadeOut
1294 11 00 1F              		ld	de,1F00h
1297 CD FC 11              		call	PalFade_Set
129A CD 28 12              		call	PalFade_Wait
129D                       		
129D F3                   		di
129E 3E 00 32 FE FF       		bankdata BANK_Title
12A3                      		
12A3 CD 92 10             		call	clearscreen
12A6 CD A8 10             		call	Mode_Cleanup
12A9 3A 07 C8               		ld	a,(ram_vdpregs)
12AC CB AF                		res	bit_HscrlBar,a
12AE CB E7                		set 	4,a
12B0 32 07 C8             		ld	(ram_vdpregs),a
12B3 CD 31 10             		call	Vdp_Update
12B6                      		
12B6 21 00 00             		ld	hl,art_title			;  hl = 0208   where is data at
12B9 11 00 00             		ld	de,0				;  de = 0      where in VRAM to put data
12BC 01 00 00             		ld	bc,art_title_end		;  bc = 0380   how many times to write to vram
12BF CD 74 0F             		call	WriteVRAM
12C2 DD 21 00 00          		ld	ix,map_title
12C6 01 12 14             		ld	bc,1412h
12C9 11 00 38              		ld	de,screen
12CC CD D3 0F              		call	VDP_LoadMaps
12CF                       		
12CF 01 68 00             		ld	bc,VBlank_Default
12D2 ED 43 01 C8          		ld	(ram_vintaddr),bc
12D6 01 3D 01             		ld	bc,HBlank_Default
12D9 ED 43 04 C8          		ld	(ram_hintaddr),bc
12DD                      		
12DD 21 00 00             		ld	hl,pal_title
12E0 DD 21 6E CA           		ld	ix,ram_palfadebuff
12E4 01 10 00             		ld	bc,0010h
12E7 CD 10 12              		call	PalFade_Load
12EA                       		
12EA                      ;     		ld	hl,SmegSong_Test
12EA                      ;     		ld	b,2h
12EA                      ;      		call	Smeg_LoadSong
12EA FB                   		ei
12EB                      		
12EB 06 02                 		ld	b,ID_FadeIn
12ED 11 00 1F              		ld	de,1F00h
12F0 CD FC 11              		call	PalFade_Set
12F3 CD 28 12              		call	PalFade_Wait
12F6                       		
12F6                      ;    		di
12F6                      ;              	call	PlayPCM
12F6                      ;                 ei
12F6                            
12F6                      ; 		ld	a,01h
12F6                      ; 		ld	(ram_modebuffer),a
12F6                      		
12F6                      ; -------------------------------------------------
12F6                      ; Loop
12F6                      ; -------------------------------------------------
12F6                      
12F6                      @loop:
12F6 CD 57 10             		call	VSync
12F9                      		
12F9 3A 21 C8             		ld	a,(ram_joypads+on_hold)
12FC CB 6F                		bit 	bitJoy2,a
12FE 20 00                		jr      nz,@end_this
1300 C3 F6 12             		jp	@loop
1303                      
1303                      ; -------------------------------------------------
1303                      
1303                      @end_this:
1303 3E 01                		ld	a,1
1305 32 29 C8             		ld	(ram_gamemode),a
1308 C9                   		ret
1309                      	
1309                      ; -------------------------------------------------
1309                      ; HBlank
1309                      ; -------------------------------------------------
1309                      		
1309                      ; -------------------------------------------------
1309                      ; VBlank
1309                      ; -------------------------------------------------
1309                      ; -------------------------------------------------
1309                      		include "modes/level/code.asm"		
1309                      ; ====================================================================
1309                      ; -------------------------------------------------
1309                      ; Level
1309                      ; -------------------------------------------------
1309                      
1309                      ; -------------------------------------------------
1309                      ; Include
1309                      ; -------------------------------------------------
1309                      
1309                      		include	"modes/level/subs/object.asm"
1309                      ; =================================================================
1309                      ; Object system
1309                      ; =================================================================
1309                      
1309                      ; =================================================================
1309                      ; ------------------------------------------------
1309                      ; Settings
1309                      ; ------------------------------------------------
1309                      
1309 =0000016C            max_objects	equ	16
1309                      
1309                      ; =================================================================
1309                      ; ------------------------------------------------
1309                      ; Variables
1309                      ; ------------------------------------------------
1309                      	
1309                      		rsreset
1309 =00000245            obj_code	rw 1
1309 =0000026B            obj_size	rb 4			; left/right/up/down
1309 =00000278            obj_x		rw 2
1309 =00000285            obj_y		rw 2
1309 =00000295            obj_x_spd	rw 1
1309 =000002A5            obj_y_spd	rw 1
1309 =000002C5            obj_frame	rw 1			; current/old
1309 =000002D4            obj_indx	rb 1
1309 =000002E8            obj_anim_next	rb 1
1309 =000002FA            obj_anim_id	rb 1
1309 =00000310            obj_anim_id_old	rb 1
1309 =00000323            obj_anim_spd	rb 1
1309 =00000334            obj_status	rb 1
1309 =00000350            obj_col		rb 1			;%LLRRUUDD
1309 =00000361            sizeof_obj	rb 0
1309                      
1309                      ; --------------------------------
1309                      ; obj_status
1309                      ; --------------------------------
1309                      
1309 =000003DD            bitobj_dir	equ	0		; set for Left
1309 =00000402            bitobj_air	equ	1		; set for Jumping
1309 =0000042E            bitobj_solid	equ	2		; set to make it solid
1309                      
1309                      ; =================================================================
1309                      ; ------------------------------------------------
1309                      ; Subs
1309                      ; ------------------------------------------------
1309                      
1309                      objects_init:
1309 3E C3                 		ld	a,0C3h
130B 32 00 00              		ld	(ram_objjmpto),a
130E                       		
130E                       		;TODO: clear objects
130E C9                      		ret
130F                      
130F                      ; ------------------------------------------------
130F                      
130F                      objects_run:
130F FD 21 00 00          		ld	iy,ram_objbuffer
1313 06 10                   		ld	b,max_objects
1315                         		
1315                      @next_obj:
1315 FD 56 00                		ld	d,(iy+obj_code)
1318 FD 5E 01                		ld	e,(iy+(obj_code+1))
131B 7A                      		ld	a,d
131C B3                      		or	e
131D CA 00 00                		jp	z,@nothing
1320 7A                      		ld	a,d
1321 32 00 00                		ld	(ram_objjmpto+1),a
1324 7B                      		ld	a,e
1325 32 00 00                		ld	(ram_objjmpto+2),a
1328                         		
1328 C5                      		push	bc
1329 CD 00 00                 		call	ram_objjmpto
132C C1                      		pop	bc
132D                      @nothing:
132D 11 1B 00                		ld	de,sizeof_obj
1330 FD 19                   		add	iy,de
1332 10 E1                   		djnz	@next_obj
1334                      		
1334 C9                      		ret
1335                       
1335                      ; =================================================================
1335                      ; ------------------------------------------------
1335                      ; Subs
1335                      ; ---------------------------------------------
1335                      
1335                      ; --------------------------------
1335                      ; object_dplc
1335                      ; 
1335                      ; hl - art data
1335                      ; de - plc data
1335                      ; bc - vram
1335                      ; --------------------------------
1335                      
1335                      object_dplc:
1335 E5                   		push	hl
1336 C5                   		push	bc
1337 62                   		ld	h,d
1338 6B                   		ld	l,e
1339 79                   		ld	a,c
133A 01 00 00               		ld	bc,0
133D 4F                     		ld	c,a
133E 09                     		add	hl,bc
133F 54                     		ld	d,h
1340 5D                     		ld	e,l
1341 C1                     		pop	bc
1342 E1                     		pop	hl
1343                        		
1343 FD CB 19 46             		bit	bitobj_dir,(iy+obj_status)
1347 CA 00 00                		jp	z,@right
134A 23                      		inc 	hl
134B 23                      		inc 	hl
134C                      @right:
134C 7E                      		ld	a,(hl)
134D 23                      		inc 	hl
134E 66                      		ld	h,(hl)
134F 6F                      		ld	l,a
1350                         		
1350 1A                     		ld	a,(de)
1351 0F                     		rrca
1352 0F                     		rrca
1353 0F                     		rrca
1354 E6 E0                  		and	11100000b
1356 4F                     		ld	c,a
1357 1A                     		ld	a,(de)
1358 0F                     		rrca
1359 0F                     		rrca
135A 0F                     		rrca
135B E6 1F                  		and	00011111b
135D 47                     		ld	b,a
135E 09                      		add	hl,bc
135F                         		
135F 13                      		inc 	de
1360 1A                     		ld	a,(de)
1361 0F                     		rrca
1362 0F                     		rrca
1363 0F                     		rrca
1364 E6 E0                  		and	11100000b
1366 4F                     		ld	c,a
1367 1A                     		ld	a,(de)
1368 0F                     		rrca
1369 0F                     		rrca
136A 0F                     		rrca
136B E6 1F                  		and	00011111b
136D 47                      		ld	b,a
136E                      		
136E 11 BE CB             		ld	de,ram_tilestovdp
1371 01 9F 01             		ld	bc,19Fh
1374 ED B0                		ldir
1376                       		
1376                      @sameframe:
1376 C9                     		ret
1377                        		
1377                      ; 		; Start copying
1377                      ; 		ld	a,(de)
1377                      ; 		ld	b,a
1377                      ; @next:
1377                      ; 		call	@line
1377                      ;  		djnz	@next
1377                      ; 		ret
1377                      ; 		
1377                      ; @line:
1377                      ; 		rept 8
1377                      ; 		ld	c,(hl)		;this is litearly sonic1s tiledata-to-registers
1377                      ; 		inc 	hl
1377                      ; 		ld	d,(hl)
1377                      ; 		inc 	hl
1377                      ; 		ld	e,(hl)
1377                      ; 		inc 	hl
1377                      ; 		ld	a,c
1377                      ; 		out     (Vdata),a
1377                      ; 		ld	a,d
1377                      ; 		out     (Vdata),a
1377                      ; 		ld	a,e
1377                      ; 		out     (Vdata),a
1377                      ; 		ld	a,(hl)
1377                      ; 		inc 	hl
1377                      ; 		out     (Vdata),a
1377                      ; 		endr
1377                      ; 		ret
1377                      		
1377                      ; --------------------------------
1377                      ; object_show
1377                      ; 
1377                      ; hl - map data
1377                      ; de - vram | frame
1377                      ; --------------------------------
1377                      
1377                      object_show:
1377 7B                   		ld	a,e
1378 87                   		add 	a
1379 01 00 00             		ld	bc,0
137C 4F                   		ld	c,a
137D 09                   		add	hl,bc
137E                      		
137E 46                   		ld	b,(hl)
137F 23                   		inc 	hl
1380 4E                   		ld	c,(hl)
1381 61                   		ld	h,c
1382 68                   		ld	l,b
1383                      
1383 DD 2A AE CB          		ld	ix,(RAM_SprControl)
1387 46                   		ld	b,(hl)
1388 23                   		inc 	hl
1389                      @next_piece:
1389 CD 00 00             		call	@dopiece
138C 10 FB                		djnz	@next_piece
138E                      		
138E AF                   		xor	a
138F DD 77 00             		ld	(ix),a
1392 DD 77 02             		ld	(ix+2),a
1395 DD 77 03             		ld	(ix+3),a
1398 DD 22 AE CB          		ld	(RAM_SprControl),ix
139C C9                   		ret
139D                      
139D                      ; ---------------
139D                      
139D                      @dopiece:
139D                      
139D                      ; ---------------
139D                      ; Y POS
139D                      ; ---------------
139D                      
139D D5                   		push	de
139E 7E                    		ld	a,(hl)
139F 57                   		ld	d,a
13A0 3A 08 C8             		ld	a,(RAM_VdpRegs+1)
13A3 CB 47                		bit 	0,a
13A5 CA 00 00             		jp	z,@norml_y
13A8 CB 22                		sla	d
13AA                      @norml_y:
13AA 7A                   		ld	a,d
13AB 23                    		inc	hl
13AC E5                    		push	hl
13AD 21 00 00              		ld	hl,0
13B0 CB 7F                 		bit 	7,a
13B2 CA 00 00              		jp	z,@plusy
13B5 21 FF FF              		ld	hl,-1
13B8                      @plusy:
13B8 6F                    		ld	l,a
13B9 FD 56 0B              		ld	d,(iy+(obj_y+1))
13BC FD 5E 0A              		ld	e,(iy+obj_y)
13BF 13                    		inc 	de
13C0 19                    		add 	hl,de
13C1 11 40 00              		ld	de,40h
13C4 19                    		add 	hl,de
13C5 3A 00 00              		ld	a,(RAM_LevelBuffer+(lvl_y+1))
13C8 57                    		ld	d,a
13C9 3A 00 00              		ld	a,(RAM_LevelBuffer+(lvl_y))
13CC 5F                    		ld	e,a
13CD 37                    		scf
13CE ED 52                 		sbc 	hl,de
13D0                       		
13D0 7C                     		ld	a,h
13D1 FE 00                  		cp 	0
13D3 CA 00 00               		jp	z,@lower
13D6 2E 00                  		ld	l,0
13D8                      @lower:
13D8 7D                   		ld	a,l
13D9 DD 77 00             		ld	(ix),a
13DC DD 23                		inc 	ix
13DE E1                   		pop	hl
13DF                      		
13DF                      ; ---------------
13DF                      ; X POS
13DF                      ; ---------------
13DF                      
13DF 7E                   		ld	a,(hl)
13E0 57                   		ld	d,a
13E1 3A 08 C8             		ld	a,(RAM_VdpRegs+1)
13E4 CB 47                		bit 	0,a
13E6 CA 00 00             		jp	z,@norml_x
13E9 CB 22                		sla	d
13EB                      @norml_x:
13EB 7A                   		ld	a,d
13EC 23                    		inc	hl
13ED E5                    		push	hl
13EE                       		
13EE FD CB 19 46           		bit	bitobj_dir,(iy+obj_status)
13F2 CA 00 00              		jp	z,@right
13F5 ED 44                 		neg 	a
13F7 C6 08                 		add 	8
13F9                      @right:
13F9 21 00 00               		ld	hl,0
13FC CB 7F                  		bit 	7,a
13FE F2 00 00             		jp	p,@plus
1401 21 FF FF               		ld	hl,-1
1404                      @plus:
1404 6F                    		ld	l,a
1405 FD 56 07              		ld	d,(iy+(obj_x+1))
1408 FD 5E 06              		ld	e,(iy+obj_x)
140B 19                    		add 	hl,de
140C 3A 00 00              		ld	a,(RAM_LevelBuffer+(lvl_x+1))
140F 57                    		ld	d,a
1410 3A 00 00              		ld	a,(RAM_LevelBuffer+(lvl_x))
1413 5F                    		ld	e,a
1414 37                    		scf
1415 ED 52                 		sbc 	hl,de
1417                      
1417 7C                     		ld	a,h
1418 FE 00                  		cp 	0
141A CA 00 00               		jp	z,@notsame
141D 2E 00                  		ld	l,0
141F DD 2B                  		dec 	ix
1421 AF                     		xor	a
1422 DD 77 00               		ld	(ix),a
1425 DD 23                  		inc 	ix
1427                      @notsame:
1427                      		
1427 7D                   		ld	a,l
1428 DD 77 00             		ld	(ix),a
142B DD 23                		inc 	ix
142D E1                      		pop	hl
142E D1                   		pop	de
142F                      		
142F                      ; ---------------
142F                      ; CHAR
142F                      ; ---------------
142F                      
142F 7E                   		ld	a,(hl)
1430 23                   		inc 	hl
1431 82                   		add	a,d
1432 DD 77 00             		ld	(ix),a
1435 DD 23                		inc 	ix
1437                      
1437                      ; ---------------
1437 C9                   		ret
1438                      
1438                      
1438                      ; ----------------------------------------------
1438                      ; Object animation
1438                      ; 
1438                      ; Input
1438                      ; hl - Animation data
1438                      ; 
1438                      ; Output
1438                      ; a - Frame
1438                      ; 
1438                      ; Uses:
1438                      ; c/de
1438                      ; ----------------------------------------------
1438                       
1438                      Object_Animate:
1438 FD 4E 17             		ld	c,(iy+(obj_anim_id+1))
143B FD 7E 16             		ld	a,(iy+(obj_anim_id))
143E B9                   		cp	c
143F CA 00 00             		jp	z,@SameThing
1442 FD 77 17             		ld	(iy+(obj_anim_id+1)),a
1445 AF                   		xor	a
1446 FD 77 15             		ld	(iy+(obj_anim_next)),a
1449                      @SameThing:
1449 FD 7E 16             		ld	a,(iy+(obj_anim_id))
144C FE FF                		cp	-1
144E CA 00 00             		jp	z,@Return
1451 87                   		add 	a
1452 11 00 00             		ld	de,0
1455 5F                   		ld	e,a
1456 19                   		add 	hl,de
1457                      		
1457 7E                   		ld	a,(hl)
1458 23                   		inc 	hl
1459 66                   		ld	h,(hl)
145A 6F                   		ld	l,a
145B                       
145B 7E                   		ld	a,(hl)
145C 23                   		inc 	hl
145D 47                   		ld	b,a
145E FD 7E 18             		ld	a,(iy+(obj_anim_spd))
1461 3D                   		dec	a
1462 FD 77 18             		ld	(iy+(obj_anim_spd)),a
1465 F2 00 00             		jp	p,@Return
1468 FD 70 18             		ld	(iy+(obj_anim_spd)),b
146B                      			
146B 11 00 00             		ld	de,0
146E FD 7E 15             		ld 	a,(iy+(obj_anim_next))
1471 5F                   		ld	e,a
1472 7E                   		ld	a,(hl)
1473 4F                   		ld	c,a
1474 19                   		add 	hl,de
1475                      		
1475 7E                   		ld	a,(hl)
1476 23                   		inc 	hl
1477 FE FF                		cp	0FFh
1479 CA 00 00             		jp	z,@NoAnim
147C FE FE                		cp	0FEh
147E CA 00 00             		jp	z,@GoToFrame
1481 FE FD                		cp	0FDh
1483 CA 00 00             		jp	z,@LastFrame
1486                      
1486 FD 77 12             		ld	(iy+(obj_frame)),a
1489 FD 34 15             		inc 	(iy+(obj_anim_next))
148C                      @Return:
148C C9                   		ret 
148D                        
148D                      @NoAnim:
148D 3E 01                		ld	a,1
148F FD 77 15             		ld	(iy+(obj_anim_next)),a
1492 79                   		ld	a,c
1493 FD 77 12             		ld	(iy+(obj_frame)),a
1496 C9                   		ret
1497                      		
1497                      @LastFrame:
1497 AF                   		xor	a
1498 FD 77 18             		ld	(iy+(obj_anim_spd)),a
149B C9                   		ret 
149C                      		
149C                      @GoToFrame:
149C AF                   		xor	a
149D FD 77 15             		ld	(iy+(obj_anim_next)),a
14A0 23                   		inc 	hl
14A1 7E                   		ld	a,(hl)
14A2 FD 77 16             		ld	(iy+(obj_anim_next+1)),a
14A5 C9                   		ret
14A6                      		
14A6                      ; ----------------------------------------------
14A6                      ; Object Collision
14A6                      ; ----------------------------------------------
14A6                      
14A6                      ; ************************
14A6                      ; Find floor collision
14A6                      ; CENTER
14A6                      ; 
14A6                      ; Input:
14A6                      ; iy - Object
14A6                      ; ix - RAM_LevelBuffer
14A6                      ; hl - collision data
14A6                      ; 
14A6                      ; Output:
14A6                      ; a - CENTER
14A6                      ; ************************
14A6                      
14A6                      object_FindPrz_Floor:
14A6 E5                   		push	hl
14A7 DD 21 00 00          		ld	ix,ram_levelbuffer
14AB 21 00 00             		ld	hl,RAM_LevelPrizes
14AE CD 00 00             		call	objSearchCol_Floor
14B1 E1                   		pop	hl
14B2 C9                   		ret
14B3                      		
14B3                      object_FindCol_Floor:
14B3 E5                   		push	hl
14B4 DD 21 00 00          		ld	ix,ram_levelbuffer
14B8 DD 66 00             		ld	h,(ix+(lvl_collision+1))
14BB DD 6E 00             		ld	l,(ix+(lvl_collision))
14BE CD 00 00             		call	objSearchCol_Floor
14C1 E1                   		pop	hl
14C2 C9                   		ret
14C3                      		
14C3                      objSearchCol_Floor:
14C3                      ; 		Y-pos
14C3 01 00 00             		ld	bc,0
14C6 FD 7E 0A              		ld	a,(iy+(obj_y))
14C9 0F                     		rrca
14CA 0F                     		rrca
14CB 0F                     		rrca
14CC 0F                     		rrca
14CD E6 0F                  		and	0Fh
14CF 4F                     		ld	c,a
14D0 FD 56 0B              		ld	d,(iy+(obj_y+1))
14D3 AF                   		xor	a
14D4 CB 7A                		bit 	7,d
14D6 C2 00 00             		jp	nz,@no_col
14D9 7A                   		ld	a,d
14DA 0F                     		rrca
14DB 0F                     		rrca
14DC 0F                     		rrca
14DD 0F                     		rrca
14DE E6 F0                  		and	0F0h
14E0 B1                     		or	c
14E1 4F                     		ld	c,a
14E2                      		
14E2 DD 56 00              		ld	d,(ix+(lvl_x_size+1))
14E5 DD 5E 00             		ld	e,(ix+(lvl_x_size))
14E8                      @county:
14E8 19                      		add	hl,de
14E9 0D                    		dec	c
14EA C2 E8 14              		jp	nz,@county
14ED                      		
14ED                      ; 		X-pos
14ED AF                   		xor	a
14EE FD 56 07              		ld	d,(iy+(obj_x+1))
14F1 CB 7A                  		bit 	7,d
14F3 C2 00 00               		jp	nz,@no_col
14F6 FD 7E 06              		ld	a,(iy+(obj_x))
14F9 0F                     		rrca
14FA 0F                     		rrca
14FB 0F                     		rrca
14FC 0F                     		rrca
14FD E6 0F                  		and	0Fh
14FF 5F                     		ld	e,a
1500 FD 7E 07              		ld	a,(iy+(obj_x+1))
1503 0F                     		rrca
1504 0F                     		rrca
1505 0F                     		rrca
1506 0F                     		rrca
1507 E6 F0                  		and	0F0h
1509 B3                     		or	e
150A 5F                     		ld	e,a
150B FD 7E 07              		ld	a,(iy+(obj_x+1))
150E 0F                     		rrca
150F 0F                     		rrca
1510 0F                     		rrca
1511 0F                     		rrca
1512 E6 0F                  		and	0Fh
1514 57                     		ld	d,a
1515 19                   		add 	hl,de
1516                      		;Return
1516 7E                    		ld	a,(hl)
1517                      @no_col:
1517 C9                    		ret 
1518                      
1518                      ; ************************
1518                      ; Find wall collision
1518                      ; CENTER
1518                      ; 
1518                      ; Input:
1518                      ; iy - Object
1518                      ; ix - RAM_LevelBuffer
1518                      ; hl - collision data
1518                      ; 
1518                      ; Output:
1518                      ; a - CENTER
1518                      ; ************************
1518                      
1518                      object_FindPrz_Wall:
1518 E5                   		push	hl
1519 DD 21 00 00          		ld	ix,ram_levelbuffer
151D 21 00 00             		ld	hl,RAM_LevelPrizes
1520 CD 00 00             		call	objSearchCol_Wall
1523 E1                   		pop	hl
1524 C9                   		ret
1525                      		
1525                      object_FindCol_Wall:
1525 E5                   		push	hl
1526 DD 21 00 00          		ld	ix,ram_levelbuffer
152A DD 66 00             		ld	h,(ix+(lvl_collision+1))
152D DD 6E 00             		ld	l,(ix+(lvl_collision))
1530 CD 00 00             		call	objSearchCol_Wall
1533 E1                   		pop	hl
1534 C9                   		ret
1535                      		
1535                      objSearchCol_Wall:
1535                      ; 		Y-pos
1535 01 00 00             		ld	bc,0
1538 FD 56 0B              		ld	d,(iy+(obj_y+1))
153B FD 5E 0A              		ld	e,(iy+(obj_y))
153E 1B                    		dec	de
153F 3E 01                 		ld	a,1
1541 CB 7A                 		bit 	7,d
1543 C2 00 00              		jp	nz,@no_col
1546 7B                    		ld	a,e
1547 0F                     		rrca
1548 0F                     		rrca
1549 0F                     		rrca
154A 0F                     		rrca
154B E6 0F                  		and	0Fh
154D 4F                     		ld	c,a
154E 7A                   		ld	a,d
154F 0F                     		rrca
1550 0F                     		rrca
1551 0F                     		rrca
1552 0F                     		rrca
1553 E6 F0                  		and	0F0h
1555 B1                     		or	c
1556 4F                     		ld	c,a
1557                      		
1557 DD 56 00              		ld	d,(ix+(lvl_x_size+1))
155A DD 5E 00             		ld	e,(ix+(lvl_x_size))
155D                      @county:
155D 19                      		add	hl,de
155E 0D                    		dec	c
155F C2 5D 15              		jp	nz,@county
1562                      		
1562                      ; 		X-pos
1562 3E 01                  		ld	a,1
1564 FD 56 07              		ld	d,(iy+(obj_x+1))
1567 CB 7A                  		bit 	7,d
1569 C2 00 00               		jp	nz,@no_col
156C FD 7E 06              		ld	a,(iy+(obj_x))
156F 0F                     		rrca
1570 0F                     		rrca
1571 0F                     		rrca
1572 0F                     		rrca
1573 E6 0F                  		and	0Fh
1575 5F                     		ld	e,a
1576 FD 7E 07              		ld	a,(iy+(obj_x+1))
1579 0F                     		rrca
157A 0F                     		rrca
157B 0F                     		rrca
157C 0F                     		rrca
157D E6 F0                  		and	0F0h
157F B3                     		or	e
1580 5F                     		ld	e,a
1581 FD 7E 07              		ld	a,(iy+(obj_x+1))
1584 0F                     		rrca
1585 0F                     		rrca
1586 0F                     		rrca
1587 0F                     		rrca
1588 E6 0F                  		and	0Fh
158A 57                     		ld	d,a
158B 19                   		add 	hl,de
158C                      		;Return
158C 7E                    		ld	a,(hl)
158D                      @no_col:
158D C9                    		ret 
158E                       		
158E                      ; ************************
158E                      ; Find floor collision
158E                      ; LEFT/RIGHT
158E                      ;
158E                      ; Input:
158E                      ; iy - Object
158E                      ; ix - RAM_LevelBuffer
158E                      ; hl - collision data
158E                      ; 
158E                      ; Output:
158E                      ; b | RIGHT
158E                      ; c | LEFT
158E                      ; 
158E                      ; Uses:
158E                      ; Stack, EXX
158E                      ; ************************
158E                      
158E                      object_FindPrz_FloorSides:
158E E5                   		push	hl
158F DD 21 00 00          		ld	ix,ram_levelbuffer
1593 21 00 00             		ld	hl,RAM_LevelPrizes
1596 CD 00 00             		call	objSearchCol_FloorSides
1599 E1                   		pop	hl
159A C9                   		ret
159B                      		
159B                      object_FindCol_FloorSides:
159B E5                   		push	hl
159C DD 21 00 00          		ld	ix,ram_levelbuffer
15A0 DD 66 00             		ld	h,(ix+(lvl_collision+1))
15A3 DD 6E 00             		ld	l,(ix+(lvl_collision))
15A6 CD 00 00             		call	objSearchCol_FloorSides
15A9 E1                   		pop	hl
15AA C9                   		ret
15AB                      		
15AB                      objSearchCol_FloorSides:
15AB                      ; 		Y-pos
15AB 01 00 00             		ld	bc,0
15AE FD 7E 0A              		ld	a,(iy+(obj_y))
15B1 0F                     		rrca
15B2 0F                     		rrca
15B3 0F                     		rrca
15B4 0F                     		rrca
15B5 E6 0F                  		and	0Fh
15B7 4F                     		ld	c,a
15B8 FD 56 0B              		ld	d,(iy+(obj_y+1))
15BB AF                   		xor	a
15BC CB 7A                		bit 	7,d
15BE C2 00 00             		jp	nz,@no_col
15C1 7A                   		ld	a,d
15C2 0F                     		rrca
15C3 0F                     		rrca
15C4 0F                     		rrca
15C5 0F                     		rrca
15C6 E6 F0                  		and	0F0h
15C8 B1                     		or	c
15C9 4F                     		ld	c,a
15CA                        		
15CA DD 56 00              		ld	d,(ix+(lvl_x_size+1))
15CD DD 5E 00             		ld	e,(ix+(lvl_x_size))
15D0                      @county:
15D0 19                      		add	hl,de
15D1 0D                    		dec	c
15D2 C2 D0 15              		jp	nz,@county
15D5                      		
15D5                      ; ------------------------
15D5                      ; X check
15D5                      ; LEFT
15D5                      ; ------------------------
15D5                      
15D5 E5                    		push	hl
15D6 E5                    		push	hl
15D7                       		
15D7 FD 66 07              		ld	h,(iy+(obj_x+1))
15DA FD 6E 06               		ld	l,(iy+(obj_x))
15DD 11 01 00               		ld	de,1
15E0 19                     		add	hl,de
15E1 FD 7E 02              		ld	a,(iy+(obj_size))
15E4 87                    		add 	a
15E5 87                    		add 	a
15E6 87                    		add 	a
15E7 5F                     		ld	e,a
15E8 37                     		scf
15E9 ED 52                 		sbc	hl,de
15EB CB 7C                 		bit 	7,h
15ED C2 00 00              		jp	nz,@bad_left
15F0                       		
15F0 54                     		ld	d,h
15F1 5D                      		ld	e,l
15F2                        		
15F2 7B                    		ld	a,e
15F3 0F                     		rrca
15F4 0F                     		rrca
15F5 0F                     		rrca
15F6 0F                     		rrca
15F7 E6 0F                  		and	0Fh
15F9 6F                     		ld	l,a
15FA 7A                    		ld	a,d
15FB 0F                     		rrca
15FC 0F                     		rrca
15FD 0F                     		rrca
15FE 0F                     		rrca
15FF E6 F0                  		and	0F0h
1601 B5                     		or	l
1602 6F                     		ld	l,a
1603 7A                    		ld	a,d
1604 0F                     		rrca
1605 0F                     		rrca
1606 0F                     		rrca
1607 0F                     		rrca
1608 E6 0F                  		and	0Fh
160A 67                     		ld	h,a
160B                        		
160B 54                     		ld	d,h
160C 5D                     		ld	e,l
160D E1                     		pop	hl
160E 19                    		add	hl,de
160F                      		
160F 7E                    		ld	a,(hl)
1610 4F                    		ld	c,a
1611 18 00                 		jr	@good_left
1613                      
1613                      @bad_left:
1613 0E 00                		ld	c,0
1615 E1                   		pop	hl
1616                      
1616                      @good_left:
1616                      
1616                      ; ------------------------
1616                      ; X check
1616                      ; RIGHT
1616                      ; ------------------------
1616                        		
1616 FD 66 07              		ld	h,(iy+(obj_x+1))
1619 FD 6E 06              		ld	l,(iy+(obj_x))
161C 2B                    		dec	hl
161D 11 00 00              		ld	de,0
1620 FD 7E 03              		ld	a,(iy+(obj_size+1))
1623 87                    		add 	a
1624 87                    		add 	a
1625 87                    		add 	a
1626 5F                     		ld	e,a
1627 19                    		add	hl,de
1628 54                     		ld	d,h
1629 5D                     		ld	e,l
162A CB 7C                 		bit 	7,h
162C C2 00 00              		jp	nz,@bad_right
162F                       		
162F 7B                    		ld	a,e
1630 0F                     		rrca
1631 0F                     		rrca
1632 0F                     		rrca
1633 0F                     		rrca
1634 E6 0F                  		and	0Fh
1636 6F                     		ld	l,a
1637 7A                    		ld	a,d
1638 0F                     		rrca
1639 0F                     		rrca
163A 0F                     		rrca
163B 0F                     		rrca
163C E6 F0                  		and	0F0h
163E B5                     		or	l
163F 6F                     		ld	l,a
1640 7A                    		ld	a,d
1641 0F                     		rrca
1642 0F                     		rrca
1643 0F                     		rrca
1644 0F                     		rrca
1645 E6 0F                  		and	0Fh
1647 67                     		ld	h,a
1648                        		
1648 54                     		ld	d,h
1649 5D                     		ld	e,l
164A E1                     		pop	hl
164B 19                   		add 	hl,de
164C                      		
164C 7E                    		ld	a,(hl)
164D 47                    		ld	b,a
164E C9                    		ret 
164F                       		
164F                      @bad_right:
164F 06 00                		ld	b,0
1651 E1                     		pop	hl
1652                        		
1652                      ; ------------------------
1652                      
1652                      @no_col:
1652 C9                   		ret
1653                      		
1653                      		
1653                      ; ************************
1653                      ; Find wall collision
1653                      ;
1653                      ; Input:
1653                      ; iy - Object
1653                      ; ix - RAM_LevelBuffer
1653                      ; hl - collision data
1653                      ; 
1653                      ; Output:
1653                      ; b | RIGHT
1653                      ; c | LEFT
1653                      ; 
1653                      ; Uses:
1653                      ; Stack, EXX
1653                      ; ************************
1653                      
1653                      object_FindPrz_WallSides:
1653 E5                   		push	hl
1654 DD 21 00 00          		ld	ix,ram_levelbuffer
1658 21 00 00             		ld	hl,RAM_LevelPrizes
165B CD 00 00             		call	objSearchCol_WallSides
165E E1                   		pop	hl
165F C9                   		ret
1660                      		
1660                      object_FindCol_WallSides:
1660 E5                   		push	hl
1661 DD 21 00 00          		ld	ix,ram_levelbuffer
1665 DD 66 00             		ld	h,(ix+(lvl_collision+1))
1668 DD 6E 00             		ld	l,(ix+(lvl_collision))
166B CD 00 00             		call	objSearchCol_WallSides
166E E1                   		pop	hl
166F C9                   		ret
1670                      		
1670                      objSearchCol_WallSides:
1670                      ; 		Y-pos
1670 01 00 00             		ld	bc,0
1673 FD 7E 0A              		ld	a,(iy+(obj_y))
1676 0F                     		rrca
1677 0F                     		rrca
1678 0F                     		rrca
1679 0F                     		rrca
167A E6 0F                  		and	0Fh
167C FD 56 0B              		ld	d,(iy+(obj_y+1))
167F CB 7A                		bit 	7,d
1681 C2 00 00             		jp	nz,@no_col
1684 4F                     		ld	c,a
1685 7A                   		ld	a,d
1686 0F                     		rrca
1687 0F                     		rrca
1688 0F                     		rrca
1689 0F                     		rrca
168A E6 F0                  		and	0F0h
168C B1                     		or	c
168D 4F                     		ld	c,a
168E 0D                     		dec 	c
168F                        		
168F DD 56 00              		ld	d,(ix+(lvl_x_size+1))
1692 DD 5E 00             		ld	e,(ix+(lvl_x_size))
1695                      @county:
1695 19                      		add	hl,de
1696 0D                    		dec	c
1697 C2 95 16              		jp	nz,@county
169A                      		
169A                      ; ------------------------
169A                      ; X check
169A                      ; LEFT
169A                      ; ------------------------
169A                      
169A E5                    		push	hl
169B E5                    		push	hl
169C                       		
169C FD 66 07              		ld	h,(iy+(obj_x+1))
169F FD 6E 06               		ld	l,(iy+(obj_x))
16A2 FD 7E 02               		ld	a,(iy+(obj_size))
16A5 87                     		add 	a
16A6 87                     		add 	a
16A7 87                     		add 	a
16A8 2F                     		cpl
16A9 16 FF                  		ld	d,-1
16AB 5F                      		ld	e,a
16AC 13                      		inc 	de
16AD 19                    		add	hl,de
16AE CB 7C                 		bit 	7,h
16B0 C2 00 00              		jp	nz,@bad_left
16B3 54                     		ld	d,h
16B4 5D                      		ld	e,l
16B5                        		
16B5 7B                    		ld	a,e
16B6 0F                     		rrca
16B7 0F                     		rrca
16B8 0F                     		rrca
16B9 0F                     		rrca
16BA E6 0F                  		and	0Fh
16BC 6F                     		ld	l,a
16BD 7A                    		ld	a,d
16BE 0F                     		rrca
16BF 0F                     		rrca
16C0 0F                     		rrca
16C1 0F                     		rrca
16C2 E6 F0                  		and	0F0h
16C4 B5                     		or	l
16C5 6F                     		ld	l,a
16C6 7A                    		ld	a,d
16C7 0F                     		rrca
16C8 0F                     		rrca
16C9 0F                     		rrca
16CA 0F                     		rrca
16CB E6 0F                  		and	0Fh
16CD 67                     		ld	h,a
16CE                        		
16CE 54                     		ld	d,h
16CF 5D                     		ld	e,l
16D0 E1                     		pop	hl
16D1 19                    		add	hl,de
16D2                      		
16D2 7E                    		ld	a,(hl)
16D3 4F                    		ld	c,a
16D4 18 00                 		jr	@good_left
16D6                      
16D6                      @bad_left:
16D6 0E 01                		ld	c,1
16D8 E1                   		pop	hl
16D9                      
16D9                      @good_left:
16D9                      
16D9                      ; ------------------------
16D9                      ; X check
16D9                      ; RIGHT
16D9                      ; ------------------------
16D9                        		
16D9 FD 66 07              		ld	h,(iy+(obj_x+1))
16DC FD 6E 06              		ld	l,(iy+(obj_x))
16DF 11 00 00              		ld	de,0
16E2 FD 7E 03              		ld	a,(iy+(obj_size+1))
16E5 87                    		add 	a
16E6 87                    		add 	a
16E7 87                    		add 	a
16E8 5F                     		ld	e,a
16E9 19                    		add	hl,de
16EA CB 7C                 		bit 	7,h
16EC C2 00 00              		jp	nz,@bad_right
16EF 54                     		ld	d,h
16F0 5D                     		ld	e,l
16F1                       		
16F1 7B                    		ld	a,e
16F2 0F                     		rrca
16F3 0F                     		rrca
16F4 0F                     		rrca
16F5 0F                     		rrca
16F6 E6 0F                  		and	0Fh
16F8 6F                     		ld	l,a
16F9 7A                    		ld	a,d
16FA 0F                     		rrca
16FB 0F                     		rrca
16FC 0F                     		rrca
16FD 0F                     		rrca
16FE E6 F0                  		and	0F0h
1700 B5                     		or	l
1701 6F                     		ld	l,a
1702 7A                    		ld	a,d
1703 0F                     		rrca
1704 0F                     		rrca
1705 0F                     		rrca
1706 0F                     		rrca
1707 E6 0F                  		and	0Fh
1709 67                     		ld	h,a
170A                        		
170A 54                     		ld	d,h
170B 5D                     		ld	e,l
170C E1                     		pop	hl
170D 19                   		add 	hl,de
170E                      		
170E 7E                    		ld	a,(hl)
170F 47                    		ld	b,a
1710 C9                    		ret 
1711                       		
1711                      @bad_right:
1711 06 01                		ld	b,1
1713 E1                     		pop	hl
1714                        		
1714                      ; ------------------------
1714                      
1714                      @no_col:
1714 C9                   		ret
1715                      		
1715                      ; =================================================================
1715                      ; ------------------------------------------------
1715                      ; Includes
1715                      ; ------------------------------------------------
1715                      
1715                      		include	"modes/level/data/object/player/code.asm"
1715                      ; =================================================================
1715                      ; Player object
1715                      ; =================================================================
1715                      
1715                      ; C2DD
1715                      
1715                      obj_test:
1715 FD 7E 14             		ld	a,(iy+obj_indx)
1718 CB 27                		sla	a
171A 01 00 00             		ld	bc,0
171D 4F                   		ld	c,a
171E 21 00 00             		ld	hl,@list
1721 09                    		add 	hl,bc
1722 E9                   		jp	(hl)
1723                      ; -------------------------------------------------
1723                      
1723                      @list:
1723 18 00                		jr	@init
1725 18 00                		jr	@main
1727                      	
1727                      ; =================================================================
1727                      ; ------------------------------------------------
1727                      ; Index $00: Main
1727                      ; ------------------------------------------------
1727                      
1727                      @init:
1727 AF                   		xor	a
1728 FD 77 06             		ld	(iy+obj_x),a
172B FD 77 0A             		ld	(iy+obj_y),a
172E                      		
172E 11 01 01             		ld	de,0101h
1731 FD 72 02             		ld	(iy+(obj_size)),d
1734 FD 73 03             		ld	(iy+(obj_size+1)),e
1737                      		
1737 FD 7E 14             		ld	a,(iy+obj_indx)
173A 3C                   		inc	a
173B FD 77 14             		ld	(iy+obj_indx),a
173E C3 00 00             		jp	@render
1741                      		
1741                      ; =================================================================
1741                      ; ------------------------------------------------
1741                      ; Index $01: Main
1741                      ; ------------------------------------------------
1741                      
1741                      @main:
1741 3A 21 C8             		ld	a,(ram_joypads+on_hold)
1744 CB 67                		bit 	bitJoy1,a
1746 C2 00 00             		jp	nz,@debug_mode
1749                      
1749                      ; ----------------------------------
1749                      ; Player
1749                      ; ----------------------------------
1749                      
1749 FD CB 19 4E          		bit	bitobj_air,(iy+obj_status)
174D CA 00 00             		jp	z,@idleanim
1750                      
1750 FD 66 11             		ld	h,(iy+(obj_y_spd+1))
1753 FD 6E 10             		ld	l,(iy+(obj_y_spd))
1756 7C                   		ld	a,h
1757 B5                   		or	l
1758 CA 00 00             		jp	z,@idleanim
175B CB 7C                		bit 	7,h
175D C2 00 00             		jp	nz,@idleanim
1760                      
1760 3E 03                  		ld	a,3
1762 FD 77 16                		ld	(iy+obj_anim_id),a
1765                        		
1765                      @idleanim:
1765                      
1765                      ; ----------------------------------
1765                      ; Player physics
1765                      ; ----------------------------------
1765                      
1765                      ; ***************
1765                      ; X Speed stuff
1765                      ; ***************
1765                      
1765 FD 66 0F             		ld	h,(iy+(obj_x_spd+1))
1768 FD 6E 0E             		ld	l,(iy+(obj_x_spd))
176B CD 00 00             		call	@Player_Friction
176E CD 00 00             		call	@Player_Walk
1771 E5                   		push	hl
1772 CD 00 00             		call	@update_xspd
1775 D9                   		exx
1776 C1                   		pop	bc
1777 D9                   		exx
1778 CD 00 00             		call	@Collision_Wall
177B                      ; 		call	@ObjCol_Wall
177B                      		
177B                      ; ***************
177B                      ; Y Speed stuff
177B                      ; ***************
177B                      
177B FD 66 11             		ld	h,(iy+(obj_y_spd+1))
177E FD 6E 10             		ld	l,(iy+(obj_y_spd))
1781 CD 00 00             		call	@Player_Jump
1784 E5                   		push	hl
1785 CD 00 00             		call	@update_yspd
1788 D9                   		exx
1789 D1                   		pop	de
178A 7A                    		ld	a,d
178B D9                   		exx
178C FA 00 00              		jp	m,@minusy
178F CD 00 00              		call	@Collision_Floor
1792                      ; 		call	@ObjCol_Floor
1792                      @minusy:
1792 D9                   		exx
1793 7A                    		ld	a,d
1794 D9                   		exx
1795 CA 00 00              		jp	z,@zeroy
1798                      		
1798 CD 00 00                 		call	@Collision_Ceiling
179B                      ; 		call	@ObjCol_Ceiling
179B                      @zeroy:
179B                      
179B                      ; ***************
179B                      ; Save them
179B                      ; ***************
179B                      
179B D9                   		exx
179C FD 70 0F             		ld	(iy+(obj_x_spd+1)),b
179F FD 71 0E             		ld	(iy+(obj_x_spd)),c
17A2 FD 72 11              		ld	(iy+(obj_y_spd+1)),d
17A5 FD 73 10              		ld	(iy+(obj_y_spd)),e
17A8 D9                   		exx
17A9                      		
17A9                      ; ------------------------
17A9                      ; Animation ID
17A9                      ; ------------------------
17A9                      
17A9 FD CB 19 4E           		bit	bitobj_air,(iy+obj_status)
17AD C2 00 00              		jp	nz,@air
17B0 0E 01                 		ld	c,1
17B2 FD 46 0F              		ld	b,(iy+(obj_x_spd+1))
17B5 FD 7E 0E              		ld	a,(iy+(obj_x_spd))
17B8 B0                    		or	b
17B9 C2 00 00              		jp	nz,@walking
17BC 0E 00                 		ld	c,0
17BE                      @walking:
17BE 79                    		ld	a,c
17BF FD 77 16              		ld	(iy+obj_anim_id),a
17C2                      @air:
17C2                      
17C2 CD 00 00             		call	@plyr_camera
17C5                      	
17C5 C3 00 00             		jp	@render
17C8                      		
17C8                      ; =================================================================
17C8                      ; ------------------------------------------------
17C8                      ; Render
17C8                      ; ------------------------------------------------
17C8                      
17C8                      ; TODO: NO USAR DIRECCIONES ODD AL VRAM
17C8                      ; estamos en 8x16
17C8                      
17C8                      @render:
17C8 21 00 00             		ld	hl,ani_player
17CB CD 38 14             		call	object_animate
17CE                      		
17CE 21 00 00             		ld	hl,map_player
17D1 16 00                		ld	d,0
17D3 FD 5E 12             		ld	e,(iy+obj_frame)
17D6 CD 77 13             		call	object_show
17D9                      		
17D9 21 00 00             		ld	hl,art_player
17DC 11 00 00             		ld	de,plc_player
17DF 06 00                		ld	b,0
17E1 FD 4E 12               		ld	c,(iy+obj_frame)
17E4 CD 35 13             		call	object_dplc
17E7 C9                   		ret
17E8                      		
17E8                      ; =================================================================
17E8                      ; ------------------------------------------------
17E8                      ; Subs
17E8                      ; ------------------------------------------------
17E8                      
17E8                      @update_xspd:
17E8 7C                   		ld	a,h
17E9 FD 66 07             		ld	h,(iy+(obj_x+1))
17EC FD 6E 06             		ld	l,(iy+obj_x)
17EF 11 00 00              		ld	de,0
17F2 CB 7F                		bit 	7,a
17F4 CA 00 00             		jp	z,@plusx
17F7                      ; 		cp	0FFh
17F7                      ;  		jp	z,@noupdx
17F7                      ;  		inc 	a
17F7 11 FF FF              		ld	de,-1
17FA                      @plusx:	
17FA 5F                   		ld	e,a
17FB 19                   		add 	hl,de
17FC                      @noupdx:
17FC FD 74 07             		ld	(iy+(obj_x+1)),h
17FF FD 75 06             		ld	(iy+obj_x),l
1802 C9                   		ret
1803                      
1803                      ; ---------------------------------
1803                      
1803                      @update_yspd:
1803 7C                   		ld	a,h
1804 FD 66 0B             		ld	h,(iy+(obj_y+1))
1807 FD 6E 0A             		ld	l,(iy+obj_y)
180A 11 00 00              		ld	de,0
180D CB 7F                		bit 	7,a
180F CA 00 00             		jp	z,@plusy
1812                      ; 		cp	0FFh
1812                      ;  		jp	z,@noupdy
1812 11 FF FF              		ld	de,-1
1815                      @plusy:	
1815 5F                   		ld	e,a
1816 19                   		add 	hl,de
1817                      @noupdy:
1817 FD 74 0B             		ld	(iy+(obj_y+1)),h
181A FD 75 0A             		ld	(iy+obj_y),l
181D C9                   		ret
181E                      	
181E                      ; **********************************
181E                      ; Player Walk
181E                      ; **********************************
181E                      
181E                      @Player_Walk:
181E                      
181E                      ; --------------
181E                      ; RIGHT
181E                      ; --------------
181E                      
181E 3A 21 C8                		ld	a,(ram_joypads+on_hold)
1821 CB 5F                   		bit 	bitJoyRight,a
1823 CA 00 00                		jp	z,@not_r
1826 11 50 00             		ld	de,50h
1829 19                   		add	hl,de
182A 7C                   		ld	a,h
182B FE 03                		cp	3
182D DA 00 00             		jp	c,@lowxr
1830 26 03                		ld	h,3
1832                      @lowxr:
1832 FD CB 19 86           		res	bitobj_dir,(iy+obj_status)
1836                      @not_r:
1836                      
1836                      ; --------------
1836                      ; LEFT
1836                      ; --------------
1836                      
1836 3A 21 C8                		ld	a,(ram_joypads+on_hold)
1839 CB 57                   		bit 	bitJoyLeft,a
183B CA 00 00                		jp	z,@not_l
183E FD 56 07                		ld	d,(iy+(obj_x+1))
1841 FD 7E 06                		ld	a,(iy+(obj_x))
1844 B2                      		or	d
1845 CA 00 00                		jp	z,@not_l
1848 CB 7A                   		bit 	7,d
184A C2 00 00                		jp	nz,@not_l
184D                         		
184D 11 B0 FF             		ld	de,-50h
1850 19                   		add	hl,de
1851                      
1851 7C                   		ld	a,h
1852 FE FD                		cp	-3
1854 D2 00 00             		jp	nc,@lowxl
1857 26 FD                		ld	h,-3
1859                      @lowxl:
1859 FD CB 19 C6           		set	bitobj_dir,(iy+obj_status)
185D C9                    		ret 
185E                       		
185E                      @not_l:
185E                      ; 		ld	hl,0
185E                      ; 		xor	a
185E                      ;    		ld	(iy+(obj_x+1)),a
185E                      ;    		ld	(iy+(obj_x)),a
185E C9                   		ret
185F                      		
185F                      ; **********************************
185F                      ; Player friction
185F                      ; **********************************
185F                      
185F                      @Player_Friction:
185F 7D                    		ld	a,l
1860 B4                    		or	h
1861 CA 00 00              		jp	z,@finespeed
1864                      		
1864 FD CB 19 46             		bit	bitobj_dir,(iy+obj_status)
1868 C2 00 00              		jp	nz,@left
186B 11 D0 FF              		ld	de,-30h		;original: 20h
186E 19                    		add 	hl,de
186F CB 7C                 		bit 	7,h
1871 CA 00 00              		jp	z,@finespeed
1874 21 00 00              		ld	hl,0
1877 C9                   		ret
1878                      @left:
1878 11 30 00              		ld	de,30h		;original: 20h
187B 19                    		add 	hl,de
187C CB 7C                 		bit 	7,h
187E C2 00 00              		jp	nz,@finespeed
1881 21 00 00              		ld	hl,0
1884                      @finespeed:
1884 C9                   		ret
1885                      		
1885                      ; **********************************
1885                      ; Player Jump
1885                      ; **********************************
1885                      
1885                      @Player_Jump:
1885 3A 22 C8             		ld	a,(ram_joypads+on_press)
1888 CB 6F                		bit	bitJoy2,a
188A CA 00 00             		jp	z,@NotJump
188D                      		
188D CD B3 14              		call 	object_FindCol_Floor
1890 FE 00                 		cp	0
1892 C2 00 00              		jp	nz,@CanJump
1895 CD 9B 15              		call 	object_FindCol_FloorSides
1898 78                    		ld	a,b
1899 FE 00                 		cp	0
189B C2 00 00              		jp	nz,@CanJump
189E 79                    		ld	a,c
189F FE 00                 		cp	0
18A1 C2 00 00              		jp	nz,@CanJump
18A4                       		
18A4 C3 00 00             		jp	@NotJump
18A7                      		
18A7                      @CanJump:
18A7 FD CB 19 CE          		set	bitobj_air,(iy+obj_status)
18AB                      		
18AB 3E 02                  		ld	a,2
18AD FD 77 16                		ld	(iy+obj_anim_id),a
18B0 21 00 FA             		ld	hl,-600h
18B3 C9                      		ret
18B4                         		
18B4                      @NotJump:
18B4 11 40 00              		ld	de,40h
18B7 19                    		add 	hl,de
18B8                       		
18B8 CB 7C                 		bit 	7,h
18BA C2 00 00              		jp	nz,@return
18BD 7C                   		ld	a,h
18BE FE 10                		cp	10h
18C0 DA 00 00             		jp	c,@low_fall
18C3 3E 10                		ld	a,10h
18C5                      @low_fall:
18C5 67                   		ld	h,a
18C6                      @return:
18C6 C9                   		ret
18C7                      		
18C7                      ; --------------
18C7                      
18C7                      @OLD:
18C7 21 00 00             		ld	hl,0
18CA                      		
18CA                      ; --------------
18CA                      ; DOWn
18CA                      ; --------------
18CA                      
18CA 3A 21 C8                		ld	a,(ram_joypads+on_hold)
18CD CB 4F                   		bit 	bitJoyDown,a
18CF CA 00 00                		jp	z,@not_d
18D2 11 00 01             		ld	de,100h
18D5 19                   		add	hl,de
18D6                      @not_d:
18D6                      
18D6                      ; --------------
18D6                      ; UP
18D6                      ; --------------
18D6                      
18D6 3A 21 C8                		ld	a,(ram_joypads+on_hold)
18D9 CB 47                   		bit 	bitJoyUp,a
18DB CA 00 00                		jp	z,@not_u
18DE FD 56 0B                		ld	d,(iy+(obj_y+1))
18E1 FD 7E 0A                		ld	a,(iy+(obj_y))
18E4 B2                      		or	d
18E5 CA 00 00                		jp	z,@not_u
18E8 11 00 FF             		ld	de,-100h
18EB 19                   		add	hl,de
18EC                      @not_u:
18EC C9                   		ret
18ED                      	
18ED                      ; **********************************
18ED                      ; Object to Level layout collision
18ED                      ; **********************************
18ED                      ; ----------------------------------
18ED                      ; floor collision
18ED                      ; ----------------------------------
18ED                      
18ED                      @Collision_Floor:
18ED CD B3 14             		call	object_FindCol_Floor
18F0 FE 00                		cp	0
18F2 C2 00 00             		jp	nz,@found_center
18F5                      		
18F5 CD 9B 15              		call	object_FindCol_FloorSides
18F8 78                     		ld	a,b
18F9 FE 00                  		cp	0
18FB C2 00 00                		jp	nz,@found_sides
18FE 79                     		ld	a,c
18FF FE 00                  		cp	0
1901 C2 00 00              		jp	nz,@found_sides
1904 C9                   		ret
1905                      		
1905                      ; ----------------------------------
1905                      
1905                      @found_center:
1905 FE 01                		cp	1
1907 CA 00 00             		jp	z,@floorsolid
190A                       		
190A FD 5E 11             		ld	e,(iy+(obj_y_spd+1))
190D CB 7B                		bit 	7,e
190F C2 00 00             		jp	nz,@no_col
1912                      
1912 11 00 00             		ld	de,0
1915 21 00 00             		ld	hl,col_SlopeData
1918 57                   		ld	d,a
1919 87                   		add 	a
191A 87                   		add 	a
191B 87                   		add 	a
191C 87                   		add 	a
191D 5F                   		ld	e,a
191E 7A                     		ld	a,d
191F 0F                     		rrca
1920 0F                     		rrca
1921 0F                     		rrca
1922 0F                     		rrca
1923 E6 0F                  		and 	00Fh
1925 57                     		ld	d,a
1926                        		
1926 19                    		add 	hl,de
1927 11 00 00             		ld	de,0
192A FD 7E 06             		ld	a,(iy+(obj_x))
192D E6 0F                		and 	00Fh
192F 5F                   		ld	e,a
1930 19                   		add 	hl,de
1931 7E                   		ld	a,(hl)
1932 E6 0F                		and 	00Fh
1934                      
1934 11 00 00             		ld	de,0
1937 5F                   		ld	e,a
1938 FD 7E 0B             		ld	a,(iy+(obj_y+1))
193B E6 FF                		and	0FFh
193D 67                   		ld	h,a
193E FD 7E 0A             		ld	a,(iy+(obj_y))
1941 E6 F0                		and	0F0h
1943 6F                   		ld	l,a
1944 19                   		add	hl,de
1945 44                   		ld	b,h
1946 4D                   		ld	c,l
1947                      		
1947                      ; 		btst	#bitobj_air,obj_status(a6)
1947                      ; 		beq.s	@dontchk
1947                      ;   		add.l	d7,d3
1947                      ;   		cmp.l	d1,d3
1947                      ;   		blt.s	@NoCol
1947                      ; @dontchk:	
1947 FD 70 0B             		ld	(iy+(obj_y+1)),b
194A FD 71 0A             		ld	(iy+(obj_y)),c	
194D                      		
194D FD CB 19 8E          		res	bitobj_air,(iy+obj_status)
1951 D9                   		exx
1952 11 00 00             		ld	de,0
1955 79                   		ld	a,c
1956 B0                   		or	b
1957 CA 00 00             		jp	z,@nodown
195A 11 00 01             		ld	de,100h
195D                      @nodown:
195D D9                    		exx
195E                      @NoCol:
195E C9                   		ret
195F                      		
195F                      ; ----------------------------------
195F                      
195F                      @found_sides:
195F FE 01                		cp	1
1961 CA 00 00             		jp	z,@floorsolid
1964 C9                   		ret		
1965                      
1965                      ; ----------------------------------
1965                      		
1965                      @floorsolid:
1965 FD CB 19 8E          		res	bitobj_air,(iy+obj_status)
1969 FD 7E 0B             		ld	a,(iy+(obj_y+1))
196C E6 FF                		and	0FFh
196E FD 77 0B             		ld	(iy+(obj_y+1)),a
1971 FD 7E 0A             		ld	a,(iy+(obj_y))
1974 E6 F0                		and	0F0h
1976 FD 77 0A             		ld	(iy+(obj_y)),a	
1979                      		
1979 D9                   		exx
197A 11 00 00             		ld	de,0
197D D9                   		exx
197E C9                   		ret
197F                      		
197F                      @no_col:
197F C9                    		ret
1980                       		
1980                      ; **********************************
1980                      ; ceiling collision
1980                      ; **********************************
1980                      
1980                      @Collision_Ceiling:
1980 C9                   		ret
1981                      		
1981                      ; **********************************
1981                      ; Wall collision
1981                      ; **********************************
1981                      
1981                      @Collision_Wall:
1981 CD 25 15             		call	object_FindCol_Wall
1984 FE 00                		cp	0
1986 C2 00 00             		jp	nz,@wall_center
1989                      		
1989 CD 60 16              		call	object_FindCol_WallSides
198C 78                     		ld	a,b
198D FE 00                  		cp	0
198F C2 00 00                		jp	nz,@wall_right
1992 79                     		ld	a,c
1993 FE 00                  		cp	0
1995 C2 00 00              		jp	nz,@wall_left
1998 C9                   		ret		
1999                      
1999                      ; ----------------------------------
1999                      
1999                      @wall_center:
1999 FE 01                 		cp	1
199B CA 00 00              		jp	z,@wallsolid_slope
199E                      
199E 57                    		ld	d,a
199F FD 7E 0A              		ld	a,(iy+(obj_y))
19A2 E6 0F                 		and	00Fh
19A4 C2 00 00              		jp	nz,@NoCol_LR
19A7                      
19A7 21 00 00             		ld	hl,col_SlopeData
19AA 7A                    		ld	a,d
19AB 87                   		add 	a
19AC 87                   		add 	a
19AD 87                   		add 	a
19AE 87                   		add 	a
19AF 5F                   		ld	e,a
19B0 7A                     		ld	a,d
19B1 0F                     		rrca
19B2 0F                     		rrca
19B3 0F                     		rrca
19B4 0F                     		rrca
19B5 E6 0F                  		and 	00Fh
19B7 57                     		ld	d,a
19B8 19                    		add 	hl,de
19B9                       		
19B9 11 00 00             		ld	de,0
19BC FD 7E 06             		ld	a,(iy+(obj_x))
19BF E6 0F                		and 	00Fh
19C1 5F                   		ld	e,a
19C2 19                   		add 	hl,de
19C3 11 00 00             		ld	de,0
19C6 7E                   		ld	a,(hl)
19C7 E6 0F                		and 	00Fh
19C9 5F                   		ld	e,a
19CA FD 66 0B             		ld	h,(iy+(obj_y+1))
19CD FD 7E 0A             		ld	a,(iy+(obj_y))
19D0 E6 F0                		and	0F0h
19D2 6F                   		ld	l,a
19D3 37                   		scf
19D4 ED 52                		sbc	hl,de
19D6 FD 74 0B             		ld	(iy+(obj_y+1)),h
19D9 FD 75 0A             		ld	(iy+(obj_y)),l
19DC                      		
19DC D9                   		exx
19DD 79                   		ld	a,c
19DE B0                   		or	b
19DF CA 00 00             		jp	z,@ClrYSpd
19E2 CB 7A                		bit	7,d
19E4 C2 00 00             		jp	nz,@return_xvel
19E7                      @ClrYSpd:
19E7 FD CB 19 8E          		res	bitobj_air,(iy+obj_status)
19EB 11 00 00             		ld	de,0
19EE                      @return_xvel:
19EE D9                   		exx
19EF                      @NoCol_LR:
19EF C9                   		ret
19F0                      
19F0                      ; ----------------------------------
19F0                      
19F0                      @wall_right:
19F0 FD CB 19 46           		bit 	bitobj_dir,(iy+obj_status)
19F4 C2 C6 18              		jp	nz,@return
19F7 78                     		ld	a,b
19F8 FE 02                  		cp	2
19FA D2 C6 18               		jp	nc,@return
19FD FE 01                 		cp	1
19FF CA 00 00              		jp	z,@wallsolid
1A02 C9                    		ret
1A03                      @wall_left:
1A03 FD CB 19 46           		bit 	bitobj_dir,(iy+obj_status)
1A07 CA C6 18              		jp	z,@return
1A0A 79                     		ld	a,c
1A0B                        		
1A0B FD 66 07             		ld	h,(iy+(obj_x+1))
1A0E FD 6E 06             		ld	l,(iy+(obj_x))
1A11 FD 7E 02             		ld	a,(iy+(obj_size))
1A14 87                   		add 	a
1A15 87                   		add 	a
1A16 87                   		add 	a
1A17 16 00                		ld	d,0
1A19 5F                   		ld	e,a
1A1A 37                   		scf
1A1B ED 52                		sbc	hl,de
1A1D FA C6 18             		jp	m,@return
1A20                      		
1A20 79                      		ld	a,c
1A21 FE 02                  		cp	2
1A23 D2 C6 18               		jp	nc,@return
1A26 FE 01                		cp	1
1A28 CA 00 00             		jp	z,@wallsolid
1A2B C9                   		ret
1A2C                      		
1A2C                      @wallsolid:
1A2C D9                   		exx
1A2D 01 00 00             		ld	bc,0
1A30 D9                   		exx
1A31                      		
1A31                      @wallsolid_slope:
1A31 FD 7E 07             		ld	a,(iy+(obj_x+1))
1A34 E6 FF                		and	0FFh
1A36 FD 77 07             		ld	(iy+(obj_x+1)),a
1A39 FD 7E 06             		ld	a,(iy+(obj_x))
1A3C E6 F8                		and	0F8h
1A3E FD 77 06             		ld	(iy+(obj_x)),a
1A41                      		
1A41 FD CB 19 46          		bit 	bitobj_dir,(iy+obj_status)
1A45 CA 00 00             		jp	z,@right_w
1A48 FD 66 07             		ld	h,(iy+(obj_x+1))
1A4B FD 6E 06             		ld	l,(iy+(obj_x))
1A4E 11 08 00             		ld	de,8
1A51 19                   		add 	hl,de
1A52 FD 74 07             		ld	(iy+(obj_x+1)),h
1A55 FD 75 06             		ld	(iy+(obj_x)),l
1A58                      		
1A58                      @right_w:
1A58 FD 7E 07             		ld	a,(iy+(obj_x+1))
1A5B E6 FF                		and	0FFh
1A5D FD 77 07             		ld	(iy+(obj_x+1)),a
1A60 FD 7E 06             		ld	a,(iy+(obj_x))
1A63 E6 F8                		and	0F8h
1A65 FD 77 06             		ld	(iy+(obj_x)),a
1A68                      		
1A68 C9                   		ret
1A69                      		
1A69                      ; 		cmp.w	#1,d0
1A69                      ;  		beq	@wallsolid_slope
1A69                      ; 		
1A69                      ;    		move.l	obj_y(a6),d2
1A69                      ;     		swap	d2
1A69                      ;      		and.w	#$F,d2
1A69                      ;      		bne.s	@NoCol_LR
1A69                      ;      		
1A69                      ;     		lea	(col_SlopeData),a3
1A69                      ;     		and.l	#$FF,d0
1A69                      ;     		move.w	d0,d3
1A69                      ;     		lsl.w	#4,d3
1A69                      ;     		adda	d3,a3
1A69                      ;     		move.l	obj_x(a6),d0
1A69                      ;     		swap	d0
1A69                      ;     		and.w	#$F,d0
1A69                      ;     		move.b	(a3,d0.w),d0
1A69                      ;     		and.w	#$F,d0
1A69                      ;     		and.l	#$FFF00000,obj_y(a6)
1A69                      ;   		swap	d0
1A69                      ;   		and.l	#$FFFF0000,d0
1A69                      ; 
1A69                      ;  		sub.l	d0,obj_y(a6)
1A69                      ;   		tst.l	d6
1A69                      ;   		beq.s	@ClrYSpd
1A69                      ;   		tst.l	d7
1A69                      ;   		bmi.s	@NoCol_LR
1A69                      ; @ClrYSpd:
1A69                      ;   		bclr	#bitobj_air,obj_status(a6)
1A69                      ;            	clr.l	d7
1A69                      ; @NoCol_LR:
1A69                      ; 		rts
1A69                      		
1A69                      ; **********************************
1A69                      ; Move level camera
1A69                      ; **********************************
1A69                      
1A69                      @plyr_camera:
1A69 DD 21 00 00           		ld	ix,ram_levelbuffer
1A6D                       		
1A6D                      ; --------------	
1A6D                      ; LEFT/RIGHT
1A6D                      ; --------------
1A6D                      
1A6D FD 66 00               		ld      h,(iy+(lvl_x_size+1))
1A70 FD 6E 00               		ld      l,(iy+(lvl_x_size))
1A73 11 00 F0               		ld	de,-(256<<4)
1A76 19                     		add 	hl,de
1A77 DA 00 00               		jp	c,@end_x_lvl
1A7A                      		
1A7A FD 66 07               		ld      h,(iy+(obj_x+1))
1A7D FD 6E 06               		ld      l,(iy+(obj_x))
1A80 7C                     		ld	a,h
1A81 B5                     		or	l
1A82 CA 00 00               		jp	z,@end_x_lvl
1A85                        		
1A85                      
1A85 11 51 00               		ld	de,((160/2))+1
1A88 37                     		scf			;todo: checar si se mueve un pixel delante
1A89 ED 52                  		sbc	hl,de
1A8B FA 00 00               		jp	m,@start_x
1A8E DA 00 00               		jp	c,@start_x
1A91                        		
1A91 44                      		ld	b,h
1A92 4D                      		ld	c,l
1A93 DD 56 00                		ld	d,(ix+(lvl_x_size+1))
1A96 DD 5E 00                		ld	e,(ix+(lvl_x_size))
1A99 7B                       		ld	a,e
1A9A 0F                       		rrca
1A9B 0F                       		rrca
1A9C 0F                       		rrca
1A9D 0F                       		rrca
1A9E E6 F0                    		and	0F0h
1AA0 6F                       		ld	l,a
1AA1 7B                      		ld	a,e
1AA2 0F                       		rrca
1AA3 0F                       		rrca
1AA4 0F                       		rrca
1AA5 0F                       		rrca
1AA6 E6 0F                    		and	00Fh
1AA8 67                      		ld	h,a
1AA9 7A                      		ld	a,d
1AAA 0F                      		rrca
1AAB 0F                      		rrca
1AAC 0F                      		rrca
1AAD 0F                      		rrca
1AAE E6 F0                   		and	0F0h
1AB0 67                      		ld	h,a
1AB1                         		
1AB1 21 00 08                		ld	hl,0800h
1AB4 11 5F FF                		ld	de,-(161)
1AB7 19                       		add 	hl,de
1AB8 78                      		ld	a,b
1AB9 BC                      		cp	h
1ABA DA 00 00                		jp	c,@nope
1ABD 79                        		ld	a,c
1ABE BD                        		cp	l
1ABF DA 00 00                  		jp	c,@nope
1AC2                          		
1AC2 44                       		ld	b,h
1AC3 4D                       		ld	c,l
1AC4                      
1AC4                      @nope:
1AC4 79                     		ld	a,c
1AC5 2F                     		cpl
1AC6 32 2C C8               		ld      (ram_hscroll),a
1AC9 DD 70 00              		ld      (ix+(lvl_x+1)),b
1ACC DD 71 00               		ld      (ix+(lvl_x)),c
1ACF                        		
1ACF 79                     		ld	a,c
1AD0 E6 08                  		and	00001000b
1AD2 DD 66 00               		ld	h,(ix+(lvl_past_x))
1AD5 BC                     		cp	h
1AD6 CA 00 00               		jp	z,@end_x_lvl
1AD9 DD 77 00               		ld	(ix+(lvl_past_x)),a
1ADC                        		
1ADC FD CB 0F 7E            		bit 	7,(iy+(obj_x_spd+1))
1AE0 C2 00 00               		jp	nz,@leftscrl	
1AE3 FD CB 19 46            		bit 	bitobj_dir,(iy+(obj_status))
1AE7 C2 00 00               		jp	nz,@leftscrl
1AEA                        		
1AEA DD CB 00 C6            		set 	bit_drw_r,(ix+(lvl_drawdir))
1AEE C3 00 00               		jp	@end_x_lvl
1AF1                      @leftscrl:
1AF1 DD CB 00 C6            		set 	bit_drw_l,(ix+(lvl_drawdir))
1AF5 C3 00 00               		jp	@end_x_lvl
1AF8                        		
1AF8                      @start_x:
1AF8 AF                   		xor	a
1AF9 DD 77 00              		ld      (ix+(lvl_x+1)),a
1AFC DD 77 00               		ld      (ix+(lvl_x)),a
1AFF 32 2C C8               		ld      (ram_hscroll),a
1B02                      @end_x_lvl:
1B02                      
1B02                      ; --------------	
1B02                      ; UP/DOWN
1B02                      ; --------------
1B02                      
1B02 FD 66 0B               		ld      h,(iy+(obj_y+1))
1B05 FD 6E 0A               		ld      l,(iy+(obj_y))
1B08 7C                     		ld	a,h
1B09 B5                     		or	l
1B0A CA 00 00               		jp	z,@end_y_lvl
1B0D                        		
1B0D FD 66 0B               		ld      h,(iy+(obj_y+1))
1B10 FD 6E 0A               		ld      l,(iy+(obj_y))
1B13 11 58 00               		ld	de,(144/2)+10h
1B16 37                     		scf
1B17 ED 52                  		sbc	hl,de
1B19 FA 00 00               		jp	m,@start_y
1B1C DA 00 00               		jp	c,@start_y
1B1F                      
1B1F 44                     		ld	b,h
1B20 4D                     		ld	c,l
1B21                            		
1B21 DD 7E 00                   		ld	a,(ix+(lvl_y_size+1))
1B24 87                         		add	a
1B25 87                         		add	a
1B26 87                         		add	a
1B27 87                         		add	a
1B28 E6 F0                      		and	0F0h
1B2A 67                         		ld	h,a
1B2B DD 7E 00                   		ld	a,(ix+(lvl_y_size))
1B2E 0F                         		rrca
1B2F 0F                         		rrca
1B30 0F                         		rrca
1B31 0F                         		rrca
1B32 E6 0F                      		and	00Fh
1B34 B4                         		or	h
1B35 67                         		ld	h,a
1B36 DD 7E 00                   		ld	a,(ix+(lvl_y_size))
1B39 87                         		add	a
1B3A 87                         		add	a
1B3B 87                         		add	a
1B3C 87                         		add	a
1B3D 6F                         		ld	l,a
1B3E                            		
1B3E 11 70 FF                   		ld	de,-090h
1B41                      
1B41 19                         		add	hl,de
1B42 78                          		ld	a,b
1B43 BC                          		cp	h
1B44 DA 00 00                   		jp	c,@topok_y      		
1B47 79                          		ld	a,c
1B48 BD                          		cp	l
1B49 D2 00 00                   		jp	nc,@end_y
1B4C                      @topok_y:
1B4C                      
1B4C 60                     		ld	h,b
1B4D 69                     		ld	l,c
1B4E DD 74 00              		ld      (ix+(lvl_y+1)),h
1B51 DD 75 00               		ld      (ix+(lvl_y)),l
1B54 7C                    		ld      a,h
1B55 32 2B C8               		ld      (ram_vscroll+1),a
1B58 7D                     		ld      a,l
1B59 32 2A C8               		ld      (ram_vscroll),a
1B5C                        		
1B5C C9                     		ret
1B5D                      @start_y:
1B5D AF                   		xor	a
1B5E DD 77 00              		ld      (ix+(lvl_y+1)),a
1B61 DD 77 00               		ld      (ix+(lvl_y)),a
1B64 32 2B C8               		ld      (ram_vscroll+1),a
1B67 32 2A C8               		ld      (ram_vscroll),a	
1B6A C9                     		ret
1B6B                      @end_y:
1B6B 11 00 00             		ld	de,0
1B6E DD 7E 00             		ld	a,(ix+(lvl_y_size))
1B71 D6 09                      		sub 	9
1B73 87                   		add 	a
1B74 87                   		add	a
1B75 87                   		add	a
1B76 87                   		add	a
1B77 5F                   		ld	e,a
1B78                      		
1B78 DD 72 00              		ld      (ix+(lvl_y+1)),d
1B7B DD 73 00               		ld      (ix+(lvl_y)),e
1B7E                        		
1B7E 7A                   		ld	a,d	
1B7F 32 2B C8                		ld      (ram_vscroll+1),a
1B82 7B                   		ld	a,e
1B83 32 2A C8                		ld      (ram_vscroll),a	
1B86 C9                     		ret
1B87                        		
1B87                      @end_y_lvl:
1B87 C9                   		ret
1B88                      	
1B88                      ; --------------	
1B88                      ; debug mode
1B88                      ; --------------
1B88                      
1B88                      @debug_mode:
1B88 01 00 00             		ld	bc,0
1B8B 11 00 00             		ld	de,0
1B8E                      		
1B8E                      ; --------------	
1B8E                      ; RIGHT
1B8E                      ; --------------
1B8E                      
1B8E 3A 21 C8             		ld	a,(ram_joypads+on_hold)
1B91 CB 5F                		bit 	bitJoyRight,a
1B93 28 00                		jr      z,@NotRight
1B95                      		
1B95 01 00 04             		ld	bc,400h
1B98 FD CB 19 86           		res	bitobj_dir,(iy+obj_status)
1B9C                      @NotRight:
1B9C                      
1B9C                      ; --------------	
1B9C                      ; LEFT
1B9C                      ; --------------
1B9C                      
1B9C 3A 21 C8             		ld	a,(ram_joypads+on_hold)
1B9F CB 57                		bit 	bitJoyLeft,a
1BA1 28 00                		jr      z,@NotLeft
1BA3                      
1BA3 01 00 FC             		ld	bc,-400h
1BA6 FD CB 19 C6           		set	bitobj_dir,(iy+obj_status)
1BAA                      @NotLeft:
1BAA                      
1BAA                      ; --------------	
1BAA                      ; DOWN
1BAA                      ; --------------
1BAA                      
1BAA 3A 21 C8             		ld	a,(ram_joypads+on_hold)
1BAD CB 4F                		bit 	bitJoyDown,a
1BAF 28 00                		jr      z,@NotDown
1BB1                      
1BB1 11 00 04             		ld	de,400h
1BB4                      @NotDown:
1BB4                      
1BB4                      ; --------------	
1BB4                      ; UP
1BB4                      ; --------------
1BB4                      
1BB4 3A 21 C8             		ld	a,(ram_joypads+on_hold)
1BB7 CB 47                		bit 	bitJoyUp,a
1BB9 28 00                		jr      z,@NotUp
1BBB                      		
1BBB 11 00 FC             		ld	de,-400h
1BBE                      		
1BBE                      @NotUp:
1BBE FD 70 0F             		ld	(iy+(obj_x_spd+1)),b
1BC1 FD 71 0E             		ld	(iy+(obj_x_spd)),c
1BC4 FD 72 11             		ld	(iy+(obj_y_spd+1)),d
1BC7 FD 73 10             		ld	(iy+(obj_y_spd)),e
1BCA                      		
1BCA FD 66 0F             		ld	h,(iy+(obj_x_spd+1))
1BCD CD E8 17             		call	@update_xspd
1BD0 FD 66 11             		ld	h,(iy+(obj_y_spd+1))
1BD3 CD 03 18             		call	@update_yspd
1BD6 CD 69 1A             		call	@plyr_camera
1BD9 C3 C8 17             		jp 	@Render
1BDC                      		
1BDC                      ; =================================================================
1BDC                      ; ------------------------------------------------
1BDC                      ; Data
1BDC                      ; ------------------------------------------------
1BDC                      		
1BDC                      ani_player:
1BDC 00 00                		dw @Idle
1BDE 00 00                		dw @Walk
1BE0 00 00                		dw @Jump_1
1BE2 00 00                		dw @Jump_2
1BE4                      @Idle:
1BE4 05                    		db 5
1BE5 00                    		db 0
1BE6 FF                   		db 0FFh
1BE7                      @Jump_1:	
1BE7 04                    		db 4
1BE8 07                    		db 7
1BE9 FF                   		db 0FFh
1BEA                      @Jump_2:	
1BEA 04                    		db 4
1BEB 08                    		db 8
1BEC FF                   		db 0FFh
1BED                      @Walk:
1BED 03                    		db 3
1BEE 01 02 03 04 05 06     		db 1,2,3,4,5,6
1BF4 FF                   		db 0FFh
1BF5                      		
1BF5                      ; --------------	
1BF5                      ; LEFT/RIGHT
1BF5                      ; --------------
1BF5                      
1BF5                      ; @movelevel:
1BF5                      ;   		ld	a,(ram_joypads+on_press)
1BF5                      ;   		bit 	bitJoyStart,a
1BF5                      ;   		jp	z,@DontExit
1BF5                      ; 		ld	a,0
1BF5                      ; 		ld	(ram_gamemode),a
1BF5                      ; 		ret
1BF5                      ; @DontExit:
1BF5                      ; 		ld	ix,ram_levelbuffer
1BF5                      ; 
1BF5                      ; ; --------------	
1BF5                      ; ; RIGHT
1BF5                      ; ; --------------
1BF5                      ; 
1BF5                      ; 		ld	a,(ram_joypads+on_hold)
1BF5                      ; 		bit 	bitJoyRight,a
1BF5                      ; 		jr      z,@NotRight
1BF5                      ;  		ld      b,(ix+(lvl_x+1))
1BF5                      ;  		ld      c,(ix+(lvl_x))
1BF5                      ;  		inc	bc
1BF5                      ;  		
1BF5                      ;  		ld	a,(ix+(lvl_x_size))
1BF5                      ;  		srl	a
1BF5                      ;  		srl	a
1BF5                      ;  		srl	a
1BF5                      ;  		srl	a
1BF5                      ;  		ld	h,a
1BF5                      ;   		ld	a,(ix+(lvl_x_size+1))
1BF5                      ;   		and 	0F0h
1BF5                      ;   		ld	l,a
1BF5                      ;   		if MERCURY
1BF5                      ;  		ld	de,(160)-1
1BF5                      ;  		else
1BF5                      ;  		ld	de,(256-8)-1
1BF5                      ;  		endif
1BF5                      ;  		sbc	hl,de
1BF5                      ;    		ld	a,h
1BF5                      ;     		cp	b
1BF5                      ;     		jp	nz,@cont_x_r
1BF5                      ;    		ld	a,l
1BF5                      ;     		cp	c
1BF5                      ;     		jp	nz,@cont_x_r 		
1BF5                      ;     		jr	@NotRight
1BF5                      ; @cont_x_r:
1BF5                      ;  		ld      (ix+(lvl_x+1)),b
1BF5                      ;  		ld      (ix+(lvl_x)),c
1BF5                      ; 
1BF5                      ;  		ld	a,(ix+(lvl_drawdir))	;draw right
1BF5                      ;   		set 	bit_drw_r,a
1BF5                      ;  		ld	(ix+(lvl_drawdir)),a
1BF5                      ; @notdrw_r:
1BF5                      ; 
1BF5                      ; 		ld      a,(ram_hscroll)
1BF5                      ; 		dec     a			; move right
1BF5                      ; 		ld      (ram_hscroll),a 
1BF5                      ; @NotRight:
1BF5                      ; 
1BF5                      ; ; --------------	
1BF5                      ; ; LEFT
1BF5                      ; ; --------------
1BF5                      ; 
1BF5                      ; 		ld	a,(ram_joypads+on_hold)
1BF5                      ; 		bit 	bitJoyLeft,a
1BF5                      ; 		jr      z,@NotLeft
1BF5                      ;  		ld      b,(ix+(lvl_x+1))
1BF5                      ;  		ld      c,(ix+(lvl_x))
1BF5                      ;  		ld	a,c
1BF5                      ;  		or	b
1BF5                      ;  		jp	z,@NotLeft
1BF5                      ;  		dec	bc
1BF5                      ;  		ld      (ix+(lvl_x+1)),b
1BF5                      ;  		ld      (ix+(lvl_x)),c
1BF5                      ;  		ld	a,(ix+(lvl_drawdir))	; draw left
1BF5                      ;   		set 	bit_drw_l,a
1BF5                      ;  		ld	(ix+(lvl_drawdir)),a
1BF5                      ; 		
1BF5                      ; 		ld      a,(ram_hscroll)
1BF5                      ; 		inc     a			; move left
1BF5                      ; 		ld      (ram_hscroll),a 
1BF5                      ; @NotLeft:
1BF5                      ; 
1BF5                      ; ; --------------	
1BF5                      ; ; DOWN
1BF5                      ; ; --------------
1BF5                      ; 
1BF5                      ; 		ld      hl,ram_vscroll
1BF5                      ; 		
1BF5                      ; 		ld	a,(ram_joypads+on_hold)
1BF5                      ; 		bit 	bitJoyDown,a
1BF5                      ; 		jr      z,@NotDown
1BF5                      ;  		ld      b,(ix+(lvl_y+1))
1BF5                      ;  		ld      c,(ix+(lvl_y))
1BF5                      ;  		inc	bc
1BF5                      ;  		
1BF5                      ;    		ld	a,(ix+(lvl_y_size))
1BF5                      ;    		if MERCURY
1BF5                      ;    		sub 	9
1BF5                      ;    		else
1BF5                      ;    		sub 	0Ch
1BF5                      ;    		endif
1BF5                      ;    		sla	a
1BF5                      ;    		sla	a
1BF5                      ;    		sla	a
1BF5                      ;    		sla	a
1BF5                      ;    		cp	c
1BF5                      ;    		jp	c,@NotDown
1BF5                      ;    		
1BF5                      ;  		ld      (ix+(lvl_y+1)),b
1BF5                      ;  		ld      (ix+(lvl_y)),c
1BF5                      ; 		ld	a,(ix+(lvl_drawdir))
1BF5                      ;  		set 	bit_drw_d,a
1BF5                      ; 		ld	(ix+(lvl_drawdir)),a
1BF5                      ; 		
1BF5                      ; 		ld      a,(hl)
1BF5                      ; 		inc     a			; move down
1BF5                      ; 		ld      (hl),a
1BF5                      ;  		ld	a,(ram_vintwait)
1BF5                      ;  		res 	bitVerDir,a
1BF5                      ;  		ld	(ram_vintwait),a
1BF5                      ; @NotDown:
1BF5                      ; 
1BF5                      ; ; --------------	
1BF5                      ; ; UP
1BF5                      ; ; --------------
1BF5                      ; 
1BF5                      ; 		ld	a,(ram_joypads+on_hold)
1BF5                      ; 		bit 	bitJoyUp,a
1BF5                      ; 		jr      z,@NotUp
1BF5                      ;  		ld      b,(ix+(lvl_y+1))
1BF5                      ;  		ld      c,(ix+(lvl_y))
1BF5                      ;  		ld	a,c
1BF5                      ;  		or	b
1BF5                      ;  		jp	z,@NotUp
1BF5                      ;  		dec	bc
1BF5                      ;  		ld      (ix+(lvl_y+1)),b
1BF5                      ;  		ld      (ix+(lvl_y)),c
1BF5                      ; 		ld	a,(ix+(lvl_drawdir))
1BF5                      ;  		set 	bit_drw_u,a
1BF5                      ; 		ld	(ix+(lvl_drawdir)),a
1BF5                      ; 		
1BF5                      ; 		ld      a,(hl)
1BF5                      ; 		dec     a			; move up
1BF5                      ; 		ld      (hl),a
1BF5                      ;  		ld	a,(ram_vintwait)
1BF5                      ;  		set 	bitVerDir,a
1BF5                      ;  		ld	(ram_vintwait),a
1BF5                      ; @NotUp:
1BF5                      ; 		ret
1BF5                      		
1BF5                      		
1BF5                      ; 		call	@movelevel
1BF5                      		
1BF5                      ;  ;LEFT/RIGHT
1BF5                      ; 		ld	b,(iy+obj_x+1)
1BF5                      ; 		ld	c,(iy+obj_x)
1BF5                      ;   		ld	a,(ram_joypads+on_hold)
1BF5                      ;   		bit 	bitJoyRight,a
1BF5                      ;   		jp	z,@not_r
1BF5                      ; 		inc	bc
1BF5                      ; 		res	bitobj_dir,(iy+obj_status)
1BF5                      ; @not_r:
1BF5                      ;   		ld	a,(ram_joypads+on_hold)
1BF5                      ;   		bit 	bitJoyLeft,a
1BF5                      ;   		jp	z,@not_l
1BF5                      ; 		dec	bc
1BF5                      ; 		set	bitobj_dir,(iy+obj_status)
1BF5                      ; @not_l:
1BF5                      ; 		ld	(iy+obj_x+1),b
1BF5                      ; 		ld	(iy+obj_x),c
1BF5                      ; 		
1BF5                      ;  ;UP/DOWN
1BF5                      ; 		ld	b,(iy+obj_y+1)
1BF5                      ; 		ld	c,(iy+obj_y)
1BF5                      ;   		ld	a,(ram_joypads+on_hold)
1BF5                      ;   		bit 	bitJoyDown,a
1BF5                      ;   		jp	z,@not_d
1BF5                      ; 		inc	bc
1BF5                      ; @not_d:
1BF5                      ;   		ld	a,(ram_joypads+on_hold)
1BF5                      ;   		bit 	bitJoyUp,a
1BF5                      ;   		jp	z,@not_u
1BF5                      ; 		dec	bc
1BF5                      ; @not_u:
1BF5                      ; 		ld	(iy+obj_y+1),b
1BF5                      ; 		ld	(iy+obj_y),c
1BF5                      ; 		ld	(iy+obj_y),c
1BF5                      		
1BF5                      		
1BF5                      		include	"modes/level/subs/level.asm"
1BF5                      ; =================================================================
1BF5                      ; Level system
1BF5                      ; =================================================================
1BF5                      
1BF5                      ; ------------------------------------------------
1BF5                      ; Variables
1BF5                      ; ------------------------------------------------
1BF5                      
1BF5 =00000128            max_lvlprz	equ	500h
1BF5 =0000013B            max_lvlobj	equ	64
1BF5                      
1BF5                      ; -----------------------
1BF5                      
1BF5                      			rsreset
1BF5 =00000174            lvl_x			rw	1
1BF5 =00000182            lvl_y			rw	1
1BF5 =00000194            lvl_x_size		rw	1
1BF5 =000001A6            lvl_y_size		rw	1
1BF5 =000001B8            lvl_past_x		rb	1
1BF5 =000001CA            lvl_past_y		rb	1
1BF5 =000001DC            lvl_layout		rw	1
1BF5 =000001EE            lvl_blocks		rw	1
1BF5 =00000203            lvl_collision		rw	1
1BF5 =00000215            lvl_prizes		rw	1
1BF5 =00000228            lvl_objects		rw	1
1BF5 =0000023B            lvl_drawdir		rb	1
1BF5 =0000024B            lvl_prio		rb	1
1BF5 =0000025F            sizeof_level		rb	0
1BF5                      
1BF5                      ; -----------------------
1BF5                      
1BF5                      ; lvl_prio
1BF5 =0000029C            bit_split		equ	0
1BF5                      
1BF5                      ; -----------------------
1BF5                      
1BF5                      ; lvl_drawdir
1BF5 =000002DC            bit_drw_r		equ	0
1BF5 =000002EE            bit_drw_l		equ	1
1BF5 =00000300            bit_drw_d		equ	2
1BF5 =00000312            bit_drw_u		equ	3
1BF5                      ; bit_drw_r_2p		equ	4
1BF5                      ; bit_drw_l_2p		equ	5
1BF5                      ; bit_drw_d_2p		equ	6
1BF5                      ; bit_drw_u_2p		equ	7
1BF5                      
1BF5                      ; ; ------------------------------------------------
1BF5                      ; ; RAM
1BF5                      ; ; ------------------------------------------------
1BF5                      	
1BF5                      ; ram_levelbuffer	rs.b (sizeof_level*2)
1BF5                      
1BF5                      ; =================================================================
1BF5                      ; ------------------------------------------------
1BF5                      ; Subs
1BF5                      ; ------------------------------------------------
1BF5                      
1BF5                      ; ------------------------------------------------
1BF5                      ; Level_load
1BF5                      ;
1BF5                      ; Set a level
1BF5                      ; 
1BF5                      ; Input:
1BF5                      ; 
1BF5                      ; [NORMAL]
1BF5                      ; hl - level data
1BF5                      ;	dw @floor
1BF5                      ;	dw @interblocks
1BF5                      ;	dw @collision
1BF5                      ;	dw @objects
1BF5                      ;	dw x_size
1BF5                      ;	dw y_size
1BF5                      ;	db settings
1BF5                      ;	db 0
1BF5                      ;	db (layout_data)
1BF5                      ; bc - start at X position
1BF5                      ; de - start at Y position
1BF5                      ;
1BF5                      ; [ALTERNATE]
1BF5                      ; (nothing)
1BF5                      ; ------------------------------------------------
1BF5                      
1BF5                      level_load:
1BF5 FD 21 00 00          		ld	iy,ram_levelbuffer
1BF9                      		
1BF9 FD 70 01             		ld	(iy+(lvl_x+1)),b
1BFC FD 71 00             		ld	(iy+(lvl_x)),c
1BFF FD 72 03             		ld	(iy+(lvl_y+1)),d
1C02 FD 73 02             		ld	(iy+(lvl_y)),e
1C05                      		
1C05 7E                   		ld	a,(hl)
1C06 23                   		inc	hl
1C07 FD 77 0C             		ld	(iy+(lvl_blocks)),a
1C0A 7E                   		ld	a,(hl)
1C0B 23                   		inc	hl
1C0C FD 77 0D             		ld	(iy+(lvl_blocks+1)),a
1C0F                      		
1C0F 7E                   		ld	a,(hl)
1C10 23                   		inc	hl
1C11 FD 77 0E             		ld	(iy+(lvl_collision)),a
1C14 7E                   		ld	a,(hl)
1C15 23                   		inc	hl
1C16 FD 77 0F             		ld	(iy+(lvl_collision+1)),a
1C19                      	
1C19 7E                   		ld	a,(hl)
1C1A 23                   		inc	hl
1C1B FD 77 10             		ld	(iy+(lvl_prizes)),a
1C1E 7E                   		ld	a,(hl)
1C1F 23                   		inc	hl
1C20 FD 77 11             		ld	(iy+(lvl_prizes+1)),a
1C23                      		
1C23 7E                   		ld	a,(hl)
1C24 23                   		inc	hl
1C25 FD 77 12             		ld	(iy+(lvl_objects)),a
1C28 7E                   		ld	a,(hl)
1C29 23                   		inc	hl
1C2A FD 77 13             		ld	(iy+(lvl_objects+1)),a
1C2D                      		
1C2D 7E                   		ld	a,(hl)
1C2E 23                   		inc	hl
1C2F FD 77 04             		ld	(iy+(lvl_x_size)),a
1C32 7E                   		ld	a,(hl)
1C33 23                   		inc	hl
1C34 FD 77 05             		ld	(iy+(lvl_x_size+1)),a
1C37                      		
1C37 7E                   		ld	a,(hl)
1C38 23                   		inc	hl
1C39 FD 77 06             		ld	(iy+(lvl_y_size)),a
1C3C 7E                   		ld	a,(hl)
1C3D 23                   		inc	hl
1C3E FD 77 07             		ld	(iy+(lvl_y_size+1)),a
1C41                      		
1C41 FD 74 0B             		ld	(iy+(lvl_layout+1)),h
1C44 FD 75 0A             		ld	(iy+(lvl_layout)),l	
1C47 C9                   		ret
1C48                      		
1C48                      ; ----------------------------------	
1C48                      ; Redraw the level
1C48                      ; 
1C48                      ; Uses:
1C48                      ; iy
1C48                      ; ----------------------------------
1C48                      
1C48                      level_draw:
1C48 3A 00 00             		ld	a,(ram_levelbuffer+lvl_x)
1C4B ED 44                		neg	a
1C4D 32 2C C8             		ld	(ram_hscroll),a
1C50 3A 00 00             		ld	a,(ram_levelbuffer+lvl_y)
1C53 32 2A C8             		ld	(ram_vscroll),a
1C56 3A 06 C8             		ld	a,(ram_vintwait)
1C59 CB B7                		res	bitVerDir,a
1C5B 32 06 C8             		ld	(ram_vintwait),a
1C5E                      		
1C5E                      ; ----------------------------------
1C5E                      
1C5E DD 2A 00 00          		ld	ix,(ram_levelbuffer+lvl_layout)
1C62                      		
1C62 D9                   		exx
1C63 21 00 38             		ld	hl,screen
1C66 01 00 00             		ld	bc,0
1C69 3A 00 00             		ld	a,(ram_levelbuffer+lvl_x)
1C6C CB 27                		sla	a
1C6E 4F                   		ld	c,a
1C6F 09                   		add	hl,bc		;+X
1C70 01 00 00             		ld	bc,0
1C73 3A 00 00             		ld	a,(ram_levelbuffer+lvl_y)
1C76 CB 27                		sla	a
1C78 CB 27                		sla	a
1C7A CB 27                		sla	a
1C7C CB 27                		sla	a
1C7E CB 27                		sla	a
1C80 CB 27                		sla	a
1C82 4F                   		ld	c,a
1C83 09                   		add	hl,bc		;+Y
1C84 01 00 00             		ld	bc,0
1C87 44                   		ld	b,h
1C88 4D                   		ld	c,l
1C89 D9                   		exx
1C8A                      		
1C8A 0E 10                		ld	c,10h
1C8C                      @x_loop:
1C8C DD E5                		push	ix
1C8E 06 0E                		ld	b,0Eh
1C90                      @y_loop:
1C90 FD 2A 00 00           		ld	iy,(ram_levelbuffer+lvl_blocks)
1C94 11 00 00              		ld	de,0
1C97 DD 7E 00              		ld	a,(ix)
1C9A E6 E0                 		and	11100000b
1C9C CB 3F                 		srl	a
1C9E CB 3F                 		srl	a
1CA0 CB 3F                 		srl	a
1CA2 CB 3F                 		srl	a
1CA4 CB 3F                 		srl	a
1CA6 57                    		ld	d,a
1CA7 DD 7E 00              		ld	a,(ix)
1CAA CB 27                 		sla	a
1CAC CB 27                 		sla	a
1CAE CB 27                 		sla	a
1CB0 5F                    		ld	e,a
1CB1 FD 19                 		add	iy,de
1CB3                      
1CB3 D9                   		exx
1CB4 7D                    		ld	a,l
1CB5 D3 BF                  		out	(Vcom),a
1CB7 7C                     		ld	a,h
1CB8 F6 40                  		or	Writemask
1CBA D3 BF                  		out	(Vcom),a
1CBC 11 40 00               		ld	de,40h
1CBF 19                      		add	hl,de
1CC0 D9                   		exx
1CC1 FD 7E 00              		ld	a,(iy)
1CC4 FD 23                 		inc	iy
1CC6 D3 BE                  		out	(Vdata),a
1CC8 FD 7E 00              		ld	a,(iy)
1CCB FD 23                 		inc	iy
1CCD D3 BE                  		out	(Vdata),a
1CCF FD 23                		inc	iy
1CD1 FD 23                		inc	iy
1CD3 FD 7E 00              		ld	a,(iy)
1CD6 FD 23                 		inc	iy
1CD8 D3 BE                  		out	(Vdata),a
1CDA FD 7E 00              		ld	a,(iy)
1CDD FD 23                 		inc	iy
1CDF D3 BE                  		out	(Vdata),a
1CE1 FD 2B                		dec 	iy
1CE3 FD 2B                		dec	iy
1CE5 FD 2B                		dec	iy
1CE7 FD 2B                		dec	iy
1CE9                      		
1CE9 D9                   		exx
1CEA 7D                    		ld	a,l
1CEB D3 BF                  		out	(Vcom),a
1CED 7C                     		ld	a,h
1CEE F6 40                  		or	Writemask
1CF0 D3 BF                  		out	(Vcom),a
1CF2 11 40 00               		ld	de,40h
1CF5 19                      		add	hl,de
1CF6 D9                   		exx
1CF7 FD 7E 00              		ld	a,(iy)
1CFA FD 23                 		inc	iy
1CFC D3 BE                  		out	(Vdata),a
1CFE FD 7E 00              		ld	a,(iy)
1D01 FD 23                 		inc	iy
1D03 D3 BE                  		out	(Vdata),a
1D05 FD 23                		inc	iy
1D07 FD 23                		inc	iy
1D09 FD 7E 00              		ld	a,(iy)
1D0C FD 23                 		inc	iy
1D0E D3 BE                  		out	(Vdata),a
1D10 FD 7E 00              		ld	a,(iy)
1D13 FD 23                 		inc	iy
1D15 D3 BE                  		out	(Vdata),a
1D17                        		
1D17 ED 5B 00 00            		ld	de,(ram_levelbuffer+lvl_x_size)
1D1B DD 19                  		add	ix,de
1D1D                        		
1D1D 05                   		dec	b
1D1E C2 90 1C               		jp	nz,@y_loop
1D21 DD E1                  		pop	ix
1D23 11 01 00               		ld	de,1
1D26 DD 19                  		add	ix,de
1D28                        		
1D28 D9                   		exx
1D29 03                   		inc	bc
1D2A 03                   		inc	bc
1D2B 03                   		inc	bc
1D2C 03                   		inc	bc
1D2D 60                   		ld	h,b
1D2E 69                   		ld	l,c
1D2F D9                   		exx
1D30 0D                   		dec	c
1D31 C2 8C 1C               		jp	nz,@x_loop
1D34                        		
1D34                      ; 		ld	ix,(ram_levelbuffer+lvl_layout)
1D34                      ; 		ld	hl,screen
1D34                      ; 	
1D34                      ; 		ld	c,1Ch
1D34                      ; @y_loop:
1D34                      ; 		push	hl
1D34                      ; 		push	ix
1D34                      ; 		ld	b,20h
1D34                      ; @x_loop:		
1D34                      ;  		ld	a,l
1D34                      ;  		out	(Vcom),a
1D34                      ;  		ld	a,h
1D34                      ;  		or	Writemask
1D34                      ;  		out	(Vcom),a
1D34                      ;  		
1D34                      ; 		ld	iy,(ram_levelbuffer+lvl_blocks)
1D34                      ; 		ld	a,(ix)
1D34                      ; 		sla	a
1D34                      ; 		sla	a
1D34                      ; 		sla	a		;*8
1D34                      ; 		ld	de,0
1D34                      ; 		ld	e,a
1D34                      ; 		add	iy,de
1D34                      ; 		
1D34                      ; 		bit 	0,c
1D34                      ; 		jp	z,@even_y
1D34                      ; 		inc	iy
1D34                      ; 		inc	iy
1D34                      ; @even_y:
1D34                      ; 
1D34                      ; 		bit 	0,b
1D34                      ; 		jp	z,@even_x
1D34                      ; 		ld	de,4
1D34                      ; 		add	iy,de
1D34                      ;  		inc	ix
1D34                      ; @even_x:
1D34                      ; 		ld	a,(iy)
1D34                      ; 		inc	iy
1D34                      ;  		out	(Vdata),a
1D34                      ; 		ld	a,(iy)
1D34                      ; 		inc	iy
1D34                      ;  		out	(Vdata),a
1D34                      ;  		
1D34                      ;  		inc	hl
1D34                      ;  		inc	hl
1D34                      ; 		djnz	@x_loop
1D34                      ; 		
1D34                      ; 		pop	ix
1D34                      ;   		pop	hl
1D34                      ;   		
1D34                      ;    		bit 	0,c
1D34                      ;    		jp	z,@odd_y
1D34                      ;    		ld	de,(ram_levelbuffer+lvl_x_size)
1D34                      ;    		add	ix,de
1D34                      ; @odd_y:
1D34                      ;   		ld	de,40h
1D34                      ;   		add	hl,de
1D34                      ;   		
1D34                      ; 		dec	c
1D34                      ; 		jp	nz,@y_loop
1D34                      		
1D34 C9                   		ret
1D35                      	
1D35                      ; =================================================================
1D35                      ; ------------------------------------------------
1D35                      ; Init
1D35                      ; ------------------------------------------------
1D35                      
1D35                      level_init:
1D35 C9                   		ret
1D36                      		
1D36                      ; =================================================================
1D36                      ; ------------------------------------------------
1D36                      ; Run
1D36                      ; ------------------------------------------------
1D36                      
1D36                      level_run:
1D36 FD 21 00 00          		ld	iy,ram_levelbuffer
1D3A                      		
1D3A                      ; ----------------------------------		
1D3A                      ; draw right
1D3A                      ; ----------------------------------
1D3A                      
1D3A FD 7E 14             		ld	a,(iy+(lvl_drawdir))
1D3D CB 47                		bit 	bit_drw_r,a
1D3F CA 00 00             		jp	z,@no_right
1D42 CB 87                		res	bit_drw_r,a
1D44 FD 77 14             		ld	(iy+(lvl_drawdir)),a
1D47                      		
1D47 FD 7E 01               		ld	a,(iy+(lvl_x+1))
1D4A 67                     		ld	h,a
1D4B FD 7E 00               		ld	a,(iy+(lvl_x))
1D4E 6F                     		ld	l,a
1D4F 11 08 00               		ld	de,8
1D52 19                     		add	hl,de
1D53 54                     		ld	d,h
1D54 5D                     		ld	e,l
1D55                      		
1D55 DD 2A 00 00          		ld	ix,(ram_levelbuffer+lvl_layout)
1D59 01 0F 00              		ld	bc,0Fh
1D5C DD 09                 		add	ix,bc
1D5E                       		
1D5E 01 00 00              		ld	bc,0
1D61 7A                     		ld	a,d
1D62 CB 3F                  		srl	a
1D64 CB 3F                 		srl	a
1D66 CB 3F                  		srl	a
1D68 CB 3F                  		srl	a
1D6A 47                     		ld	b,a
1D6B 7A                     		ld	a,d
1D6C E6 0F                  		and	0Fh
1D6E CB 27                  		sla	a
1D70 CB 27                  		sla	a
1D72 CB 27                  		sla	a
1D74 CB 27                  		sla	a
1D76 4F                     		ld	c,a
1D77 7B                      		ld	a,e
1D78 CB 3F                  		srl	a
1D7A CB 3F                  		srl	a
1D7C CB 3F                  		srl	a
1D7E CB 3F                  		srl	a
1D80 B1                      		or	c
1D81 4F                     		ld	c,a
1D82 DD 09                  		add	ix,bc
1D84                      		
1D84                      		;VDP
1D84 21 3E 38             		ld	hl,screen+3Eh
1D87 FD 7E 00              		ld	a,(iy+(lvl_x))
1D8A CB 3F                 		srl	a
1D8C CB 3F                 		srl	a
1D8E CB 3F                 		srl	a
1D90 E6 1F                 		and	1Fh
1D92 CB 27                 		sla	a
1D94 01 00 00              		ld	bc,0
1D97 4F                    		ld	c,a
1D98 09                    		add	hl,bc
1D99 7D                    		ld	a,l
1D9A E6 3F                 		and	3Fh
1D9C 6F                    		ld	l,a
1D9D                       		
1D9D                      		;ix - layout id
1D9D                      
1D9D 06 0E                		ld	b,0Eh
1D9F                      @next_y_r:
1D9F C5                   		push	bc
1DA0 E5                   		push	hl
1DA1 2A 00 00              		ld	hl,(ram_levelbuffer+lvl_blocks)
1DA4 11 00 00              		ld	de,0
1DA7 DD 7E 00              		ld	a,(ix)
1DAA E6 E0                 		and	11100000b
1DAC CB 3F                 		srl	a
1DAE CB 3F                 		srl	a
1DB0 CB 3F                 		srl	a
1DB2 CB 3F                 		srl	a
1DB4 CB 3F                 		srl	a
1DB6 57                    		ld	d,a
1DB7 DD 7E 00              		ld	a,(ix)
1DBA CB 27                 		sla	a
1DBC CB 27                 		sla	a
1DBE CB 27                 		sla	a
1DC0 5F                    		ld	e,a
1DC1 19                    		add	hl,de
1DC2                      
1DC2 3A 00 00             		ld	a,(ram_levelbuffer+(lvl_x))
1DC5 CB 5F                		bit 	3,a
1DC7 C2 00 00             		jp	nz,@left_r
1DCA 11 04 00             		ld	de,4
1DCD 19                   		add	hl,de
1DCE                      @left_r:
1DCE 44                    		ld	b,h
1DCF 4D                    		ld	c,l
1DD0 E1                    		pop	hl
1DD1                       		
1DD1                      		rept 2			;two times
1DD1                       		ld	a,l
1DD1                       		out	(Vcom),a
1DD1                       		ld	a,h
1DD1                         		or	Writemask
1DD1                       		out	(Vcom),a
1DD1                        		ld	a,(bc)
1DD1                        		inc	bc
1DD1                         		out	(Vdata),a
1DD1                        		ld	a,(bc)
1DD1                        		inc	bc
1DD1                         		out	(Vdata),a
1DD1                       		ld	de,40h
1DD1                       		add	hl,de
1DD1 7D D3 BF 7C F6 40 +   		endr
1DF9                         		
1DF9 ED 5B 00 00             		ld	de,(ram_levelbuffer+lvl_x_size)
1DFD DD 19                   		add	ix,de
1DFF                        		
1DFF C1                     		pop	bc
1E00 10 9D                		djnz	@next_y_r
1E02                      		
1E02                      @no_right:
1E02                      
1E02                      ; ----------------------------------		
1E02                      ; draw left
1E02                      ; 
1E02                      ; TODO: this is the old
1E02                      ; render
1E02                      ; ----------------------------------
1E02                      
1E02 3A 00 00             		ld	a,(ram_levelbuffer+(lvl_drawdir))
1E05 CB 4F                		bit 	bit_drw_l,a
1E07 CA 00 00             		jp	z,@no_left
1E0A CB 8F                		res	bit_drw_l,a
1E0C 32 00 00             		ld	(ram_levelbuffer+(lvl_drawdir)),a
1E0F                      			
1E0F                       		; MASTER SYSTEM LEFT SCROLL
1E0F DD 2A 00 00           		ld	ix,(ram_levelbuffer+lvl_layout)
1E13 01 00 00               		ld	bc,0
1E16                        		
1E16 3A 00 00                		ld	a,(ram_levelbuffer+(lvl_x+1))
1E19 CB 3F                   		srl	a
1E1B CB 3F                  		srl	a
1E1D CB 3F                   		srl	a
1E1F CB 3F                   		srl	a
1E21 47                      		ld	b,a 		
1E22 3A 00 00                		ld	a,(ram_levelbuffer+(lvl_x+1))
1E25 E6 0F                   		and	0Fh
1E27 CB 27                   		sla	a
1E29 CB 27                   		sla	a
1E2B CB 27                   		sla	a
1E2D CB 27                   		sla	a
1E2F 4F                      		ld	c,a
1E30 3A 00 00                 		ld	a,(ram_levelbuffer+(lvl_x))
1E33 CB 3F                   		srl	a
1E35 CB 3F                   		srl	a
1E37 CB 3F                   		srl	a
1E39 CB 3F                   		srl	a
1E3B B1                       		or	c
1E3C 4F                      		ld	c,a
1E3D DD 09                   		add	ix,bc
1E3F                       		
1E3F                       		;VDP
1E3F 21 00 38              		ld	hl,screen;+3Eh
1E42 3A 00 00               		ld	a,(ram_levelbuffer+(lvl_x))
1E45 3D                     		dec	a
1E46 0F                     		rrca
1E47 0F                     		rrca
1E48 0F                     		rrca
1E49 E6 1F                  		and	1Fh
1E4B CB 27                  		sla	a
1E4D 06 00                  		ld	b,0
1E4F 4F                     		ld	c,a
1E50 09                     		add	hl,bc
1E51 7D                     		ld	a,l
1E52 E6 3F                  		and	3Fh
1E54 6F                     		ld	l,a
1E55                        		
1E55                       		;ix - layout id
1E55                       
1E55 FD E5                		push	iy
1E57 06 0E                 		ld	b,0Eh
1E59                      @next_y_l:
1E59 FD 2A 00 00            		ld	iy,(ram_levelbuffer+lvl_blocks)
1E5D 11 00 00               		ld	de,0
1E60 DD 7E 00               		ld	a,(ix)
1E63 E6 E0                  		and	11100000b
1E65 CB 3F                  		srl	a
1E67 CB 3F                  		srl	a
1E69 CB 3F                  		srl	a
1E6B CB 3F                  		srl	a
1E6D CB 3F                  		srl	a
1E6F 57                     		ld	d,a
1E70 DD 7E 00               		ld	a,(ix)
1E73 CB 27                  		sla	a
1E75 CB 27                  		sla	a
1E77 CB 27                  		sla	a
1E79 5F                     		ld	e,a
1E7A FD 19                  		add	iy,de
1E7C                        		
1E7C 3A 00 00              		ld	a,(ram_levelbuffer+(lvl_x))
1E7F CB 5F                 		bit 	3,a
1E81 CA 00 00              		jp	z,@left_l
1E84 FD 23                 		inc	iy
1E86 FD 23                 		inc	iy
1E88 FD 23                 		inc	iy
1E8A FD 23                 		inc	iy
1E8C                      @left_l:
1E8C 7D                    		ld	a,l
1E8D D3 BF                  		out	(Vcom),a
1E8F 7C                     		ld	a,h
1E90 F6 40                    		or	Writemask
1E92 D3 BF                  		out	(Vcom),a
1E94 11 40 00               		ld	de,40h
1E97 19                     		add	hl,de
1E98                        		
1E98 FD 7E 00                		ld	a,(iy)
1E9B FD 23                   		inc	iy
1E9D D3 BE                    		out	(Vdata),a
1E9F FD 7E 00                		ld	a,(iy)
1EA2 FD 23                   		inc	iy
1EA4 D3 BE                    		out	(Vdata),a
1EA6                        		
1EA6 7D                     		ld	a,l
1EA7 D3 BF                  		out	(Vcom),a
1EA9 7C                     		ld	a,h
1EAA F6 40                    		or	Writemask
1EAC D3 BF                  		out	(Vcom),a
1EAE 11 40 00               		ld	de,40h
1EB1 19                     		add	hl,de
1EB2                        		
1EB2 FD 7E 00                		ld	a,(iy)
1EB5 FD 23                   		inc	iy
1EB7 D3 BE                    		out	(Vdata),a
1EB9 FD 7E 00                		ld	a,(iy)
1EBC FD 23                   		inc	iy
1EBE D3 BE                    		out	(Vdata),a
1EC0                          		
1EC0 ED 5B 00 00              		ld	de,(ram_levelbuffer+lvl_x_size)
1EC4 DD 19                    		add	ix,de
1EC6                         		
1EC6 10 91                 		djnz	@next_y_l
1EC8 FD E1                		pop	iy
1ECA                      @no_left:
1ECA                      
1ECA                      		
1ECA                      ; ----------------------------------		
1ECA                      ; draw down
1ECA                      ; ----------------------------------
1ECA                      
1ECA FD 7E 14             		ld	a,(iy+(lvl_drawdir))
1ECD CB 57                		bit 	bit_drw_d,a
1ECF CA 00 00             		jp	z,@no_down
1ED2 CB 97                		res	bit_drw_d,a
1ED4 FD 77 14             		ld	(iy+(lvl_drawdir)),a
1ED7                      @no_down:
1ED7                      
1ED7                      ; ----------------------------------		
1ED7                      ; draw up
1ED7                      ; ----------------------------------
1ED7                      
1ED7 FD 7E 14             		ld	a,(iy+(lvl_drawdir))
1EDA CB 5F                		bit 	bit_drw_u,a
1EDC CA 00 00             		jp	z,@no_up
1EDF CB 9F                		res	bit_drw_u,a
1EE1 FD 77 14             		ld	(iy+(lvl_drawdir)),a
1EE4                      @no_up:
1EE4                       		
1EE4                      ; ----------------------------------
1EE4                      
1EE4 C9                      		ret
1EE5                         
1EE5                      ; =================================================================
1EE5                      ; ------------------------------------------------
1EE5                      ; Subs
1EE5                      ; ------------------------------------------------
1EE5                           		
1EE5                      ; =================================================================
1EE5                      ; ------------------------------------------------
1EE5                      ; Data
1EE5                      ; ------------------------------------------------
1EE5                      
1EE5                      col_SlopeData:
1EE5 00 00 00 00 00 00 +  		db 000h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
1EF5 00 00 00 00 00 00 +  		db 000h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h,00h
1F05 0F 0E 0D 0C 0B 0A +  		db 00Fh,0Eh,0Dh,0Ch,0Bh,0Ah,09h,08h,07h,06h,05h,04h,03h,02h,01h,00h	;02
1F15 00 01 02 03 04 05 +  		db 000h,01h,02h,03h,04h,05h,06h,07h,08h,09h,0Ah,0Bh,0Ch,0Dh,0Eh,0Fh
1F25 0F 0F 0E 0E 0D 0D +  		db 00Fh,0Fh,0Eh,0Eh,0Dh,0Dh,0Ch,0Ch,0Bh,0Bh,0Ah,0Ah,09h,09h,08h,08h
1F35 07 07 06 06 05 05 +  		db 007h,07h,06h,06h,05h,05h,04h,04h,03h,03h,02h,02h,01h,01h,00h,00h
1F45 08 08 09 09 0A 0A +  		db 008h,08h,09h,09h,0Ah,0Ah,0Bh,0Bh,0Ch,0Ch,0Dh,0Dh,0Eh,0Eh,0Fh,0Fh
1F55 00 00 01 01 02 02 +  		db 000h,00h,01h,01h,02h,02h,03h,03h,04h,04h,05h,05h,06h,06h,07h,07h
1F65                      		
1F65 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1F75 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1F85 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1F95 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1FA5 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1FB5 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1FC5 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1FD5 01 01 01 01 01 01 +  		db 001h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h,01h
1FE5                      
1FE5                      		
1FE5                      		
1FE5                      
1FE5                      ; -------------------------------------------------
1FE5                      ; Vars
1FE5                      ; -------------------------------------------------
1FE5                      
1FE5                      ; -------------------------------------------------
1FE5                      ; RAM
1FE5                      ; -------------------------------------------------
1FE5                      
1FE5                      			rsset ram_modebuffer
1FE5 =00000291            RAM_LevelBuffer		rb max_lvlprz
1FE5 =000002AB            RAM_LevelPrizes		rb 100h 
1FE5 =000002D4            RAM_ObjBuffer		rb sizeof_obj*max_objects
1FE5 =000002F8            RAM_ObjJmpTo		rb 3			;0C3 + co + de
1FE5                      ;    			inform 0,"%h",ram_levelbuffer
1FE5                       			
1FE5                      ; -------------------------------------------------
1FE5                      ; Init
1FE5                      ; -------------------------------------------------
1FE5                      
1FE5                      Level:
1FE5 06 01                  		ld	b,ID_FadeOut
1FE7 11 00 1F               		ld	de,1F00h
1FEA CD FC 11               		call	PalFade_Set
1FED CD 28 12                 		call	PalFade_Wait
1FF0                       		
1FF0 F3                    		di
1FF1 CD FF 0F             		call	VDP_ClearLayer
1FF4                      		
1FF4 3A 07 C8               		ld	a,(ram_vdpregs)
1FF7 CB EF                		set	bit_HscrlBar,a
1FF9 CB A7                		res 	4,a
1FFB 32 07 C8             		ld	(ram_vdpregs),a
1FFE CD 31 10             		call	Vdp_Update
2001                      		
2001                      ; -----------------------------------
2001                      
2001 3E 00 32 FE FF       		bankdata BANK_LvlMd_Init
2006                      		
2006 21 00 00             		ld      hl,pal_level_test
2009 DD 21 6E CA            		ld	ix,ram_palfadebuff
200D 01 10 00             		ld	bc,0010h
2010 CD 10 12              		call	PalFade_Load
2013 21 00 00             		ld      hl,pal_player
2016 DD 21 6E CA            		ld	ix,ram_palfadebuff
201A 01 10 10             		ld	bc,1010h
201D CD 10 12              		call	PalFade_Load
2020 21 00 00             		ld	hl,art_level_test
2023 01 20 16             		ld	bc,1620h
2026 11 00 00             		ld	de,0
2029 CD 74 0F             		call	WriteVRAM
202C                      		
202C                      ; -----------------------------------
202C                      
202C 3E 00 32 FE FF       		bankdata BANK_LvlMd_Loop
2031                      		
2031 CD 35 1D             		call	level_init
2034 21 00 00             		ld	hl,test_level
2037 01 00 00             		ld	bc,0
203A 11 00 00             		ld	de,0
203D CD F5 1B             		call	level_load
2040 CD 48 1C             		call	level_draw
2043 CD 09 13             		call	objects_init
2046                      		
2046 01 68 00             		ld	bc,VBlank_Default
2049 ED 43 01 C8          		ld	(ram_vintaddr),bc
204D 01 00 00             		ld	bc,HBlank_Level
2050 ED 43 04 C8          		ld	(ram_hintaddr),bc
2054                      		
2054 01 15 17              		ld	bc,obj_test
2057 ED 43 00 C6           		ld	(ram_objbuffer),bc
205B                       		
205B                      ; -----------------------------------
205B                      
205B FB                   		ei
205C CD 36 1D             		call	level_run
205F CD 0F 13             		call	objects_run
2062                      		
2062 06 02                  		ld	b,ID_FadeIn
2064 11 00 1F               		ld	de,1F00h
2067 CD FC 11               		call	PalFade_Set
206A CD 28 12                		call	PalFade_Wait
206D                         		
206D                      ; -------------------------------------------------
206D                      ; Loop
206D                      ; -------------------------------------------------
206D                      
206D                      level_loop:
206D CD B4 10               		call	Sprites_Reset		
2070 CD 57 10             		call    vsync
2073                      		
2073 CD 36 1D                		call	level_run
2076                         		
2076                      ; --------------------
2076                      
2076 21 BE CD             		ld	hl,ram_tilestovdp+200h
2079 AF                   		xor	a
207A D3 BF                  		out 	(Vcom),a
207C 3E 62                  		ld	a,22h|WriteMask
207E D3 BF                    		out 	(Vcom),a
2080 0E BE                		ld	c,Vdata
2082 06 80                		ld	b,80h
2084 ED B3                		otir
2086                      
2086                      ; --------------------
2086                      
2086 CD 0F 13             		call	objects_run
2089                      	
2089 C3 6D 20             		jp      level_loop		; loop
208C                      
208C                      ; -------------------------------------------------
208C                      ; HBlank
208C                      ; -------------------------------------------------
208C                      
208C                      HBlank_Level:
208C C9                   		ret
208D                      		
208D                      ; -------------------------------------------------
208D                      ; Subs
208D                      ; -------------------------------------------------
208D                      
208D                      
208D                      		
208D                      		
208D                      		
208D                      ; ====================================================================
208D                      ; -------------------------------------------------
208D                      ; Sound
208D                      ; -------------------------------------------------
208D                      
208D                       		include "sound/code.asm"
208D                      ; ================================================================
208D                      ; SMEG Junior
208D                      ; Sound and Music Engine for Game Gear/Master System
208D                      ;
208D                      ; (C)2015 GF64
208D                      ; 
208D                      ; ImpulseTracker
208D                      ;
208D                      ; Ticks:
208D                      ; 150 - NTSC
208D                      ; 120 - PAL
208D                      ; ================================================================
208D                      
208D                      			rsreset
208D =00000144            DrvStatus		rb 1		;Byte
208D =0000015E            DrvSettings		rb 1		;Byte
208D =00000178            CurrPattern		rb 1		;Byte
208D =00000191            PatternEnd		rb 1		;Byte
208D =000001AB            PatternLoop		rb 1		;Byte
208D                      
208D                      
208D =000001C6            PattSize		rw 1		;Word
208D =000001DD            PattRead		rw 1		;Word
208D =000001F5            SongStart		rw 1		;Word
208D =0000020C            SongRead		rw 1		;Word
208D                      
208D                      
208D =00000228            TicksRead		rb 1		;Byte
208D =0000023F            TicksSet		rb 1		;Byte
208D =00000256            PsgLast			rb 1		;Byte
208D =00000273            DrvSettingsBGM		rb 1		;Byte
208D =0000028D            Psg_Vibrato		rb 1		;Byte
208D =000002A7            Psg_AutoVol		rb 1		;Byte
208D                      
208D =000002B9            CurrChan		rb 1
208D =000002CD            CurrChanType		rb 1
208D =000002F0            UsedChnBuff		rb 4		;Array (Bytes)
208D                      
208D                      ; --------------------------------------------
208D                      ; Channel settings
208D                      ; --------------------------------------------
208D                      
208D                      			rsreset
208D =0000038B            Chn_Type		rb 1		;Byte
208D =000003A1            Chn_ID			rb 1		;Byte
208D =000003B8            Chn_Inst		rb 1		;Byte
208D =000003CF            Chn_Vol			rb 1		;Byte
208D                      
208D =000003E8            Chn_Freq		rw 1		;Word
208D =00000417            Chn_Effect		rw 1		;Word		;TODO: its backwards
208D =00000430            Chn_Portam		rw 1		;Word
208D =00000449            Chn_DefVol		rb 1		;Byte
208D =00000460            Chn_Note		rb 1		;Byte
208D =0000047A            Chn_Panning		rb 1		;Byte
208D =00000498            Chn_PSG_Vibrato		rb 1		;Byte
208D =000004AA            Chn_Unused		rb 2
208D =000004BC            sizeof_Chn		rw 0
208D                       
208D                      ; --------------------------------------------
208D                      ; Bits
208D                      ; --------------------------------------------
208D                      
208D =0000053D            bitPriority		equ	0
208D =0000054E            bitSfxOn		equ	1
208D =00000562            bitDisabled		equ	2
208D                      
208D                      ;Status
208D =0000057E            bitDacOn		equ	0
208D =00000591            bitDacNote		equ	1
208D =000005A2            bitTone3		equ	2
208D =000005B6            bitSpecial3		equ	3
208D                      
208D                      ; --------------------------------------------
208D                      ; Channel IDs
208D                      ; --------------------------------------------
208D                      
208D =0000063B            PSG_1			equ	080h
208D =0000064D            PSG_2			equ	0A0h
208D =0000065F            PSG_3			equ	0C0h
208D =00000671            NOISE			equ	0E0h
208D =00000685            MaxChannels		equ	4
208D                      
208D                      ; --------------------------------------------
208D                      ; .IT request ($80+) format
208D                      ; --------------------------------------------
208D                      
208D =00000717            bitNote			equ	0
208D =00000728            bitInst			equ	1
208D =0000073A            bitVolume		equ	2
208D =0000074C            bitEffect		equ	3
208D =00000760            bitSameNote		equ	4
208D =00000774            bitSameInst		equ	5
208D =00000787            bitSameVol		equ	6
208D =0000079D            bitSameEffect		equ	7
208D                      
208D                      ; --------------------------------------------
208D                      ; RAM
208D                      ; --------------------------------------------
208D                      
208D                      			rsset ram_sounddriver
208D =0000083B            RAM_SMEG_Buffer		rb 48h
208D =00000854            RAM_SMEG_SfxBuff	rb 48h
208D =00000871            RAM_SMEG_Chnls_BGM	rb 10h*4
208D =0000088E            RAM_SMEG_Chnls_SFX	rb 10h*4
208D =000008A1            sizeof_SMEG		rb 0
208D                      
208D                      ; ================================================================
208D                      ; -------------------------------------------
208D                      ; Init
208D                      ; -------------------------------------------
208D                      
208D                      SMEG_Init:
208D 21 2E C8             		ld	hl,RAM_SMEG_Buffer
2090 0E 01                		ld	c,1
2092                      @nxtval:
2092 06 FF                		ld	b,0FFh
2094 AF                   		xor	a
2095                      @clrall:	
2095 77                   		ld	(hl),a
2096 23                   		inc	hl
2097 10 FC                		djnz	@clrall
2099 0D                   		dec	c
209A C2 92 20             		jp	nz,@nxtval
209D                      		
209D                      ; -------------------------------------------
209D                      ; Stop ALL Sound
209D                      ; -------------------------------------------
209D                      
209D                      SMEG_StopSnd:
209D 21 2E C8             		ld	hl,RAM_SMEG_Buffer
20A0 7E                   		ld	a,(hl)
20A1 CB D7                		set 	bitDisabled,a
20A3 77                   		ld	(hl),a
20A4 21 76 C8             		ld	hl,RAM_SMEG_SfxBuff
20A7 7E                   		ld	a,(hl)
20A8 CB D7                		set 	bitDisabled,a
20AA 77                   		ld	(hl),a
20AB                      		
20AB 3E 9F                		ld	a,09Fh
20AD D3 7F                		out	(7Fh),a
20AF 3E BF                		ld	a,0BFh
20B1 D3 7F                		out	(7Fh),a
20B3 3E DF                		ld	a,0DFh
20B5 D3 7F                		out	(7Fh),a
20B7 3E FF                		ld	a,0FFh
20B9 D3 7F                		out	(7Fh),a
20BB C9                   		ret
20BC                      
20BC                      ; -------------------------------------------
20BC                      ; Play Song
20BC                      ; -------------------------------------------
20BC                      
20BC                      SMEG_PlaySong:
20BC 21 2E C8             		ld	hl,RAM_SMEG_Buffer
20BF 7E                   		ld	a,(hl)
20C0 CB 97                		res 	bitDisabled,a
20C2 77                   		ld	(hl),a
20C3 C9                   		ret
20C4                      		
20C4                      ; -------------------------------------------
20C4                      ; Load SFX
20C4                      ;
20C4                      ; d0 - StartOfSong
20C4                      ; d1 - Ticks
20C4                      ; -------------------------------------------
20C4                      
20C4                      SMEG_LoadSfx:
20C4                      ; 		movem.l	a4-a6,-(sp)
20C4                      ; 		lea	(RAM_SMEG_SfxBuff),a6
20C4                      ; 		lea	(RAM_SMEG_Chnls_SFX),a5
20C4                      ; 		clr.b	PcmChnOnOff(a6)
20C4                      ;                 clr.b	DrvStatus(a6)
20C4                      ;                 bset	#bitSfxOn,(a6)
20C4                      ; 		bsr	SMEG_Load_SetChnls
20C4                      ; 		movem.l	(sp)+,a4-a6
20C4 C9                   		ret
20C5                      
20C5                      ; -------------------------------------------
20C5                      ; Load Song
20C5                      ;
20C5                      ; hl - StartOfSong
20C5                      ; b - Ticks
20C5                      ; -------------------------------------------
20C5                      
20C5                      SMEG_LoadSong:
20C5 E5                   		push	hl
20C6 C5                   		push	bc
20C7 CD 9D 20             		call	SMEG_StopSnd			;hl and b are gone
20CA C1                   		pop	bc
20CB E1                   		pop	hl
20CC                      		
20CC DD 21 2E C8          		ld	ix,RAM_SMEG_Buffer		;a6
20D0 FD 21 BE C8          		ld	iy,RAM_SMEG_Chnls_BGM		;a5
20D4 AF                   		xor	a
20D5 DD 77 00             		ld	(ix+DrvStatus),a
20D8 CD 00 00             		call	SMEG_Load_SetChnls
20DB C3 00 00             		jp	SMEG_Load_FixBgm
20DE                      		
20DE                      ; -----------------------
20DE                      ; Setup channels
20DE                      ; 
20DE                      ; hl - Song
20DE                      ; b  - Ticks
20DE                      ; -----------------------
20DE                      
20DE                      SMEG_Load_SetChnls:
20DE DD 70 0E             		ld	(ix+TicksSet),b
20E1                      		
20E1                      ; -----------------------
20E1                      ; Get instruments
20E1                      ; -----------------------
20E1                      
20E1 23                   		inc	hl			;Probably not making PSG instruments
20E2 23                   		inc	hl
20E3                      
20E3                      ; -----------------------
20E3                      ; Get the
20E3                      ; PatternEnd/PatternLoop
20E3                      ; numbers
20E3                      ; -----------------------
20E3                      
20E3 7E                   		ld	a,(hl)
20E4 23                   		inc	hl
20E5 DD 77 03             		ld	(ix+PatternEnd),a
20E8 7E                   		ld	a,(hl)
20E9 23                   		inc	hl
20EA DD 77 04             		ld	(ix+PatternLoop),a
20ED                      
20ED                      ; -----------------------
20ED                      ; Setup the channel IDs
20ED                      ; -----------------------
20ED                      
20ED 06 04                		ld	b,MaxChannels
20EF                      @SetId:
20EF 3E 01                		ld	a,1
20F1 FD 77 00             		ld	(iy+Chn_Type),a
20F4 7E                   		ld	a,(hl)
20F5 23                   		inc	hl
20F6 FD 77 01             		ld	(iy+Chn_ID),a
20F9 AF                   		xor	a
20FA FD 77 05             		ld	(iy+(Chn_Freq+1)),a
20FD FD 77 04             		ld	(iy+Chn_Freq),a
2100                      		
2100 11 10 00             		ld	de,sizeof_Chn
2103 FD 19                		add 	iy,de
2105 10 E8                		djnz	@SetId
2107                      
2107                      ; -----------------------
2107                      ; Master volumes
2107                      ; -----------------------
2107                      
2107                      		; (Removed in this driver)
2107                      		
2107                      ; -----------------------
2107                      ; last steps
2107                      ; -----------------------
2107                       
2107 DD 74 0A              		ld	(ix+(SongStart+1)),h
210A DD 75 09              		ld	(ix+SongStart),l
210D 7E                    		ld	a,(hl)
210E 23                    		inc	hl
210F DD 77 05              		ld	(ix+PattSize),a
2112 7E                    		ld	a,(hl)
2113 23                    		inc	hl
2114 DD 77 06              		ld	(ix+(PattSize+1)),a	
2117 AF                    		xor	a
2118 DD 77 08              		ld	(ix+(PattRead+1)),a
211B DD 77 07              		ld	(ix+PattRead),a
211E 23                    		inc	hl
211F 23                     		inc	hl
2120 23                     		inc	hl
2121 23                    		inc	hl
2122 23                     		inc	hl
2123 23                     		inc	hl
2124 DD 74 0C              		ld	(ix+(SongRead+1)),h
2127 DD 75 0B              		ld	(ix+SongRead),l
212A                       		
212A                      ;  		ld	a,1
212A                      ;  		ld	(ix+CurrPattern),a
212A C9                   		ret
212B                      		
212B                      ; -----------------------
212B                      ; Fix stuff to BGM
212B                      ; -----------------------
212B                      
212B                      SMEG_Load_FixBgm:
212B                      ; 		lea	(RAM_SMEG_Chnls_BGM),a5
212B                      ; 		moveq	#(MaxChannels)-1,d4
212B                      ; @SetId:
212B                      ; 		move.b	#$80,Chn_Panning(a5)
212B                      ; 
212B                      ; 		tst.b	Chn_ID(a5)
212B                      ; 		bmi.s	@NotFM
212B                      ; 		cmp.b	#PCM_1,Chn_ID(a5)
212B                      ; 		bge.s	@NotFM
212B                      ; 
212B                      ; 		clr.b	Chn_FM_Key(a5)
212B                      ; 		move.b	#%00001111,Chn_FM_Key(a5)
212B                      ; 		move.b	#$C0,Chn_Panning(a5)
212B                      ; 		bsr	SMEG_FM_SetPan
212B                      ; 
212B                      ; @NotFM:
212B                      ; 		adda 	#sizeof_Chn,a5
212B                      ; 		dbf	d4,@SetId
212B C9                   		ret
212C                      		
212C                      ; ================================================================
212C                      ; -------------------------------------------
212C                      ; Run
212C                      ; -------------------------------------------
212C                      
212C                      SMEG_Upd:
212C DD 21 2E C8          		ld	ix,RAM_SMEG_Buffer
2130 DD 7E 00             		ld	a,(ix)
2133 CB C7                		set 	bitPriority,a
2135 DD 77 00             		ld	(ix),a
2138 CD 00 00             		call	@ReadRow
213B                      		
213B DD 21 76 C8          		ld	ix,RAM_SMEG_SfxBuff
213F DD 7E 00             		ld	a,(ix)
2142 CB 87                		res 	bitPriority,a
2144 DD 77 00             		ld	(ix),a
2147 CB 4F                		bit 	bitSfxOn,a
2149 CA 00 00             		jp	z,@Wait
214C CD 00 00             		call	@ReadRow
214F                      		
214F                      @Wait:
214F C9                   		ret
2150                      
2150                      ; -------------------------------------------
2150                      ; Read row
2150                      ; -------------------------------------------
2150                      
2150                      @ReadRow:
2150 DD 7E 00             		ld	a,(ix)
2153 CB 57                		bit 	bitDisabled,a
2155 C2 4F 21             		jp	nz,@Wait
2158                      		
2158 DD 35 0D             		dec 	(ix+TicksRead)
215B DD 7E 0D             		ld	a,(ix+TicksRead)
215E F2 4F 21             		jp	p,@Wait
2161 DD 7E 0E             		ld	a,(ix+TicksSet)
2164 DD 77 0D             		ld	(ix+TicksRead),a
2167                      		
2167 DD 56 0C             		ld	d,(ix+(SongRead+1))
216A DD 5E 0B             		ld	e,(ix+SongRead)	
216D                      	
216D                      ; --------------------------------
216D                      ; New pattern
216D                      ; --------------------------------
216D                      
216D                      @Next:
216D DD 46 08             		ld	b,(ix+(PattRead+1))
2170 DD 7E 06             		ld	a,(ix+(PattSize+1))
2173 B8                   		cp	b
2174 C2 00 00             		jp	nz,@NoNextRow
2177 DD 46 07             		ld	b,(ix+PattRead)
217A DD 7E 05             		ld	a,(ix+PattSize)
217D 3D                   		dec 	a
217E B8                   		cp	b
217F D2 00 00             		jp	nc,@NoNextRow
2182                      		
2182 AF                   		xor	a
2183 DD 77 08             		ld	(ix+(PattRead+1)),a
2186 DD 77 07             		ld	(ix+PattRead),a
2189                      		
2189 DD 7E 03               		ld	a,(ix+PatternEnd)
218C DD 46 02               		ld	b,(ix+CurrPattern)
218F B8                      		cp	b
2190 C2 00 00               		jp	nz,@NotEnd
2193                       		
2193                       		; Restart
2193 DD 66 0A              		ld	h,(ix+(SongStart+1))
2196 DD 6E 09              		ld	l,(ix+(SongStart))
2199 7E                    		ld	a,(hl)
219A 23                    		inc	hl
219B DD 77 05              		ld	(ix+(PattSize)),a
219E 7E                    		ld	a,(hl)
219F 23                    		inc	hl
21A0 DD 77 06              		ld	(ix+(PattSize+1)),a
21A3 23                    		inc	hl
21A4 23                     		inc	hl
21A5 23                     		inc	hl
21A6 23                    		inc	hl
21A7 23                     		inc	hl
21A8 23                     		inc	hl
21A9 DD 74 0C               		ld	(ix+(SongRead+1)),h
21AC DD 75 0B               		ld	(ix+SongRead),l
21AF                      		
21AF AF                   		xor	a
21B0 DD 77 08             		ld	(ix+(PattRead+1)),a
21B3 DD 77 07             		ld	(ix+PattRead),a
21B6 DD 7E 04              		ld	a,(ix+PatternLoop)
21B9 DD 77 02             		ld	(ix+CurrPattern),a
21BC                      
21BC AF                   		xor	a
21BD DD 77 0D             		ld	(ix+TicksRead),a
21C0 DD 77 02             		ld	(ix+CurrPattern),a
21C3 18 8B                 		jr 	@ReadRow
21C5                      
21C5                      ; --------------------------------
21C5                      
21C5                      @NotEnd:
21C5 DD 7E 02              		ld	a,(ix+CurrPattern)
21C8 3C                    		inc	a
21C9 DD 77 02              		ld	(ix+CurrPattern),a
21CC                       		
21CC DD 7E 02              		ld	a,(ix+CurrPattern)
21CF DD 46 04              		ld	b,(ix+PatternLoop)
21D2 B8                    		cp	b
21D3 C2 00 00              		jp	nz,@DontSaveLoop
21D6 DD 72 0A              		ld	(ix+(SongStart+1)),d
21D9 DD 73 09              		ld	(ix+(SongStart)),e
21DC                      		
21DC                      @DontSaveLoop:	
21DC 1A                    		ld	a,(de)
21DD 13                    		inc	de
21DE DD 77 05              		ld	(ix+PattSize),a
21E1 1A                    		ld	a,(de)
21E2 13                    		inc	de
21E3 DD 77 06              		ld	(ix+(PattSize+1)),a	
21E6 AF                    		xor	a
21E7 DD 77 08              		ld	(ix+(PattRead+1)),a
21EA DD 77 07              		ld	(ix+PattRead),a
21ED 13                   		inc	de
21EE 13                   		inc	de
21EF 13                   		inc	de
21F0 13                   		inc	de
21F1 13                   		inc	de
21F2 13                   		inc	de
21F3                      		
21F3                      ; --------------------------------
21F3                      ; Current pattern
21F3                      ; --------------------------------
21F3                       
21F3                      @NoNextRow:
21F3 1A                   		ld	a,(de)
21F4 13                    		inc	de
21F5 DD 77 13              		ld	(ix+CurrChan),a
21F8 FE 00                 		cp	0
21FA C2 00 00             		jp	nz,@ValidNote
21FD                      		
21FD DD 46 08             		ld	b,(ix+(PattRead+1))
2200 DD 4E 07             		ld	c,(ix+(PattRead))
2203 03                   		inc	bc
2204 DD 70 08             		ld	(ix+(PattRead+1)),b
2207 DD 71 07             		ld	(ix+(PattRead)),c
220A                      		
220A DD 72 0C             		ld	(ix+(SongRead+1)),d
220D DD 73 0B             		ld	(ix+(SongRead)),e
2210 C9                   		ret
2211                      		
2211                      @ValidNote:
2211 DD 7E 13              		ld	a,(ix+CurrChan)
2214 CB 7F                 		bit 	7,a
2216 CA 00 00             		jp	z,@Not80
2219                      		
2219 DD 46 08             		ld	b,(ix+(PattRead+1))
221C DD 4E 07             		ld	c,(ix+(PattRead))
221F 03                   		inc	bc
2220 DD 70 08             		ld	(ix+(PattRead+1)),b
2223 DD 71 07             		ld	(ix+(PattRead)),c
2226 CB BF                		res 	7,a
2228 DD 77 13             		ld	(ix+CurrChan),a
222B                      
222B 1A                    		ld	a,(de)
222C 13                    		inc	de
222D DD 77 14              		ld	(ix+CurrChanType),a
2230                      		
2230                      @Not80:
2230 DD 46 08             		ld	b,(ix+(PattRead+1))
2233 DD 4E 07             		ld	c,(ix+(PattRead))
2236 03                   		inc	bc
2237 DD 70 08             		ld	(ix+(PattRead+1)),b
223A DD 71 07             		ld	(ix+(PattRead)),c
223D                      		
223D 97                   		sub 	a
223E                      		;channel_on flags goes here
223E                      		
223E FD 21 BE C8          		ld	iy,RAM_SMEG_Chnls_BGM
2242 DD 7E 00             		ld	a,(ix)
2245 CB 47                		bit 	bitPriority,a
2247 C2 00 00             		jp	nz,@BgmPrio
224A FD 21 FE C8          		ld	iy,RAM_SMEG_Chnls_SFX		
224E                      @BgmPrio:
224E DD 7E 13             		ld	a,(ix+CurrChan)
2251 FE 01                		cp	1
2253 CA 00 00             		jp	z,@First
2256 3D                   		dec 	a
2257                      @NextChn:
2257 01 10 00              		ld	bc,sizeof_Chn
225A FD 09                   		add 	iy,bc
225C 3D                      		dec	a
225D C2 57 22                		jp	nz,@NextChn
2260                      @First:
2260                      
2260 DD 7E 14              		ld	a,(ix+CurrChanType)
2263 FE 00                 		cp	0
2265 CA 00 00             		jp	z,@NotRest
2268 DD 7E 14              		ld	a,(ix+CurrChanType)
226B FD 77 00             		ld	(iy+Chn_Type),a
226E                      
226E                      @NotRest:
226E                      
226E                      ; -------------
226E                      ; Note
226E                      ; -------------
226E                      
226E FD 7E 00             		ld	a,(iy+Chn_Type)
2271 CB 67                		bit 	bitSameNote,a
2273 C2 00 00             		jp	nz,@PlayOnly
2276 CB 47                		bit 	bitNote,a
2278 CA 00 00             		jp	z,@NoNote
227B                      
227B 1A                   		ld	a,(de)
227C 13                   		inc 	de
227D FD 77 0B             		ld	(iy+Chn_Note),a
2280 DD 46 08             		ld	b,(ix+(PattRead+1))
2283 DD 4E 07             		ld	c,(ix+(PattRead))
2286 03                   		inc	bc
2287 DD 70 08             		ld	(ix+(PattRead+1)),b
228A DD 71 07             		ld	(ix+(PattRead)),c
228D                      
228D                      @PlayOnly:
228D CD 00 00              		call	SMEG_ChannelRest
2290                      		
2290                      ; -------------
2290                      ; Instrument
2290                      ; -------------
2290                      
2290                      @NoNote:
2290 FD 7E 00             		ld	a,(iy+Chn_Type)
2293 CB 6F                 		bit 	bitSameInst,a
2295 C2 00 00              		jp	nz,@SameInst
2298 CB 4F                		bit 	bitInst,a
229A CA 00 00             		jp	z,@NoInst
229D                      		
229D FD 34 0A             		inc	(iy+Chn_DefVol)
22A0                      		
22A0 1A                   		ld	a,(de)
22A1 13                   		inc 	de
22A2 FD 77 02             		ld	(iy+Chn_Inst),a
22A5 DD 46 08             		ld	b,(ix+(PattRead+1))
22A8 DD 4E 07             		ld	c,(ix+(PattRead))
22AB 03                   		inc	bc
22AC DD 70 08             		ld	(ix+(PattRead+1)),b
22AF DD 71 07             		ld	(ix+(PattRead)),c
22B2                      
22B2                      ; 		bsr	SMEG_SetVoice
22B2                      @SameInst:
22B2                      
22B2                      ; -------------
22B2                      ; Volume
22B2                      ; -------------
22B2                      
22B2                      @NoInst:
22B2 FD 7E 00             		ld	a,(iy+Chn_Type)
22B5 CB 77                		bit 	bitSameVol,a
22B7 C2 00 00             		jp	nz,@SameVol
22BA CB 57                		bit 	bitVolume,a
22BC CA 00 00             		jp	z,@NoVolume
22BF                       
22BF AF                    		xor	a
22C0 FD 77 09             		ld	(iy+(Chn_Portam+1)),a
22C3 FD 77 08             		ld	(iy+Chn_Portam),a
22C6 FD 77 07             		ld	(iy+(Chn_Effect+1)),a
22C9 FD 77 06             		ld	(iy+Chn_Effect),a
22CC 1A                   		ld	a,(de)
22CD 13                   		inc 	de
22CE DD 46 08             		ld	b,(ix+(PattRead+1))
22D1 DD 4E 07             		ld	c,(ix+(PattRead))
22D4 03                   		inc	bc
22D5 DD 70 08             		ld	(ix+(PattRead+1)),b
22D8 DD 71 07             		ld	(ix+(PattRead)),c
22DB                      		
22DB D6 40                  		sub 	64
22DD ED 44                  		neg 	a
22DF FD 77 03             		ld	(iy+Chn_Vol),a
22E2                      		
22E2                      @SameVol:
22E2 CD 00 00               		call	@ChnVolume
22E5                      
22E5                      ; -------------
22E5                      ; Effect
22E5                      ; -------------
22E5                       
22E5                      @NoVolume:
22E5 FD 7E 00             		ld	a,(iy+Chn_Type)
22E8 CB 7F                		bit 	bitSameEffect,a
22EA C2 00 00             		jp	nz,@SameEffect
22ED CB 5F                		bit 	bitEffect,a
22EF CA 00 00             		jp	z,@NoEffect
22F2                      
22F2 1A                   		ld	a,(de)
22F3 FD 77 07             		ld	(iy+(Chn_Effect+1)),a
22F6 13                   		inc 	de
22F7 DD 46 08             		ld	b,(ix+(PattRead+1))
22FA DD 4E 07             		ld	c,(ix+(PattRead))
22FD 03                   		inc	bc
22FE DD 70 08             		ld	(ix+(PattRead+1)),b
2301 DD 71 07             		ld	(ix+(PattRead)),c
2304                      		
2304 1A                   		ld	a,(de)
2305 FD 77 06             		ld	(iy+Chn_Effect),a
2308 13                   		inc 	de
2309 DD 46 08             		ld	b,(ix+(PattRead+1))
230C DD 4E 07             		ld	c,(ix+(PattRead))
230F 03                   		inc	bc
2310 DD 70 08             		ld	(ix+(PattRead+1)),b
2313 DD 71 07             		ld	(ix+(PattRead)),c
2316                      
2316                      @SameEffect:
2316 CD 00 00             		call	@ChannelEffects
2319                       
2319                      ; --------------
2319                      ; Play the note
2319                      ; --------------
2319                      ; 
2319                      @NoEffect:
2319 FD 7E 00             		ld	a,(iy+Chn_Type)
231C CB 67                		bit 	bitSameNote,a
231E C2 00 00             		jp	nz,@SameNote
2321 CB 47                		bit 	bitNote,a
2323 CA 6D 21             		jp	z,@Next
2326                      		
2326                      @SameNote:
2326 CD 00 00              		call	@ChannelPlay	
2329 C3 6D 21              		jp	@Next
232C                      
232C                      ; ================================================================
232C                      ; -------------------------------
232C                      ; Set Volume
232C                      ; -------------------------------
232C                      
232C                      @ChnVolume:
232C FD 7E 01             		ld	a,(iy+Chn_ID)
232F FE FF                		cp	0FFh
2331 CA 00 00             		jp	z,@Disabled
2334                      		
2334 0E 00                		ld	c,00h
2336 FD 7E 03               		ld	a,(iy+Chn_Vol)
2339 CA 00 00                 		jp	z,@Full
233C D6 40                    		sub 	64
233E CB 2F                    		sra 	a
2340 CB 2F                    		sra	a
2342                      @Full:
2342 E6 0F                 		and 	00001111b
2344 47                    		ld	b,a
2345 FD 7E 01              		ld	a,(iy+Chn_ID)
2348 E6 E0                 		and	11100000b
234A CB E7                 		set 	4,a
234C B0                    		or	b
234D D3 7F                 		out	(7Fh),a
234F C9                   		ret 
2350                      		
2350                      ; -------------------------------
2350                      ; Set Freq
2350                      ; -------------------------------
2350                      
2350                      @NoteFreq:	
2350 FD 7E 0B             		ld	a,(iy+Chn_Note)
2353 FE FF                		cp	0FFh
2355 CA 00 00             		jp	z,@ResetFreq
2358 FE FE                		cp	0FEh
235A CA 00 00             		jp	z,@ResetFreq
235D                      		
235D FD 7E 01             		ld	a,(iy+Chn_ID)
2360 FE E0                		cp	NOISE
2362 C2 00 00             		jp	nz,@NotNoise
2365                      		
2365 AF                   		xor	a
2366 FD 77 05             		ld	(iy+(Chn_Freq+1)),a
2369 3C                   		inc	a
236A FD 77 04             		ld	(iy+Chn_Freq),a
236D                      
236D DD 7E 01             		ld	a,(ix+DrvSettings)
2370 CB 57                		bit	bitTone3,a
2372 CA 00 00             		jp	z,@Disabled
2375                      @NotNoise:
2375 01 00 00             		ld	bc,0
2378 FD 4E 0B             		ld	c,(iy+Chn_Note)
237B CB 21                		sla	c
237D E5                   		push	hl
237E 21 00 00             		ld	hl,@Notes_PSG
2381 FD 7E 01              		ld	a,(iy+Chn_ID)
2384 FE E0                  		cp	NOISE
2386 C2 00 00               		jp	nz,@NotNoiseFix
2389 21 00 00             		ld	hl,@Notes_PSG+(32*2)		
238C                      @NotNoiseFix:
238C 09                   		add 	hl,bc
238D 7E                   		ld	a,(hl)
238E FD 77 04             		ld	(iy+(Chn_Freq)),a
2391 23                   		inc	hl
2392 7E                   		ld	a,(hl)
2393 FD 77 05             		ld	(iy+Chn_Freq+1),a
2396 E1                   		pop	hl
2397 C9                   		ret 
2398                      
2398                      @ResetFreq:
2398 AF                   		xor	a
2399 FD 77 05             		ld	(iy+(Chn_Freq+1)),a
239C FD 77 04             		ld	(iy+Chn_Freq),a
239F                      		
239F                      @Disabled:
239F C9                    		ret
23A0                      		
23A0                      ; -------------------------------
23A0                      ; Channel play
23A0                      ; -------------------------------
23A0                      
23A0                      @ChannelPlay:
23A0 FD 7E 01             		ld	a,(iy+Chn_ID)
23A3 FE FF                		cp	0FFh
23A5 CA 9F 23             		jp	z,@Disabled
23A8                      		
23A8                      		;Portametro later
23A8 CD 50 23             		call	@NoteFreq
23AB                      			
23AB FD 7E 05             		ld	a,(iy+(Chn_Freq+1))
23AE FD 46 04             		ld	b,(iy+(Chn_Freq))
23B1 B0                   		or	b
23B2 CA 00 00              		jp	z,SMEG_ChannelRest
23B5                      		
23B5 FD 7E 01             		ld	a,(iy+Chn_ID)
23B8 FE E0                		cp	NOISE
23BA CA 00 00             		jp	z,@PlayNoise
23BD                      		
23BD FE C0                		cp	PSG_3
23BF C2 00 00             		jp	nz,@NotPsg3
23C2 DD 7E 01             		ld	a,(ix+DrvSettings)
23C5 CB 57                		bit	bitTone3,a
23C7 CA 00 00             		jp	z,@NotPsg3
23CA                      		
23CA 3E DF                		ld	a,0DFh
23CC D3 7F                		out	(7Fh),a
23CE C9                   		ret 
23CF                      
23CF                      @NotPsg3:
23CF FD 7E 01              		ld	a,(iy+Chn_ID)
23D2 4F                    		ld	c,a
23D3 C3 00 00              		jp	@SetFreq
23D6                      		
23D6                      ; ------------------------------------
23D6                      
23D6                      @PlayNoise:
23D6 DD 7E 01             		ld	a,(ix+DrvSettings)
23D9 CB 57                		bit 	bitTone3,a
23DB CA 9F 23             		jp	z,@Disabled
23DE 0E C0                		ld	c,11000000b
23E0                      @SetFreq:
23E0 FD 7E 04              		ld	a,(iy+(Chn_Freq))
23E3 E6 0F                 		and 	00001111b
23E5 47                    		ld	b,a
23E6 79                    		ld	a,c
23E7 E6 E0                 		and	11100000b
23E9 B0                    		or	b
23EA D3 7F                		out	(7Fh),a
23EC FD 7E 04              		ld	a,(iy+(Chn_Freq))
23EF CB 2F                 		sra	a
23F1 CB 2F                 		sra	a
23F3 CB 2F                 		sra	a
23F5 CB 2F                 		sra	a
23F7 E6 0F                 		and 	00001111b
23F9 47                    		ld	b,a
23FA FD 7E 05              		ld	a,(iy+(Chn_Freq+1))
23FD CB 27                  		sla	a
23FF CB 27                 		sla	a
2401 CB 27                 		sla	a
2403 CB 27                 		sla	a
2405 E6 30                 		and 	00110000b
2407 B0                    		or	b
2408 D3 7F                 		out	(7Fh),a
240A C9                   		ret
240B                      		
240B                      ; -------------------------------
240B                      
240B                      @Notes_PSG:
240B 00 00                		dw 0		;x-0
240D 00 00                		dw 0
240F 00 00                		dw 0
2411 00 00                		dw 0
2413 00 00                		dw 0
2415 00 00                		dw 0
2417 00 00                		dw 0
2419 00 00                		dw 0
241B 00 00                		dw 0
241D 00 00                		dw 0
241F 00 00                		dw 0
2421 00 00                		dw 0
2423 00 00                		dw 0
2425 00 00                		dw 0
2427 00 00                		dw 0
2429 00 00                		dw 0
242B 00 00                		dw 0
242D 00 00                		dw 0
242F                      
242F 00 00                		dw 0		;x-1
2431 00 00                		dw 0
2433 00 00                		dw 0
2435 00 00                		dw 0
2437 00 00                		dw 0
2439 00 00                		dw 0
243B 00 00                		dw 0
243D 00 00                		dw 0
243F 00 00                		dw 0
2441 00 00                		dw 0
2443 00 00                		dw 0
2445 00 00                		dw 0
2447 00 00                		dw 0
2449 00 00                		dw 0
244B 00 00                		dw 0
244D 00 00                		dw 0
244F 00 00                		dw 0
2451 00 00                		dw 0
2453                      
2453 00 00                		dw 0
2455 00 00                		dw 0
2457 00 00                		dw 0
2459 00 00                		dw 0
245B 00 00                		dw 0
245D 00 00                		dw 0
245F 00 00                		dw 0
2461 00 00                		dw 0
2463 00 00                		dw 0
2465                      
2465 F8 03                		dw 3F8h
2467 BF 03                                dw 3BFh
2469 89 03                                dw 389h
246B 56 03                		dw 356h
246D 26 03                                dw 326h
246F F9 02                                dw 2F9h
2471 CE 02                                dw 2CEh
2473 A5 02                                dw 2A5h
2475 80 02                                dw 280h
2477 5C 02                                dw 25Ch
2479 3A 02                                dw 23Ah
247B 1A 02                                dw 21Ah
247D FB 01                		dw 1FBh
247F DF 01                                dw 1DFh
2481 C4 01                                dw 1C4h
2483 AB 01                                dw 1ABh
2485 93 01                                dw 193h
2487 7D 01                                dw 17Dh
2489 67 01                                dw 167h
248B 53 01                                dw 153h
248D 40 01                                dw 140h
248F 2E 01                		dw 12Eh
2491 1D 01                                dw 11Dh
2493 0D 01                                dw 10Dh
2495 FE 00                                dw 0FEh
2497 EF 00                                dw 0EFh
2499 E2 00                                dw 0E2h
249B D6 00                                dw 0D6h
249D C9 00                                dw 0C9h
249F BE 00                                dw 0BEh
24A1 B4 00                                dw 0B4h
24A3 A9 00                		dw 0A9h
24A5 A0 00                                dw 0A0h
24A7 97 00                                dw 97h
24A9 8F 00                                dw 8Fh
24AB 87 00                                dw 87h
24AD 7F 00                                dw 7Fh
24AF 78 00                                dw 78h
24B1 71 00                                dw 71h
24B3 6B 00                                dw 6Bh
24B5 65 00                                dw 65h
24B7 5F 00                		dw 5Fh
24B9 5A 00                                dw 5Ah
24BB 55 00                                dw 55h
24BD 50 00                                dw 50h
24BF 4B 00                                dw 4Bh
24C1 47 00                                dw 47h
24C3 43 00                                dw 43h
24C5 40 00                                dw 40h
24C7 3C 00                                dw 3Ch
24C9 39 00                                dw 39h
24CB 36 00                		dw 36h
24CD 33 00                                dw 33h
24CF 30 00                                dw 30h
24D1 2D 00                                dw 2Dh
24D3 2B 00                                dw 2Bh
24D5 28 00                                dw 28h
24D7 26 00                                dw 26h
24D9 24 00                                dw 24h
24DB 22 00                                dw 22h
24DD 20 00                                dw 20h
24DF 1F 00                		dw 1Fh
24E1 1D 00                                dw 1Dh
24E3 1B 00                                dw 1Bh
24E5 1A 00                                dw 1Ah
24E7 18 00                                dw 18h
24E9 17 00                                dw 17h
24EB 16 00                                dw 16h
24ED 15 00                                dw 15h
24EF 13 00                                dw 13h
24F1 12 00                                dw 12h
24F3 11 00                		dw 11h
24F5                      		
24F5                      ; ================================================================
24F5                      ; -------------------------------
24F5                      ; Channel effect
24F5                      ; -------------------------------
24F5                      
24F5                      @ChannelEffects:
24F5 01 00 00             		ld	bc,0
24F8 FD 4E 07             		ld	c,(iy+(Chn_Effect+1))
24FB CB 21                		sla	c
24FD 21 00 00             		ld	hl,@EffectList
2500 09                   		add 	hl,bc
2501 E9                   		jp	(hl)
2502                      
2502                      ; -------------------------------
2502                      
2502                      @EffectList:
2502 18 00                		jr	@Null		;(Nothing)
2504 18 00                		jr	@Null		;A	
2506 18 00                		jr	@Null
2508 18 00                		jr	@Null
250A 18 00                		jr	@Null
250C 18 00                		jr	@Null
250E 18 00                		jr	@Null
2510 18 00                		jr	@Null
2512 18 00                		jr	@Null
2514 18 00                		jr	@Null
2516 18 00                		jr	@Null
2518 18 00                		jr	@Null
251A 18 00                		jr	@Null
251C 18 00                		jr	@Null
251E 18 00                		jr	@Null
2520 18 00                		jr	@Null
2522 18 00                		jr	@Null
2524 18 00                		jr	@Null
2526 18 00                		jr	@Null
2528 18 00                		jr	@Null
252A 18 00                		jr	@Null
252C 18 00                		jr	@Null
252E 18 00                		jr	@Null
2530 18 00                		jr	@Null
2532 18 00                		jr	@Flag_X
2534 18 00                		jr	@Null
2536 18 00                		jr	@Flag_Z
2538                      
2538                      ; -------------------------------
2538                      ; Null effect
2538                      ; -------------------------------
2538                      
2538                      @Null:
2538 C9                   		ret
2539                      		
2539                      ; -------------------------------
2539                      ; Flag X - Stereo
2539                      ; -------------------------------
2539                      
2539                      @Flag_X:
2539                      		;GG ONLY
2539 00                   		nop 
253A                      		
253A C9                   		ret
253B                      		
253B                      ; ======================================================
253B                      ; -------------------------------
253B                      ; Flag Z
253B                      ; -------------------------------
253B                      
253B                      @Flag_Z:	
253B 01 00 00              		ld	bc,0
253E FD 7E 06              		ld	a,(iy+(Chn_Effect))
2541 CB 2F                 		sra	a
2543 CB 2F                 		sra	a
2545 CB 2F                 		sra	a
2547 4F                    		ld	c,a
2548 21 00 00              		ld	hl,@HashList
254B 09                    		add 	hl,bc
254C E9                   		jp	(hl)
254D                      
254D                      @HashList:
254D 18 E9                		jr	@Null
254F 18 E7                		jr	@Null
2551 18 E5                		jr	@Null
2553 18 E3                		jr	@Null
2555 18 00                		jr	@PSG
2557 18 DF                		jr	@Null
2559 18 DD                		jr	@Null
255B 18 DB                		jr	@Null
255D 18 D9                		jr	@Null
255F 18 D7                		jr	@Null
2561 18 D5                		jr	@Null
2563 18 D3                		jr	@Null
2565 18 D1                		jr	@Null
2567 18 CF                		jr	@Null
2569 18 CD                		jr	@Null
256B 18 CB                		jr	@Null
256D                      		
256D                      ; -------------------------------
256D                      
256D                      @PSG:
256D DD 46 01             		ld	b,(ix+DrvSettings)
2570 CB 90                  		res	bitTone3,b
2572 FD 7E 06                		ld	a,(iy+(Chn_Effect))
2575 E6 07                   		and	111b
2577 FE 03                   		cp	3
2579 CA 00 00                		jp	z,@SetIt3
257C FE 07                   		cp	7
257E CA 00 00                 		jp	z,@SetIt3
2581 18 00                    		jr	@Tone3
2583                      @SetIt3:
2583 CB D0                   		set 	bitTone3,b
2585                      @Tone3:
2585 DD 70 01             		ld	(ix+DrvSettings),b
2588                      ; 		bit 	bitPriority,b
2588                      ;  		jp	z,@IsPsg
2588                      ;  		
2588                      ;  		ld	a,(RAM_SMEG_Buffer+DrvSettings)
2588                      ;  		ld	(RAM_SMEG_Buffer+DrvSettingsBGM),a
2588                      ;  		ld	a,(iy+(Chn_Effect))
2588                      ;  		and 	00000111b
2588                      ;  		ld	(RAM_SMEG_Buffer+PsgLast),a
2588                      ; 		
2588                      ; @IsPsg:
2588 FD 7E 06             		ld	a,(iy+(Chn_Effect))
258B E6 07                		and	111b
258D 47                   		ld	b,a
258E 3E E0                		ld	a,0E0h
2590 B0                   		or	b
2591 D3 7F                		out	(7Fh),a
2593 C9                   		ret	
2594                      		
2594                      ; ================================================================
2594                      ; -------------------------------
2594                      ; Mute/Rest channel
2594                      ; -------------------------------
2594                      
2594                      SMEG_ChannelRest:
2594 FD 7E 01             		ld	a,(iy+Chn_ID)
2597 FE FF                		cp	0FFh
2599 CA 00 00             		jp	z,@Return
259C                      		
259C FD 7E 01             		ld	a,(iy+Chn_ID)
259F E6 E0                		and 	11100000b
25A1 47                   		ld	b,a
25A2 3E 1F                		ld	a,00011111b
25A4 B0                   		or	b
25A5 D3 7F                		out	(7Fh),a
25A7                      @Return:
25A7 C9                   		ret
25A8                      		
25A8                      ; ================================================================
25A8                      ; -------------------------------
25A8                      ; Play PCM sample
25A8                      ; -------------------------------
25A8                      
25A8                      PlayPCM:
25A8                      ;    		ld	h,(BANK_WAVE>>14)&0FFh
25A8                      ;     		ld	a,h
25A8                      ;     		ld      (0FFFFh),a
25A8 2E 06                  		ld      l,06h
25AA 11 00 80               		ld      de,8000h
25AD                       	
25AD 0E 63                   		ld	c,01100011b
25AF 79                      		ld	a,c
25B0 D3 06                   		out	(06h),a
25B2 3E 81                   		ld      a,81h			;write $01 to tone channel 0
25B4 D3 7F                   		out     (7Fh),a
25B6 AF                      		xor	a
25B7 D3 7F                   		out     (7Fh),a
25B9 3E A1                   		ld      a,0A1h			;write $01 to tone channel 1
25BB D3 7F                   		out     (7Fh),a
25BD AF                      		xor	a
25BE D3 7F                   		out     (7Fh),a
25C0 3E C1                  		ld      a,0C1h			;write $01 to tone channel 2
25C2 D3 7F                  		out     (7Fh),a
25C4 AF                     		xor	a
25C5 D3 7F                  		out     (7Fh),a
25C7                       
25C7                      @Loop:
25C7 DB DC                		in      a,(pad)
25C9 EE FF                		xor     0FFh
25CB C2 00 00             		jp	nz,@escape
25CE 00                      		nop 
25CF 00                     		nop 
25D0                      ;  		nop
25D0                      
25D0 1A                    		ld      a,(de)
25D1 0F                    		rrca
25D2 0F                    		rrca
25D3 0F                    		rrca
25D4 0F                     		rrca
25D5 E6 0F                   		and     %00001111
25D7 F6 90                   		or      90h;+40h
25D9 D3 7F                    		out     (7Fh),a
25DB C6 20                     		add	20h
25DD D3 7F                     		out     (7Fh),a
25DF C6 20                     		add	20h
25E1 D3 7F                     		out     (7Fh),a
25E3 45                      		ld      b,l
25E4 10 FE                   		djnz    *
25E6                         		
25E6 13                    		inc     de
25E7 7A                    		ld	a,d
25E8 FE C0                 		cp	0C0h
25EA DA C7 25               		jp	c,@Loop
25ED 16 80                  		ld	d,80h
25EF 24                     		inc 	h
25F0 7C                   		ld	a,h
25F1 32 FF FF             		ld      (0FFFFh),a
25F4 C3 C7 25              		jp	@Loop
25F7                       		
25F7 79                    		ld      a,c
25F8 B0                    		or      b
25F9 C2 C7 25              		jp      nz,@Loop
25FC                        
25FC                      @escape:
25FC                      ;  		pop     hl
25FC                      ;  		pop     de
25FC                      ;  		pop     bc
25FC C9                    		ret
25FD                      		
25FD                      		
25FD                       		include "sound/data.asm"
25FD                      ; ================================================================
25FD                      ; User data
25FD                      ; ================================================================
25FD                      
25FD                      SmegSong_Test:
25FD                      ; 		dw 0
25FD                      ;    		db 7,0
25FD                      ;   		db PSG_1,PSG_2,PSG_3,NOISE
25FD                      ;        		incbin "sound/data/music/smb.it",50h+59Ah
25FD                      ;      		incbin "sound/data/music/froggy.it",50h+188Bh
25FD                      ;      		incbin "sound/data/music/froggy.it",50h+188Bh
25FD                       		
25FD                      ; ====================================================================
25FD                      
25FD                      		inform 0,"CODE Size: %h",*
25FD                          		cnop 0,4000h
4000                          		
4000                      ; ====================================================================
4000                      ; -------------------------------------------------
4000                      ; Data | SLOT 2
4000                      ; 
4000                      ; Header at the end
4000                      ; -------------------------------------------------
4000                      
4000                       		cnop 0,7FF0h
7FF0 54 4D 52 20 53 45 +   		db "TMR SEGA",0,0		; TMR SEGA + unused
7FFA 00 00                 		dw 0				; Checksum
7FFC 00 00                 		db 0,0				; Product code + PCode|Version
7FFE 00 00                 		db 0,0				; Version + Region code|ROM size
8000                       		
8000                      ; ====================================================================
8000                      ; -------------------------------------------------
8000                      ; Data | SLOT 3
8000                      ; 
8000                      ; TO-DO: This can be used as extra RAM
8000                      ; -------------------------------------------------
8000                      
8000                          		cnop 0,0C000h
C000                          		
C000                      ; ====================================================================
C000                      ; -------------------------------------------------
C000                      ; DATA BANKS for Slot 2
C000                      ; -------------------------------------------------
C000                      
C000                      ; -----------------------
C000                      ; Title Screen
C000                      ; -----------------------
C000                      
C000                      BANK_Title:	obj 4000h
4000                      		include "modes/title/data.asm"
4000                      ; ====================================================================
4000                      ; -------------------------------------------------
4000                      ; DATA | Title Screen
4000                      ; -------------------------------------------------
4000                      
4000                      art_title:	incbin "modes/title/data/art.bin"
50C0 =00000111            art_title_end	equ *-art_title
50C0                      pal_title:	incbin "modes/title/data/pal.bin"
50E0                      map_title:	incbin "modes/title/data/map.bin"
53B0                      
53B0                      ; art_plhold_spr:	incbin	"modes/level/data/sprhold.bin"
53B0                      ; art_plhold_spr_end:
53B0                      ; art_plhold_spr_end:
53B0                          		objend
D3B0                          		inform 0,"BANK Title size: %h",(*-BANK_Title)
D3B0                          		cnop 0,4000h
0000                      
0000                      ; -----------------------
0000                      ; Level
0000                      ; -----------------------
0000                      
0000                      BANK_LvlMd_Init:
0000                      		obj 4000h
4000                      		include "modes/level/data_1.asm"
4000                      ; ====================================================================
4000                      ; -------------------------------------------------
4000                      ; DATA | Art and palettes
4000                      ; -------------------------------------------------
4000                      
4000                      art_level_test:	incbin "modes/level/data/levels/test/lvl_art.bin"
5620                      art_level_test_end:
5620                      
5620                      ; -------------------------------------------------
5620                      
5620                      pal_player:	incbin	"modes/level/data/object/player/data/pal.bin"
5640                      pal_level_test:	incbin "modes/level/data/levels/test/lvl_pal.bin",0,(32*2)
5680                      
5680                      
5680                      
5680                      
5680                      		
5680                      		
5680                          		objend
1680                          		inform 0,"BANK Level (init) size: %h",(*-BANK_LvlMd_Init)
1680                          		cnop 0,4000h
4000                      
4000                      BANK_LvlMd_Loop:
4000                      		obj 4000h
4000                      		include "modes/level/data_2.asm"
4000                      ; ====================================================================
4000                      ; -------------------------------------------------
4000                      ; DATA | DPLC art and Level data
4000                      ; -------------------------------------------------
4000                      
4000 00 00                art_player:	dw @right
4002 00 00                 		dw @left
4004                      @right:		incbin	"modes/level/data/object/player/data/art.bin"
4D84                      @left:		incbin	"modes/level/data/object/player/data/art_l.bin"
5B05                      
5B05                      map_player:	include	"modes/level/data/object/player/data/map.asm"
5B05                      @mappings:
5B05 00 00                		dw @frame_0
5B07 00 00                		dw @frame_1
5B09 00 00                		dw @frame_2
5B0B 00 00                		dw @frame_3
5B0D 00 00                		dw @frame_4
5B0F 00 00                		dw @frame_5
5B11 00 00                		dw @frame_6
5B13 00 00                		dw @frame_7
5B15 00 00                		dw @frame_8
5B17                      @frame_0:
5B17 07                   		db 07h
5B18 E0 F8 00             	db 0E0h,0F8h,00h
5B1B F0 F8 02             		db 0F0h,0F8h,02h
5B1E E0 00 04             		db 0E0h,00h,04h
5B21 F0 00 06             		db 0F0h,00h,06h
5B24 E0 08 08             		db 0E0h,08h,08h
5B27 F0 08 0A             		db 0F0h,08h,0Ah
5B2A F0 10 0C             		db 0F0h,010h,0Ch
5B2D                      
5B2D                      @frame_1:
5B2D 07                   		db 07h
5B2E F0 F8 00             	db 0F0h,0F8h,00h
5B31 E0 00 02             		db 0E0h,00h,02h
5B34 F0 00 04             		db 0F0h,00h,04h
5B37 E0 08 06             		db 0E0h,08h,06h
5B3A F0 08 08             		db 0F0h,08h,08h
5B3D E0 10 0A             		db 0E0h,010h,0Ah
5B40 F8 10 0C             		db 0F8h,010h,0Ch
5B43                      
5B43                      @frame_2:
5B43 05                   		db 05h
5B44 E0 00 00             	db 0E0h,00h,00h
5B47 F0 00 02             		db 0F0h,00h,02h
5B4A E0 08 04             		db 0E0h,08h,04h
5B4D F0 08 06             		db 0F0h,08h,06h
5B50 E0 10 08             		db 0E0h,010h,08h
5B53                      
5B53                      @frame_3:
5B53 05                   		db 05h
5B54 E0 00 00             	db 0E0h,00h,00h
5B57 F0 00 02             		db 0F0h,00h,02h
5B5A E0 08 04             		db 0E0h,08h,04h
5B5D F0 08 06             		db 0F0h,08h,06h
5B60 E0 10 08             		db 0E0h,010h,08h
5B63                      
5B63                      @frame_4:
5B63 07                   		db 07h
5B64 F8 F8 00             	db 0F8h,0F8h,00h
5B67 E0 00 02             		db 0E0h,00h,02h
5B6A F0 00 04             		db 0F0h,00h,04h
5B6D E0 08 06             		db 0E0h,08h,06h
5B70 F0 08 08             		db 0F0h,08h,08h
5B73 E0 10 0A             		db 0E0h,010h,0Ah
5B76 F8 10 0C             		db 0F8h,010h,0Ch
5B79                      
5B79                      @frame_5:
5B79 05                   		db 05h
5B7A E0 00 00             	db 0E0h,00h,00h
5B7D F0 00 02             		db 0F0h,00h,02h
5B80 E0 08 04             		db 0E0h,08h,04h
5B83 F0 08 06             		db 0F0h,08h,06h
5B86 E0 10 08             		db 0E0h,010h,08h
5B89                      
5B89                      @frame_6:
5B89 05                   		db 05h
5B8A E0 00 00             	db 0E0h,00h,00h
5B8D F0 00 02             		db 0F0h,00h,02h
5B90 E0 08 04             		db 0E0h,08h,04h
5B93 F0 08 06             		db 0F0h,08h,06h
5B96 E0 10 08             		db 0E0h,010h,08h
5B99                      
5B99                      @frame_7:
5B99 06                   		db 06h
5B9A E0 00 00             	db 0E0h,00h,00h
5B9D F0 00 02             		db 0F0h,00h,02h
5BA0 E0 08 04             		db 0E0h,08h,04h
5BA3 F0 08 06             		db 0F0h,08h,06h
5BA6 E0 10 08             		db 0E0h,010h,08h
5BA9 F0 10 0A             		db 0F0h,010h,0Ah
5BAC                      
5BAC                      @frame_8:
5BAC 07                   		db 07h
5BAD E0 F8 00             	db 0E0h,0F8h,00h
5BB0 F0 F8 02             		db 0F0h,0F8h,02h
5BB3 E0 00 04             		db 0E0h,00h,04h
5BB6 F0 00 06             		db 0F0h,00h,06h
5BB9 E0 08 08             		db 0E0h,08h,08h
5BBC F0 08 0A             		db 0F0h,08h,0Ah
5BBF F8 10 0C             		db 0F8h,010h,0Ch
5BC2                      
5BC2                      
5BC2                      plc_player:	include	"modes/level/data/object/player/data/plc.asm"
5BC2                      @dplc:
5BC2 00                   		db 00h
5BC3 0E                   		db 0Eh
5BC4 1C                   		db 01Ch
5BC5 26                   		db 026h
5BC6 30                   		db 030h
5BC7 3E                   		db 03Eh
5BC8 48                   		db 048h
5BC9 52                   		db 052h
5BCA 5E                   		db 05Eh
5BCB 6C                   		db 06Ch ; LAST FRAME SIZE
5BCB 6C                   		db 06Ch ; LAST FRAME SIZE
5BCC                      
5BCC                      ; -------------------------------------------------
5BCC                      
5BCC 00 00 00 00 00 00 +  test_level:	dw @blocks,@collision,@prizes,@objpos
5BD4                      		incbin "modes/level/data/levels/test/lvl_lay.bin"
62D8                      @blocks:	incbin "modes/level/data/levels/test/lvl_blk.bin"
65F8                      @collision:	incbin "modes/level/data/levels/test/lvl_col.bin"
6CF8 FF FF                @prizes:	dw -1
6CFA FF FF                @objpos:	dw -1
6CFC                      
6CFC                      		
6CFC                      		
6CFC                          		objend
6CFC                          		inform 0,"BANK Level (loop) size: %h",(*-BANK_LvlMd_Loop)
6CFC                          		cnop 0,4000h
8000                          		
8000                      ; ====================================================================
8000                      
8000                      ; thisaddr = 0
8000                      ; BANK_WAVE:
8000                      ;      		rept 110
8000                      ;      		obj 4000h
8000                      ;     		incbin "sound/data/pcm/new.raw",thisaddr,4000h
8000                      ;  ;    		cnop 0,4000h
8000                      ;     		objend
8000                      ; thisaddr = thisaddr+4000h
8000                      ;     		endr
8000                          		
8000                      ; ====================================================================
8000                      
8000                      		inform 0,"ROM Size: %h",*
8000                      		cnop 0,10000h
0000                      		
0000                      		
