00000000                      ; =================================================================
00000000                      ; ------------------------------------------------
00000000                      ; SH2
00000000                      ; 
00000000                      ; Master jobs: Graphics / 3D
00000000                      ; Slave jobs: PWM Sound
00000000                      ; ------------------------------------------------
00000000                      
00000000                      		include	"system/hardware/mars/sh2/include/map_sh2.asm"
00000000                      ; ====================================================================
00000000                      ; -----------------------------------------------------------------
00000000                      ; SH2 Address map
00000000                      ; 
00000000                      ; Only for SH2
00000000                      ; -----------------------------------------------------------------
00000000                      
00000000 =0603E000            S_STACK		equ	$0603E000
00000000 =0603F000            M_STACK		equ	$0603F000
00000000                      
00000000                      ; -----------------------------------------------------------------
00000000                      
00000000 =00000000            CS0		equ	$00000000	; Boot rom & system registers
00000000 =02000000            CS1		equ	$02000000	; Cart rom
00000000 =04000000            CS2		equ	$04000000	; Frame buffer
00000000 =06000000            CS3		equ	$06000000	; SDRAM
00000000                      
00000000 =20000000            TH		equ	$20000000	; Cache thru address start
00000000 =20000000            CS0TH		equ	$20000000	; Boot rom chached thru
00000000 =22000000            CS1TH		equ	$22000000	; Cart rom cahced thru
00000000 =24000000            CS2TH		equ	$24000000	; frame buffer cached thru
00000000 =26000000            CS3TH		equ	$26000000	; SDRAM chaced thru
00000000                      
00000000                      ;---------------------------------------------------------------*
00000000                      ;	SYSREG.
00000000                      ;---------------------------------------------------------------*
00000000                      
00000000 =20004000            _sysreg		equ	$00004000+TH	; SYSREG.
00000000 =00000000            adapter		equ	$00		; adapter control register
00000000 =00000001            intmask		equ	$01		; interrupt mask
00000000 =00000002            standby		equ	$02
00000000 =00000005            hcount		equ	$05		; H Interrupt Counter register
00000000 =00000006            dreqctl		equ	$06		; DREQ control
00000000 =00000008            dreqsource	equ	$08		; DREQ source address
00000000 =0000000C            dreqdest	equ	$0c		; DREQ destination address
00000000 =00000010            dreqlen		equ	$10		; DREQ length
00000000 =00000012            fifo		equ	$12		; FIFO
00000000 =00000014            vresintclr	equ	$14		; VRES interrupt clear
00000000 =00000016            vintclr		equ	$16		; V interrupt clear
00000000 =00000018            hintclr		equ	$18		; H interrupt clear
00000000 =0000001A            cmdintclr	equ	$1a		; CMD interrupt clear
00000000 =0000001C            pwmintclr	equ	$1c		; PWM interrupt clear
00000000                      
00000000 =00000020            comm0		equ	$20		; Communication port
00000000 =00000022            comm2		equ	$22		;
00000000 =00000024            comm4		equ	$24		;
00000000 =00000026            comm6		equ	$26		;
00000000 =00000028            comm8		equ	$28		;
00000000 =00000029            comm9		equ	$29		;
00000000 =0000002A            comm10		equ	$2a		;
00000000 =0000002C            comm12		equ	$2c		;
00000000 =0000002E            comm14		equ	$2e		;
00000000 =00000030            timerctl	equ	$30		; PWM Timer Control
00000000 =00000031            pwmctl		equ	$31		; PWM Control
00000000 =00000032            cycle		equ	$32		; PWM Cycle
00000000 =00000034            lchwidth	equ	$34		; PWM L ch Width
00000000 =00000036            rchwidth	equ	$36		; PWM R ch Width
00000000 =00000038            monowidth	equ	$38		; PWM Monaural Width
00000000                      
00000000                      ;---------------------------------------------------------------*
00000000                      ;	VDPREG.
00000000                      ;---------------------------------------------------------------*
00000000                      
00000000 =20004100            _vdpreg		equ	$00004100+TH	; VDPREG.
00000000 =00000000            tvmode		equ	$00		; TV mode register
00000000 =00000001            bitmapmd	equ	$01		; Bitmap mode register
00000000 =00000003            shift		equ	$03		; Shift Control register
00000000 =00000005            filllength	equ	$05		; Auto Fill Length register
00000000 =00000006            fillstart	equ	$06		; Auto Fill Start Address register
00000000 =00000008            filldata	equ	$08		; Auto Fill Data register
00000000 =0000000A            vdpsts		equ	$0a		; VDP Status register
00000000 =0000000B            framectl	equ	$0b		; Frame Buffer Control register
00000000                      
00000000                      ;---------------------------------------------------------------*
00000000 =20004200            _palette	equ	$00004200+TH	; Palette RAM
00000000 =24000000            _framebuffer:	equ	CS2TH		; Frame buffer
00000000 =24020000            _overwrite:	equ	CS2TH+$20000	; Over Write Image
00000000                      ;---------------------------------------------------------------*
00000000                      
00000000                      ;---------------------------------------------------------------*
00000000                      ;	Bit assign
00000000                      ;---------------------------------------------------------------*
00000000                      
00000000                      ; adapter
00000000 =00000001            CART		equ	%00000001	; 0: CD		/1: Cartridge
00000000 =00000002            ADEN		equ	%00000010	; 0: No MARS	/1: MARS
00000000 =00000080            FM		equ	%10000000	; 0: MD		/1: SH
00000000                      
00000000                      ; framectl
00000000 =00000001            FS		equ	%00000001	; 0: DRAM 0	/1: DRAM 1
00000000 =00000002            FEN		equ	%00000010	; 0: Free	/1: Busy
00000000                      
00000000                      ; vdpsts
00000000 =00000080            VBLK		equ	%10000000
00000000 =00000040            HBLK		equ	%01000000
00000000 =00000020            PEN		equ	%00100000
00000000                      
00000000                      ;-------------------------------------------------------;
00000000                      
00000000                      _DMASOURCE0	.equ	$ffffff80	; DMA source address 0
00000000                      _DMADEST0	.equ	$ffffff84	; DMA destination address 0
00000000                      _DMACOUNT0	.equ	$ffffff88	; DMA transfer count 0
00000000                      _DMACHANNEL0	.equ	$ffffff8c	; DMA channel control 0
00000000                      
00000000                      _DMASOURCE1	.equ	$ffffff90	; DMA source address 1
00000000                      _DMADEST1	.equ	$ffffff94	; DMA destination address 1
00000000                      _DMACOUNT1	.equ	$ffffff98	; DMA transfer count 1
00000000                      _DMACHANNEL1	.equ	$ffffff9c	; DMA channel control 1
00000000                      
00000000                      _DMAVECTORN0	.equ	$ffffffa0	; DMA vector number N0
00000000                      _DMAVECTORE0	.equ	$ffffffa4	; DMA vector number E0
00000000                      _DMAVECTORN1	.equ	$ffffffa8	; DMA vector number N1
00000000                      _DMAVECTORE1	.equ	$ffffffac	; DMA vector number E1
00000000                      _DMAOPERATION	.equ	$ffffffb0	; DMA operation
00000000                      _DMAREQACK0	.equ	$ffffffb4	; DMA request/ack select control 0
00000000                      _DMAREQACK1	.equ	$ffffffb8	; DMA request/ack select control 1
00000000                      _SERIAL		.equ	$fffffe00	; Serial Control
00000000                      _FRT		.equ	$fffffe10	; Free run timer
00000000                      _TIER		.equ	$00		; Timer interrup enable register
00000000                      _TCSR		.equ	$01		; Timer control & status register
00000000                      _FRC_H		.equ	$02		; free running counter High
00000000                      _FRC_L		.equ	$03		; free running counter Low
00000000                      _OCR_H		.equ	$04		; Output compare register High
00000000                      _OCR_L		.equ	$05		; Output compare register Low
00000000                      _TCR		.equ	$06		; Timer control register
00000000                      _TOCR		.equ	$07		; timer output compare control register
00000000 =FFFFFE92            _CCR:		 equ $FFFFFE92
00000000                      
00000000                      ;-------------------------------------------------------;
00000000                      VIRQ_ON		.equ	$08		;IRQ masks for IRQ mask register
00000000                      HIRQ_ON		.equ	$04
00000000                      CMDIRQ_ON	.equ	$02
00000000                      PWMIRQ_ON	.equ	$01
00000000                      ;-------------------------------------------------------;
00000000                      
00000000                      
00000000                      
00000000                      		include	"system/hardware/mars/sh2/include/map_shared.asm"
00000000                      ; ==================================================================
00000000                      ; ---------------------------------------------------
00000000                      ; SH2 variables
00000000                      ; 
00000000                      ; For both SH2 and 68k
00000000                      ; ---------------------------------------------------
00000000                      
00000000 =00008000            sizeof_code		equ	$8000
00000000                      
00000000 =06000000            MasterEntry		equ	$06000000
00000000 =06008000            SlaveEntry		equ	$06000000|$8000;+sizeof_code
00000000 =06008A00            Sh2_CodeEnd		equ	$06000000|$8A00;+(sizeof_code*2)
00000000                      
00000000                      ; ---------------------------------------------------
00000000                      ; Variables
00000000                      ; ---------------------------------------------------
00000000                      
00000000                      ; 			rsreset
00000000                      ; m_loadpic		rs.b 1
00000000                      ; m_loadpic		rs.b 1
00000000                      		include	"system/hardware/mars/sh2/ram.asm"
00000000                      ; ====================================================================
00000000                      ; -----------------------------------------------------------------
00000000                      ; RAM for both CPUs
00000000                      ; -----------------------------------------------------------------
00000000                      
00000000                      		rsset CS3|$8800
00000000                      
00000000                      ; ====================================================================
00000000                      ; ----------------------------------------
00000000                      ; End
00000000                      ; ----------------------------------------
00000000                      
00000000 =06008800            RAM_Video	rs.b $34000
00000000 =0603C800            RAM_Audio	rs.b $400
00000000 =0603CC00            ram_end		rs.l 0
00000000                      
00000000                      ; ====================================================================
00000000                           		
00000000                       		inform 0,"MARS SH2 RAM ENDS AT: %h",(ram_end)
00000000                      		
00000000                      		
00000000                      		org CS3
06000000                      
06000000                      ; =================================================================
06000000                      ; ------------------------------------------------
06000000                      ; Master CPU
06000000                      ; ------------------------------------------------
06000000                      
06000000                      		obj MasterEntry
06000000                      SH2_Master:
06000000 0000 0000 0603    +  		dc.l @Entry,M_STACK		; Cold PC,SP
06000008 0000 0000 0603    +  		dc.l @Entry,M_STACK		; Manual PC,SP
06000010                      
06000010 0000 0000            		dc.l ErrorTrap			; Illegal instruction
06000014 0000 0000            		dc.l 0				; reserved
06000018 0000 0000            		dc.l ErrorTrap			; Invalid slot instruction
0600001C 2010 0400            		dc.l $20100400			; reserved
06000020 2010 0420            		dc.l $20100420			; reserved
06000024 0000 0000            		dc.l ErrorTrap			; CPU address error
06000028 0000 0000            		dc.l ErrorTrap			; DMA address error
0600002C 0000 0000            		dc.l ErrorTrap			; NMI vector
06000030 0000 0000            		dc.l ErrorTrap			; User break vector
06000034                      
06000034 0000 0000 0000    +  		dcb.l 19,0			; reserved
06000080                      
06000080                      		dcb.l 32,ErrorTrap		; Trap vectors
06000100                      
06000100 0000 0000             		dc.l master_irq			; Level 1 IRQ
06000104 0000 0000            		dc.l master_irq			; Level 2 & 3 IRQ's
06000108 0000 0000            		dc.l master_irq			; Level 4 & 5 IRQ's
0600010C 0000 0000            		dc.l master_irq			; PWM interupt
06000110 0000 0000            		dc.l master_irq			; Command interupt
06000114 0000 0000            		dc.l master_irq			; H Blank interupt
06000118 0000 0000            		dc.l master_irq			; V Blank interupt
0600011C 0000 0000            		dc.l master_irq			; Reset Button
06000120                      
06000120                      ; =================================================================
06000120                      ; ------------------------------------------------
06000120                      ; Master entry
06000120                      ; ------------------------------------------------
06000120                      
06000120                      @Entry:
06000120 DE00                 		mov.l	#_sysreg,r14
06000122 4E1E                 		ldc	r14,gbr
06000124                      
06000124 E000                 		mov 	#0,r0
06000126 C10B                 		mov.w	r0,@(vintclr,gbr)
06000128 C10B                 		mov.w	r0,@(vintclr,gbr)
0600012A C10C                 		mov.w	r0,@(hintclr,gbr)	;clear IRQ ACK regs
0600012C C10C                 		mov.w	r0,@(hintclr,gbr)
0600012E C10D                 		mov.w	r0,@(cmdintclr,gbr)
06000130 C10D                 		mov.w	r0,@(cmdintclr,gbr)
06000132 C10E                 		mov.w	r0,@(pwmintclr,gbr)
06000134 C10E                 		mov.w	r0,@(pwmintclr,gbr)
06000136 D100                 		mov.l	#_FRT,r1		; Set Free Run Timer
06000138 E000                 		mov	#$00,r0
0600013A 8010                 		mov.b	r0,@(_TIER,r1)		;
0600013C D000                 		mov	#$E2,r0
0600013E 8017                 		mov.b	r0,@(_TOCR,r1)		;
06000140 E000                 		mov	#$00,r0
06000142 8014                 		mov.b	r0,@(_OCR_H,r1)		;
06000144 E001                 		mov	#$01,r0
06000146 8015                 		mov.b	r0,@(_OCR_L,r1)		;
06000148 E000                 		mov	#0,r0
0600014A 8016                 		mov.b	r0,@(_TCR,r1)		;
0600014C E001                 		mov	#1,r0
0600014E 8011                 		mov.b	r0,@(_TCSR,r1)		;
06000150 E000                 		mov	#$00,r0
06000152 8013                 		mov.b	r0,@(_FRC_L,r1)		;
06000154 8012                 		mov.b	r0,@(_FRC_H,r1)		;
06000156                      
06000156 D000                 		mov	#$F2,r0			; reset setup
06000158 8017                 		mov.b	r0,@(_TOCR,r1)		;
0600015A E000                 		mov	#$00,r0
0600015C 8014                 		mov.b	r0,@(_OCR_H,r1)		;
0600015E E001                 		mov	#$01,r0
06000160 8015                 		mov.b	r0,@(_OCR_L,r1)		;
06000162 D000                 		mov	#$E2,r0
06000164 8017                 		mov.b	r0,@(_TOCR,r1)		;
06000166                      	
06000166                      ; ----------------------------------
06000166                      
06000166                      @wait_md:
06000166 C608                 		mov.l	@(comm0,gbr),r0
06000168 8800                 		cmp/eq	#0,r0
0600016A 8BFC                 		bf	@wait_md
0600016C                      
0600016C                      ; ----------------------------------	
0600016C                      
0600016C D100                 		mov.l	#"SLAV",r1
0600016E                      @wait_slave:
0600016E C60A                 		mov.l	@(comm8,gbr),r0		; wait for the slave to finish booting
06000170 3010                 		cmp/eq	r1,r0
06000172 8BFC                 		bf	@wait_slave
06000174 E000                 		mov	#0,r0
06000176 C20A                 		mov.l	r0,@(comm8,gbr)
06000178                      		
06000178                      ; =================================================================
06000178                      ; ------------------------------------------------
06000178                      ; Hotstart
06000178                      ; ------------------------------------------------
06000178                      
06000178                      m_hotstart:
06000178 DF00                 		mov.l	#M_STACK,r15
0600017A DE00                 		mov.l	#_sysreg,r14
0600017C 4E1E                 		ldc	r14,gbr
0600017E E00A                  		mov	#CMDIRQ_ON|VIRQ_ON,r0
06000180 C001                     		mov.b	r0,@(intmask,gbr)
06000182                      		
06000182                      ; ==================================================================
06000182                      ; ---------------------------------------------------
06000182                      ; Master start
06000182                      ; ---------------------------------------------------
06000182                      
06000182                      master_start:
06000182 D000                  		mov	#Audio_Init,r0
06000184 400B                  		jsr	@r0
06000186 0009                  		nop
06000188 D000                 		mov	#Video_Init,r0
0600018A 400B                 		jsr	@r0
0600018C 0009                 		nop
0600018E                      		
0600018E                      ; 		mov 	#CS1|$4C330,r1
0600018E                      ; 		mov 	#CS1|$4C330+$1C8000,r2
0600018E                      ; 		mov 	r1,r3
0600018E                      ; 		mov 	#%10,r4
0600018E                      ; 		mov 	#0,r5
0600018E                      ; 		mov 	#Audio_Play,r0
0600018E                      ; 		jsr 	@r0
0600018E                      ; 		nop
0600018E                      ; 		mov 	#CS1|$214334,r1
0600018E                      ; 		mov 	#CS1|$214334+$1C8000,r2
0600018E                      ; 		mov 	r1,r3
0600018E                      ; 		mov 	#%01,r4
0600018E                      ; 		mov 	#1,r5
0600018E                      ; 		mov 	#Audio_Play,r0
0600018E                      ; 		jsr 	@r0
0600018E                      ; 		nop
0600018E                      		
0600018E D100                 		mov 	#_vdpreg,r1
06000190 E001                 		mov	#1,r0
06000192 8011                 		mov.b	r0,@(bitmapmd,r1)
06000194                      
06000194                      ; 		mov 	#0,r0			; FB to MD
06000194                      ;   		mov.b	r0,@(adapter,gbr)
06000194                      
06000194 D100                 		mov	#CS1|$40000+4,r1
06000196 E200                 		mov	#0,r2
06000198 D000                 		mov	#Video_LoadTga,r0
0600019A 400B                 		jsr	@r0
0600019C 0009                 		nop
0600019E                      ; 		mov	#CS1|$419B0+4,r1
0600019E                      ; 		mov	#128*2,r2
0600019E                      ; 		mov	#Video_LoadTga,r0
0600019E                      ; 		jsr	@r0
0600019E                      ; 		nop
0600019E                      ; 		mov	#CS1|$532A0+4,r1
0600019E                      ; 		mov	#192*2,r2
0600019E                      ; 		mov	#Video_LoadTga,r0
0600019E                      ; 		jsr	@r0
0600019E                      ; 		nop
0600019E                      ; 		
0600019E                      ; 		mov	#$220265EC,r2
0600019E                      ; 		bsr	Model_Set
0600019E                      ; 		mov 	#2,r1
0600019E                      ; 		mov	#0,r2
0600019E                      ; 		mov 	#0,r3
0600019E                      ; 		mov 	#-$180,r4
0600019E                      ; 		bsr	Model_Pos
0600019E                      ; 		mov 	#2,r1
0600019E                      ; 	
0600019E                      ; 		mov	#$220265EC,r2
0600019E                      ; 		bsr	Model_Set
0600019E                      ; 		mov 	#3,r1
0600019E                      ; 		mov	#+192,r2
0600019E                      ; 		mov 	#0,r3
0600019E                      ; 		mov 	#-$180,r4
0600019E                      ; 		bsr	Model_Pos
0600019E                      ; 		mov 	#3,r1
0600019E                      ; 		
0600019E                      ; 		mov	#$220265EC,r2
0600019E                      ; 		bsr	Model_Set
0600019E                      ; 		mov 	#1,r1
0600019E                      ; 		mov	#-192,r2
0600019E                      ; 		mov 	#0,r3
0600019E                      ; 		mov 	#-$180,r4
0600019E                      ; 		bsr	Model_Pos
0600019E                      ; 		mov 	#1,r1
0600019E                      		
0600019E E020                 		mov	#$20,r0
060001A0 400E                 		ldc	r0,sr
060001A2                      		
060001A2                      ; =================================================================
060001A2                      ; ---------------------------------------------------
060001A2                      ; Master loop
060001A2                      ; ---------------------------------------------------
060001A2                      
060001A2                      
060001A2                      ; 		bsr	Video_ClearFrame
060001A2                      ; 		nop
060001A2                      
060001A2                      		rept 2
060001A2                      		mov	#_DMASOURCE0,r1 	; _DMASOURCE = $ffffff80
060001A2                      		mov	#((CS1|$40000+4)+$312),r0
060001A2                      		mov	r0,@r1			; set source address
060001A2                      		mov	#_framebuffer+$200,r0
060001A2                      		mov	r0,@(4,r1)		; set destination address
060001A2                       		mov	#((VIDEO_XSIZE)*256),r0
060001A2                      		mov	r0,@(8,r1)		; set length
060001A2                      		mov.l	#_DMAOPERATION,r3 	; _DMAOPERATION = $ffffffb0
060001A2                      		xor	r2,r2			; Zero.
060001A2                      		mov.l	r2,@r3
060001A2                      		xor	r2,r2
060001A2                      		mov.l	r2,@($c,r1)		; clear TE bit
060001A2                       		mov	#$5000|$200|$F0|1,r0	; $5000
060001A2                      		mov.l	r0,@($c,r1)		; load mode
060001A2                      		add	#1,r2
060001A2                      		mov.l	r2,@r3
060001A2                       		mov 	#Vsync,r0
060001A2                       		jsr	@r0
060001A2                       		nop
060001A2                       		bsr	Video_Render
060001A2                       		nop
060001A2 E180 D000 2102    +   		endr
060001F6                       		
060001F6                      master_loop:
060001F6                      
060001F6                      ; -----------------------
060001F6                      ; Draw all polygons
060001F6                      ; -----------------------
060001F6                      			
060001F6 D000                 		mov	#Polygons_Read,r0
060001F8 400B                 		jsr	@r0
060001FA 0009                 		nop
060001FC                      		
060001FC                      ; --------------------------------------
060001FC                      		
060001FC D000                  		mov 	#Vsync,r0
060001FE 400B                  		jsr	@r0
06000200 0009                  		nop
06000202 B000                  		bsr	Video_Render
06000204 0009                  		nop
06000206                      		
06000206 AFF6                 		bra	master_loop
06000208 0009                 		nop
0600020A 0009 0009            		align 4
06000210 0000 0000 0000    +  		lits
06000254                      		
06000254                      ; =================================================================
06000254                      ; ------------------------------------------------
06000254                      ; Master MD Requests
06000254                      ; ------------------------------------------------
06000254                      
06000254                      master_tasks:
06000254 0000 0000            		dc.l 0
06000258 0000 0000            		dc.l 0
0600025C 0000 0000            		dc.l 0
06000260 0000 0000            		dc.l 0
06000264 0000 0000            		dc.l 0
06000268 0000 0000            		dc.l 0
0600026C 0000 0000            		dc.l 0
06000270 0000 0000            		dc.l 0
06000274 0000 0000            		dc.l 0
06000278 0000 0000            		dc.l 0
0600027C 0000 0000            		dc.l 0
06000280 0000 0000            		dc.l 0
06000284 0000 0000            		dc.l 0
06000288 0000 0000            		dc.l 0
0600028C 0000 0000            		dc.l 0
06000290 0000 0000            		dc.l 0
06000294                      		
06000294                      ; ----------------------------
06000294                      ; $10+
06000294                      ; Model system
06000294                      ; ----------------------------
06000294                      
06000294 0000 0000            		dc.l @Model_Set		; Set new model to slot
06000298 0000 0000            		dc.l 0			; Delete model from slot
0600029C 0000 0000            		dc.l 0
060002A0 0000 0000            		dc.l 0
060002A4 0000 0000            		dc.l @Model_Move	; Model X/Y/Z position
060002A8 0000 0000            		dc.l @Model_Rot		; Model X/Y/Z rotation
060002AC 0000 0000            		dc.l 0			; World X/Y/Z position
060002B0 0000 0000            		dc.l 0			; World X/Y/Z rotation
060002B4 0000 0000            		dc.l 0
060002B8 0000 0000            		dc.l 0
060002BC                      	
060002BC                      ; --------------------------------------
060002BC                      ; Task $10
060002BC                      ; --------------------------------------
060002BC                      
060002BC                      @Model_Set:
060002BC C609                   		mov.l	@(comm4,gbr),r0
060002BE 6203                   		mov 	r0,r2
060002C0 C514                   		mov.w	@(comm8,gbr),r0
060002C2 C9FF                   		and	#$FF,r0
060002C4 6103                   		mov 	r0,r1
060002C6                        		
060002C6 4F22                 		mov	pr,@-r15
060002C8 B000                 		bsr	Model_Set
060002CA 0009                 		nop
060002CC 4F26                 		mov	@r15+,pr
060002CE 000B                 		rts
060002D0 0009                 		nop
060002D2                      		
060002D2                      ; --------------------------------------
060002D2                      ; Task $14
060002D2                      ; --------------------------------------
060002D2                      
060002D2                      @Model_Move:
060002D2 C512                   		mov.w	@(comm4,gbr),r0
060002D4 D100                   		mov 	#$FFFF,r1
060002D6 2019                   		and 	r1,r0
060002D8 6103                   		mov 	r0,r1
060002DA C513                   		mov.w	@(comm6,gbr),r0
060002DC 600F                   		exts	r0,r0
060002DE 6203                   		mov 	r0,r2
060002E0 C514                    		mov.w	@(comm8,gbr),r0
060002E2 600F                   		exts	r0,r0
060002E4 6303                   		mov 	r0,r3
060002E6 C515                    		mov.w	@(comm10,gbr),r0
060002E8 600F                   		exts	r0,r0
060002EA 6403                   		mov 	r0,r4
060002EC                        		
060002EC 4F22                 		mov	pr,@-r15
060002EE B000                 		bsr	Model_Pos
060002F0 0009                 		nop
060002F2 4F26                 		mov	@r15+,pr
060002F4 000B                 		rts
060002F6 0009                 		nop
060002F8                      		
060002F8                      ; --------------------------------------
060002F8                      ; Task $15
060002F8                      ; --------------------------------------
060002F8                      
060002F8                      @Model_Rot:
060002F8 C512                   		mov.w	@(comm4,gbr),r0
060002FA D100                   		mov 	#$FFFF,r1
060002FC 2019                   		and 	r1,r0
060002FE 6103                   		mov 	r0,r1
06000300 C513                   		mov.w	@(comm6,gbr),r0
06000302 600F                   		exts	r0,r0
06000304 6203                   		mov 	r0,r2
06000306 C514                    		mov.w	@(comm8,gbr),r0
06000308 600F                   		exts	r0,r0
0600030A 6303                   		mov 	r0,r3
0600030C C515                    		mov.w	@(comm10,gbr),r0
0600030E 600F                   		exts	r0,r0
06000310 6403                   		mov 	r0,r4
06000312                        		
06000312 4F22                 		mov	pr,@-r15
06000314 B000                 		bsr	Model_Rot
06000316 0009                 		nop
06000318 4F26                 		mov	@r15+,pr
0600031A 000B                 		rts
0600031C 0009                 		nop
0600031E                      		
0600031E                      ; =================================================================
0600031E                      ; ------------------------------------------------
0600031E                      ; Error
0600031E                      ; ------------------------------------------------
0600031E                      
0600031E                      ErrorTrap:
0600031E AFFE                 		bra	ErrorTrap
06000320 0009                 		nop
06000322 0009 0009             		align 4
06000328 0000 0000 0000       		lits
0600032C                      
0600032C                      ; =================================================================
0600032C                      ; ------------------------------------------------
0600032C                      ; Subs 
0600032C                      ; ------------------------------------------------
0600032C                      
0600032C                      		include "system/hardware/mars/sh2/subs/video.asm"
0600032C                      ; ====================================================================
0600032C                      ; MARS VDP
0600032C                      ; ====================================================================
0600032C                      
0600032C                      ; -------------------------------------------------
0600032C                      ; Variables
0600032C                      ; -------------------------------------------------
0600032C                      
0600032C =00000180            VIDEO_XSIZE	equ	384
0600032C =00000100            VIDEO_YSIZE	equ	256
0600032C                      
0600032C                      ; ====================================================================
0600032C                      ; -------------------------------------------------
0600032C                      ; Structures
0600032C                      ; -------------------------------------------------
0600032C                      
0600032C                      ; -------------------------------------------------
0600032C                      ; RAM
0600032C                      ; -------------------------------------------------
0600032C                      
0600032C                      		rsset RAM_Video
0600032C =06008800            frame_count_m	rs.l 1
0600032C =06008804            frame_count_s	rs.l 1
0600032C =06008808            frame_wait	rs.l 1
0600032C =0600880C            fb_num		rs.l 1
0600032C =06008810            layer_topleft	rs.l 1
0600032C                      
0600032C =06008814            RAM_ScrlHor	rs.l 240
0600032C =06008BD4            RAM_ScrlVer	rs.l 1
0600032C =06008BD8            RAM_Palette	rs.w 256
0600032C =06008DD8            RAM_PalFade	rs.w 256
0600032C =06008FD8            RAM_Layer	rs.b 512*256
0600032C =06028FD8            RAM_PolygonSys	rs.b $18000
0600032C =06040FD8            sizeof_video	rs.l 0
0600032C                      		inform 0,"MARS SH2 Video size: %h",(sizeof_video-RAM_Video)
0600032C                      		
0600032C                      ; ====================================================================
0600032C                      ; -------------------------------------------------
0600032C                      ; Init
0600032C                      ; -------------------------------------------------
0600032C                      
0600032C                      Video_Init:
0600032C E000                 		mov 	#0,r0
0600032E C400                   		mov.b	@(adapter,gbr),r0
06000330 6103                   		mov 	r0,r1
06000332                      @chk_md:
06000332 6012                   		mov	@r1,r0
06000334 C980                   		and 	#%10000000,r0		; MD is using FB?
06000336 8BFC                   		bf	@chk_md
06000338 D000                 		mov 	#FM,r0			; FB to MARS
0600033A C000                   		mov.b	r0,@(adapter,gbr)
0600033C                        		
0600033C                      ; ----------------------------
0600033C                      ; Line array init
0600033C                      ; ----------------------------
0600033C                      
0600033C 4F22                 		mov	pr,@-r15
0600033E B000                 		bsr	VideoRender_Init
06000340 0009                 		nop
06000342 B000                 		bsr	VideoRender_Init
06000344 0009                 		nop
06000346 4F26                 		mov	@r15+,pr
06000348                      
06000348 000B                 		rts
0600034A 0009                 		nop
0600034C                      		align 4
0600034C 0000 0000            		lits
06000350                      		
06000350                      ; ====================================================================
06000350                      ; -------------------------------------------------
06000350                      ; Subs
06000350                      ; -------------------------------------------------
06000350                      
06000350                      ; ----------------------------
06000350                      ; Video_Render
06000350                      ; 
06000350                      ; apply scroll and
06000350                      ; swap framebuffer
06000350                      ; ----------------------------
06000350                      
06000350                      Video_Render:
06000350 D700                 		mov	#RAM_Palette,r7		;palette Copy
06000352 D800                 		mov	#_palette,r8
06000354 E610                  		mov	#256/16,r6
06000356 D500                   		mov	#_vdpreg,r5
06000358                        		
06000358 845A                 @wait		mov.b	@(vdpsts,r5),r0
0600035A C820                 		tst	#0x20,r0
0600035C 89FC                 		bt	@wait
0600035E                      @nextpal:
0600035E                      		rept	16
0600035E                      		mov.w	@r7+,r0
0600035E                      		mov.w	r0,@r8
0600035E                      		add 	#2,r8
0600035E 6075 2801 7802    +  		endr	
060003BE 4610                 		dt	r6
060003C0 8BCD                 		bf	@nextpal
060003C2                      		
060003C2                      ; --------------------------
060003C2                      ; SCROLLING
060003C2                      ; --------------------------
060003C2                      
060003C2                      VideoRender_Init:
060003C2 D700                 		mov	#RAM_ScrlHor,r7
060003C4 D800                 		mov	#RAM_ScrlVer,r8
060003C6                      		
060003C6                      ; 		mov 	@r7,r0
060003C6                      ; 		mov 	#$4000,r1
060003C6                      ; 		add 	r1,r0
060003C6                      ; 		mov 	r0,@r7
060003C6                      ; 		mov 	@r8,r0
060003C6                      ; 		mov 	#$10000,r1
060003C6                      ; 		add 	r1,r0
060003C6                      ; 		mov 	r0,@r8
060003C6                      		
060003C6                      ; Fix the X
060003C6                      
060003C6 6072                 		mov 	@r7,r0
060003C8 4029                 		shlr16	r0
060003CA 600F                 		exts	r0,r0
060003CC 4015                 		cmp/pl	r0
060003CE 8900                 		bt	@right
060003D0 D100                 		mov 	#$80,r1
060003D2 3018                 		sub 	r1,r0
060003D4                      @right:
060003D4 6103                 		mov 	r0,r1
060003D6 E27F                 		mov 	#$7F,r2
060003D8 2129                 		and 	r2,r1
060003DA D200                 		mov 	#$7F80,r2
060003DC 2029                 		and 	r2,r0
060003DE 4009                 		shlr2	r0
060003E0 4009                 		shlr2	r0
060003E2 4001                 		shlr	r0
060003E4 D200                 		mov 	#tableVidHorCrop,r2
060003E6 002E                 		mov 	@(r2,r0),r0
060003E8 301C                 		add 	r1,r0
060003EA 6172                 		mov 	@r7,r1
060003EC 4129                 		shlr16	r1
060003EE E200                 		mov 	#0,r2
060003F0 2129                 		and 	r2,r1
060003F2 201B                 		or	r1,r0
060003F4 D200                 		mov	#layer_topleft,r2
060003F6 2202                 		mov 	r0,@r2
060003F8                      		
060003F8 D900                  		mov	#_framebuffer,r9
060003FA D600                 		mov	#$100,r6
060003FC D500                 		mov	#((VIDEO_XSIZE))/2,r5
060003FE D400                 		mov	#240,r4
06000400 D200                 		mov	#layer_topleft,r2
06000402 6022                 		mov 	@r2,r0
06000404 4001                 		shlr 	r0
06000406 6A03                 		mov 	r0,r10
06000408 6382                 		mov 	@r8,r3
0600040A 4329                 		shlr16	r3
0600040C                      @mapset1:
0600040C 60A3                 		mov 	r10,r0
0600040E                      		
0600040E                      		; Vertical
0600040E 6133                 		mov 	r3,r1
06000410 D200                 		mov 	#$FF,r2
06000412 2129                 		and 	r2,r1
06000414 215E                 		mulu	r5,r1
06000416 011A                 		mov 	macl,r1
06000418 301C                 		add 	r1,r0	
0600041A 306C                 		add 	r6,r0
0600041C                      		
0600041C 2901                 		mov.w	r0,@r9
0600041E 7902                 		add	#2,r9
06000420 7301                 		add	#1,r3
06000422                      		
06000422 4410                 		dt	r4
06000424 8BF2                 		bf	@mapset1
06000426                      ; 
06000426                      ; ; Set SFT and Swap frame
06000426                      ; 
06000426 D900                 		mov	#_vdpreg,r9
06000428 6072                 		mov 	@r7,r0
0600042A 4029                 		shlr16	r0
0600042C C901                 		and 	#1,r0
0600042E 8191                 		mov.w 	r0,@(2,r9)
06000430 849B                  		mov.b	@(framectl,r9),r0
06000432 6007                 		not	r0,r0
06000434 C901                  		and	#1,r0
06000436 000B                 		rts
06000438 809B                 		mov.b	r0,@(framectl,r9)
0600043A 0009 0009            		align 4
0600043E                      		
0600043E                      ; -------------------------
0600043E                      ; Grab a fixed X for
0600043E                      ; framebuffer
0600043E                      ; -------------------------
0600043E                      
0600043E                      @draw_scroll:
0600043E D100                 		mov 	#layer_topleft,r1
06000440 6012                 		mov	@r1,r0
06000442 D100                 		mov 	#_framebuffer+$200,r1
06000444 310C                 		add 	r0,r1
06000446 D000                 		mov	#$FF,r0
06000448 000B                 		rts
0600044A 2100                 		mov.b	r0,@r1
0600044C                      		align 4
0600044C                      		
0600044C                      ; ----------------------------
0600044C                      ; Clear full framebuffer
0600044C                      ; ----------------------------
0600044C                      
0600044C                      Video_ClearFrame:
0600044C D100                 		mov	#_vdpreg,r1
0600044E 8515                 @wait2		mov.w	@(10,r1),r0	; Wait for FEN to clear
06000450 C902                 		and	#%10,r0
06000452 8802                 		cmp/eq	#2,r0
06000454 89FB                 		bt	@wait2
06000456                      		
06000456 D200                 		mov	#255,r2			; 256 words per pass
06000458 D300                 		mov	#$100,r3		; Starting address
0600045A E400                 		mov	#0,r4		; Clear to zero
0600045C D500                 		mov	#256,r5			; Increment address by 256
0600045E D600                 		mov	#(((VIDEO_XSIZE)*224)/256)/2,r6	; 140 passes
06000460                      @loop
06000460 6023                 		mov	r2,r0
06000462 8112                 		mov.w	r0,@(4,r1)	; Set length
06000464 6033                 		mov	r3,r0
06000466 8113                 		mov.w	r0,@(6,r1)	; Set address
06000468 6043                 		mov	r4,r0
0600046A 8114                 		mov.w	r0,@(8,r1)	; Set data
0600046C 335C                 		add	r5,r3
0600046E                      		
0600046E 8515                 @wait		mov.w	@(10,r1),r0	; Wait for FEN to clear
06000470 C902                 		and	#%10,r0
06000472 8802                 		cmp/eq	#2,r0
06000474 89FB                 		bt	@wait
06000476                      		
06000476 4610                 		dt	r6
06000478 8BF2                 		bf	@loop
0600047A 000B                 		rts
0600047C 0009                 		nop
0600047E 0009 0009            		align 4
06000484 0000 0000 0000    +  		lits
060004C4                      		
060004C4                      ; ----------------------------------
060004C4                      ; Load TGA picture
060004C4                      ; 
060004C4                      ; Uses slave
060004C4                      ; 
060004C4                      ; r1 - file
060004C4                      ; r2 - include palette yes/no
060004C4                      ; ----------------------------------
060004C4                      
060004C4                      Video_LoadTga:
060004C4 D800                   		mov	#RAM_Palette,r8
060004C6 382C                   		add 	r2,r8
060004C8                        		
060004C8 E005                   		mov	#5,r0
060004CA 310C                   		add	r0,r1
060004CC E000                  		mov	#0,r0
060004CE 8411                  		mov.b	@(1,r1),r0
060004D0 C9FF                  		and	#$FF,r0
060004D2 4018                  		shll8	r0
060004D4 6603                  		mov	r0,r6
060004D6 6010                  		mov.b	@r1,r0
060004D8 C9FF                  		and 	#$FF,r0
060004DA 260B                  		or	r0,r6
060004DC                       		
060004DC E00D                  		mov	#$D,r0
060004DE 310C                  		add	r0,r1
060004E0                      		
060004E0                      @nextpal:
060004E0 E400                  		mov	#0,r4
060004E2 D300                 		mov	#$F8,r3
060004E4                      		
060004E4 E500                 		mov	#0,r5
060004E6 6514                  		mov.b	@r1+,r5
060004E8 2539                  		and	r3,r5
060004EA 4518                  		shll8	r5
060004EC 4501                  		shlr	r5
060004EE 245B                  		or	r5,r4
060004F0 E500                 		mov	#0,r5
060004F2 6514                  		mov.b	@r1+,r5
060004F4 2539                  		and	r3,r5
060004F6 4508                  		shll2	r5
060004F8 245B                  		or	r5,r4
060004FA E500                 		mov	#0,r5
060004FC 6514                  		mov.b	@r1+,r5
060004FE 2539                  		and	r3,r5
06000500 4509                  		shlr2	r5
06000502 4501                  		shlr	r5
06000504 245B                  		or	r5,r4
06000506 2841                  		mov.w	r4,@r8
06000508 7802                  		add	#2,r8
0600050A 4610                  		dt	r6
0600050C 8BE8                  		bf	@nextpal
0600050E                      ;  		bra	@skipthis
0600050E                      ;  		nop
0600050E                      ; @no_pal:
0600050E                      ; 		mov	#3,r0
0600050E                      ; 		mulu	r0,r6
0600050E                      ; 		mov 	macl,r0
0600050E                      ; 		add	r0,r1
0600050E                      ; 		
0600050E                      ; @skipthis:
0600050E 000B                 		rts
06000510 0009                 		nop 
06000512 0009 0009            		align 4
06000518 0000 0000 0000    +  		lits
06000520                      		
06000520                      ; ------------------
06000520                      ; grab the frame
06000520                      ; ------------------
06000520                      
06000520                      ;   		mov	#_framebuffer+$200,r8
06000520                      ; 		mov	#224,r6
06000520                      ; @next_y:
06000520                      ;  		mov	#(VIDEO_XSIZE)/2,r7
06000520                      ; @next_x:
06000520                      ; 		rept 2
06000520                      ;  		mov 	#0,r0
06000520                      ;  		mov.b	@r1+,r0
06000520                      ;  		mov.b	r0,@r8
06000520                      ;  		add	#1,r8
06000520                      ;  		endr
06000520                      ;  		
06000520                      ;  		dt	r7
06000520                      ;  		bf	@next_x
06000520                      ;  		
06000520                      ; ;  		mov	#(VIDEO_XSIZE)*4,r0
06000520                      ; ;  		add 	r0,r1
06000520                      ; ;  		add 	r0,r8
06000520                      ;  		dt	r6
06000520                      ;  		bf	@next_y
06000520                      ; 		rts
06000520                      ; 		nop
06000520                      ; 		align 4
06000520                      ; 		lits
06000520                      		
06000520                      ; ----------------------------------
06000520                      ; VSync
06000520                      ; ----------------------------------
06000520                      
06000520                      Vsync:
06000520 D100                 		mov 	#frame_wait,r1
06000522 E001                 		mov 	#1,r0
06000524 2102                 		mov 	r0,@r1
06000526                      @wait_frame:
06000526 6012                 		mov	@r1,r0
06000528 8800                 		cmp/eq	#0,r0
0600052A 8BFC                 		bf	@wait_frame
0600052C 000B                 		rts
0600052E 0009                 		nop
06000530                      		align 4
06000530 0000 0000            		lits
06000534                      
06000534                      		
06000534                      ;
06000534                      ; Switch frame buffers
06000534                      ;
06000534                      ; Tells frame buffer to swap next frame
06000534                      ;
06000534                      ; We separate out Switch_Frame_Buffer and Wait_Swap so we can start on
06000534                      ; calculations before frame buffer has swapped, then call Wait_Frame_Swap
06000534                      ; before we actually start rendering. This salvages CPU time which
06000534                      ; would normally be spent busy-waiting for frame buffer to swap.
06000534                      ;
06000534                      
06000534                      Switch_Frame_Buffers
06000534                      
06000534 D100                 	mov	#_vdpreg,r1
06000536                      
06000536 D200                 	mov	#fb_num,r2
06000538 841B                 	mov.b	@(framectl,r1),r0
0600053A CA01                 	xor	#1,r0
0600053C 801B                 	mov.b	r0,@(framectl,r1)
0600053E                      
0600053E                      
0600053E 000B                 	rts
06000540 2200                 	mov.b	r0,@r2
06000542 0009 0009            	align 4
06000548 0000 0000 0000    +  	lits
06000550                      
06000550                      ;
06000550                      ; Wait frame swap
06000550                      ;
06000550                      ; Make sure frame buffer has swapped
06000550                      ;
06000550                      
06000550                      Wait_Frame_Swap
06000550                      
06000550 D100                 	mov	#_vdpreg,r1
06000552 D200                 	mov	#fb_num,r2
06000554 6020                 	mov.b	@r2,r0
06000556 6203                 	mov	r0,r2
06000558                      
06000558 841B                 @wait3	mov.b	@(framectl,r1),r0
0600055A 3200                 	cmp/eq	r0,r2
0600055C 8BFC                 	bf	@wait3
0600055E                      
0600055E 000B                 	rts
06000560 0009                 	nop
06000562 0009 0009            	align 4
06000568 0000 0000 0000    +  	lits
06000570                      	
06000570                      ; ====================================================================
06000570                      ; -------------------------------------------------
06000570                      ; SLAVE helper
06000570                      ; -------------------------------------------------
06000570                      
06000570                      Video_Slave:
06000570                      ; 		mov	#vid_slavecomm,r1
06000570                      ; 		mov	@r1,r0
06000570                      ; 		cmp/eq	#0,r0
06000570                      ; 		bt	@end
06000570                      		
06000570                      @end:
06000570 000B                 		rts
06000572 0009                 		nop 
06000574                      		align 4
06000574                      		lits
06000574                      
06000574                      ; ------------------------------------------------
06000574                      ; Data
06000574                      ; ------------------------------------------------	
06000574                      	
06000574                      tableVidHorCrop:
06000574                      		rept 96
06000574                      		dc.l $00
06000574                      		dc.l $80
06000574                      		dc.l $100
06000574 0000 0000 0000    +  		endr
060009F4                      		
060009F4                      		
060009F4                      		include "system/hardware/mars/sh2/subs/audio.asm"
060009F4                      ; ====================================================================
060009F4                      ; MARS PWM
060009F4                      ; ====================================================================
060009F4                      
060009F4                      ; -------------------------------------------------
060009F4                      ; Variables
060009F4                      ; -------------------------------------------------
060009F4                      
060009F4 =00000008            max_channels	equ	8
060009F4                      
060009F4                      ; --------------
060009F4                      
060009F4                      		rsreset
060009F4 =00000000            chn_start	rs.l 1
060009F4 =00000004            chn_end		rs.l 1
060009F4 =00000008            chn_loop	rs.l 1
060009F4 =0000000C            chn_read	rs.l 1
060009F4                      
060009F4 =00000010            chn_pan		rs.l 1
060009F4 =00000014            chn_wav		rs.l 1
060009F4 =00000018            chn_vol		rs.l 1
060009F4 =0000001C            chn_enable	rs.l 1
060009F4                      
060009F4 =00000020            chn_note	rs.l 1
060009F4 =00000024            chn_timer	rs.l 1
060009F4 =00000028            chn_free1 	rs.l 1
060009F4 =0000002C            chn_free2	rs.l 1
060009F4                      
060009F4 =00000030            chn_free3 	rs.l 1
060009F4 =00000034            chn_free4	rs.l 1
060009F4 =00000038            chn_free5 	rs.l 1
060009F4 =0000003C            chn_free6	rs.l 1
060009F4                      
060009F4 =00000040            sizeof_pwm	rs.l 0
060009F4                      
060009F4                      ; --------------
060009F4                      ; chn_pan
060009F4                      ; --------------
060009F4                      
060009F4 =00000002            bitLeft		equ	%00000010
060009F4 =00000001            bitRight	equ	%00000001
060009F4                      
060009F4                      ; ====================================================================
060009F4                      ; -------------------------------------------------
060009F4                      ; RAM
060009F4                      ; -------------------------------------------------
060009F4                      
060009F4                      		rsset RAM_Audio
060009F4 =0603C800            pwmstructs	rs.b max_channels*sizeof_pwm
060009F4 =0603CA00            sizeof_audio	rs.l 0
060009F4                      ; 		inform 0,"MARS SH2 Audio size: %h",(sizeof_audio-RAM_Audio)
060009F4                      		
060009F4                      ; ====================================================================
060009F4                      ; -------------------------------------------------
060009F4                      ; Init
060009F4                      ; -------------------------------------------------
060009F4                      
060009F4                      Audio_Init:
060009F4 D000                 		mov	#((((23011361<<1)/32000+1)>>1)+1),r0
060009F6 C119                 		mov.w	r0,@(cycle,gbr)
060009F8 D000                 		mov	#$0105,r0
060009FA C118                 		mov.w	r0,@(timerctl,gbr)
060009FC                      
060009FC E001                 		mov	#1,r0
060009FE C11C                 		mov.w	r0,@(monowidth,gbr)
06000A00 C11C                 		mov.w	r0,@(monowidth,gbr)
06000A02 C11C                 		mov.w	r0,@(monowidth,gbr)
06000A04                      	
06000A04 000B                 		rts
06000A06 0009                 		nop
06000A08                      		align 4
06000A08 0000 0000 0000    +  		lits
06000A10                      
06000A10                      ; -------------------------------------------------
06000A10                      ; Run
06000A10                      ; -------------------------------------------------
06000A10                      
06000A10                      Audio_Run:
06000A10 D800                 		mov	#pwmstructs,r8
06000A12 E908                 		mov	#max_channels,r9
06000A14 D600                 		mov	#$80,r6
06000A16 D700                 		mov 	#$80,r7
06000A18                      @channelloop:
06000A18 5087                 		mov	@(chn_enable,r8),r0	; is channel on?
06000A1A 8800                 		cmp/eq	#0,r0
06000A1C 8900                 		bt	@next_chnl
06000A1E                      
06000A1E 5183                 		mov	@(chn_read,r8),r1	; get the next pcm byte
06000A20 5281                 		mov	@(chn_end,r8),r2
06000A22 3123                  		cmp/ge	r2,r1
06000A24 8B00                  		bf	@cont_read
06000A26                      
06000A26 E000                  		mov 	#0,r0
06000A28 A000                  		bra	@next_chnl
06000A2A 1807                  		mov 	r0,@(chn_enable,r8)
06000A2C                       		
06000A2C                      @cont_read:
06000A2C E000                  		mov	#0,r0
06000A2E 6010                  		mov.b	@r1,r0
06000A30 7101                  		add	#1,r1			; +1 wav byte
06000A32                       		
06000A32 5289                  		mov	@(chn_timer,r8),r2
06000A34 7201                  		add 	#1,r2
06000A36 E33F                 		mov 	#$3F,r3
06000A38 2239                  		and	r3,r2
06000A3A 1829                  		mov 	r2,@(chn_timer,r8)
06000A3C                       		
06000A3C 1813                  		mov	r1,@(chn_read,r8)
06000A3E C9FF                 		and 	#$FF,r0
06000A40 5186                 		mov 	@(chn_vol,r8),r1
06000A42 201E                 		mulu	r1,r0
06000A44 001A                 		mov 	macl,r0
06000A46 8800                 		cmp/eq	#0,r0
06000A48 8B00                 		bf	@notzro
06000A4A CB01                 		or	#1,r0
06000A4C                      @notzro:
06000A4C 6103                 		mov 	r0,r1
06000A4E 4100                   		shll	r1
06000A50                      
06000A50 5084                  		mov	@(chn_pan,r8),r0
06000A52 C802                  		tst	#bitLeft,r0
06000A54 8900                  		bt	@not_l
06000A56 361C                 		add	r1,r6
06000A58                      @not_l:
06000A58 C801                  		tst	#bitRight,r0
06000A5A 8900                  		bt	@next_chnl
06000A5C 371C                 		add	r1,r7
06000A5E                      @next_chnl:
06000A5E 7840                 		add	#sizeof_pwm,r8
06000A60 4910                 		dt	r9
06000A62 8BD9                 		bf	@channelloop
06000A64                      	
06000A64                      ; ----------------------------------
06000A64                        
06000A64                      @tryagain:
06000A64 6063                  		mov.l	r6,r0
06000A66 C11A                  		mov.w	r0,@(lchwidth,gbr)
06000A68 6073                  		mov.l	r7,r0
06000A6A C11B                  		mov.w	r0,@(rchwidth,gbr)
06000A6C                       		
06000A6C C51C                   		mov.w	@(monowidth,gbr),r0
06000A6E 4019                   		shlr8	r0
06000A70 C880                  		tst	#$80,r0
06000A72 89F7                  		bt	@tryagain
06000A74 000B                 		rts
06000A76 0009                 		nop
06000A78                      		align 4
06000A78 0000 0000 0000    +  		lits
06000A80                      		
06000A80                      ; ====================================================================
06000A80                      ; -------------------------------------------------
06000A80                      ; Subs
06000A80                      ; -------------------------------------------------
06000A80                      
06000A80                      ; -------------------------------
06000A80                      ; Play channel
06000A80                      ;
06000A80                      ; Input:
06000A80                      ; r1 - Start
06000A80                      ; r2 - End
06000A80                      ; r3 - Loop
06000A80                      ; r4 - Panning (%000000LR)
06000A80                      ; r5 - Channel
06000A80                      ; -------------------------------
06000A80                      
06000A80                      Audio_Play:
06000A80 D800                 		mov.l	#pwmstructs,r8
06000A82 4508                 		shll2	r5
06000A84 4508                 		shll2	r5
06000A86 4508                 		shll2	r5		;Size $20
06000A88 385C                 		add	r5,r8
06000A8A                      
06000A8A 1810                 		mov 	r1,@(chn_start,r8)
06000A8C 1813                 		mov	r1,@(chn_read,r8)
06000A8E 1821                 		mov 	r2,@(chn_end,r8)
06000A90 1832                 		mov 	r3,@(chn_loop,r8)
06000A92                      		
06000A92 1844                 		mov 	r4,@(chn_pan,r8)
06000A94                      		
06000A94 E001                 		mov 	#1,r0
06000A96 1807                 		mov 	r0,@(chn_enable,r8)
06000A98 E001                 		mov 	#1,r0
06000A9A 1806                 		mov 	r0,@(chn_vol,r8)
06000A9C                      @done_pwm:
06000A9C 000B                 		rts
06000A9E 0009                 		nop
06000AA0                      		align 4
06000AA0 0000 0000            		lits
06000AA4                      	
06000AA4                      	
06000AA4                      		include "system/hardware/mars/sh2/subs/polygons.asm"
06000AA4                      ; ====================================================================
06000AA4                      ; Polygons system
06000AA4                      ; ====================================================================
06000AA4                      
06000AA4                      ; -------------------------------------------------
06000AA4                      ; Model format
06000AA4                      ; 
06000AA4                      ; Faces:
06000AA4                      ; dc.w TYPE (3/4)
06000AA4                      ; dc.w Material/Color
06000AA4                      ; dc.w ... Points (3 or 4)
06000AA4                      ; 
06000AA4                      ; Vertices:
06000AA4                      ; dc.w X,Y,Z
06000AA4                      ; 
06000AA4                      ; Material:
06000AA4                      ; TODO
06000AA4                      ; -------------------------------------------------
06000AA4                      
06000AA4                      ; -------------------------------------------------
06000AA4                      ; Variables
06000AA4                      ; -------------------------------------------------
06000AA4                      
06000AA4 =00000200            MAX_POLYGONS	equ	512		; 128 normal
06000AA4 =00000020            MAX_MODELS	equ	32
06000AA4 =00000040            MAX_DDALIST	equ	64
06000AA4 =000001C0            SCREEN_WIDTH	equ	320+128		; framebuffer X size
06000AA4 =00000140            SCREEN_WDTHVIEW	equ	320		; view X size (always 320)
06000AA4 =000000E0            SCREEN_HEIGHT	equ	224
06000AA4 =00000000            CODE_OLDRENDER	equ	0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsreset
06000AA4 =00000000            POINT_X		rs.l	1
06000AA4 =00000004            POINT_Y		rs.l	1
06000AA4 =00000008            SIZEOF_POINT	rs.l	0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsreset
06000AA4 =00000000            DDA_DST_X	rs.l	1
06000AA4 =00000004            DDA_DST_DX	rs.l	1
06000AA4 =00000008            DDA_DST_H	rs.l	1
06000AA4 =0000000C            DDA_SRC_X	rs.l	1
06000AA4 =00000010            DDA_SRC_DX	rs.l	1
06000AA4 =00000014            DDA_SRC_Y	rs.l	1
06000AA4 =00000018            DDA_SRC_DY	rs.l	1
06000AA4 =0000001C            DDA_DST_POINT	rs.l	1
06000AA4 =00000020            DDA_DST_HIGH	rs.l	1
06000AA4 =00000024            DDA_DST_LOW	rs.l	1
06000AA4 =00000028            DDA_SRC_POINT	rs.l	1
06000AA4 =0000002C            DDA_SRC_LOW	rs.l	1
06000AA4 =00000030            DDA_SRC_HIGH	rs.l	1
06000AA4 =00000034            DDA_EXIT_FLAG	rs.l	1
06000AA4 =00000038            sizeof_dda	rs.l	0
06000AA4                      
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsreset
06000AA4 =00000000            DDAL_SRC_LX	rs.l	1
06000AA4 =00000004            DDAL_SRC_LY	rs.l	1
06000AA4 =00000008            DDAL_DST_LX	rs.l	1
06000AA4 =0000000C            DDAL_SRC_RX	rs.l	1
06000AA4 =00000010            DDAL_SRC_RY	rs.l	1
06000AA4 =00000014            DDAL_DST_RX	rs.l	1
06000AA4 =00000018            DDAL_BUSY	rs.l	1
06000AA4 =0000001C            sizeof_ddalist	rs.l	0
06000AA4                      		
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsreset
06000AA4 =00000000            TML_SRC_TXTR	rs.l	1
06000AA4 =00000004            TML_SRC_TXTWDH	rs.l	1
06000AA4 =00000008            TML_DDA_ENTRY	rs.l	1
06000AA4 =0000000C            TML_DDA_COUNT	rs.l	1
06000AA4 =00000010            TML_SRC_LX	rs.l	1
06000AA4 =00000014            TML_SRC_LY	rs.l	1
06000AA4 =00000018            TML_SRC_RX	rs.l	1
06000AA4 =0000001C            TML_SRC_RY	rs.l	1
06000AA4 =00000020            TML_DST_LX	rs.l	1
06000AA4 =00000024            TML_DST_RX	rs.l	1
06000AA4 =00000028            TML_DST_Y	rs.l	1
06000AA4 =0000002C            TML_BOTTOM_Y	rs.l	1
06000AA4 =00000030            TML_FLAGS	rs.l	1
06000AA4 =00000034            sizeof_tml	rs.l	0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      		
06000AA4                      		rsreset
06000AA4 =00000000            ppnt_x		rs.l 1
06000AA4 =00000004            ppnt_y		rs.l 1
06000AA4 =00000008            ppnt_z		rs.l 1
06000AA4 =0000000C            sizeof_ppnt	rs.l 0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      ; Playfield buffer
06000AA4                      ; ------------------------------------
06000AA4                      		
06000AA4                      		rsreset
06000AA4 =00000000            plyfld_x	rs.l 1
06000AA4 =00000004            plyfld_y	rs.l 1
06000AA4 =00000008            plyfld_z	rs.l 1
06000AA4 =0000000C            plyfld_layout	rs.l 1
06000AA4 =00000010            plyfld_material	rs.l 1
06000AA4 =00000014            sizeof_plyfld	rs.l 0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      ; Models buffer
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsreset
06000AA4 =00000000            model_addr	rs.l 1
06000AA4 =00000004            model_x		rs.l 1
06000AA4 =00000008            model_y		rs.l 1
06000AA4 =0000000C            model_z		rs.l 1
06000AA4 =00000010            model_x_rot	rs.l 1
06000AA4 =00000014            model_y_rot	rs.l 1
06000AA4 =00000018            model_z_rot	rs.l 1
06000AA4 =0000001C            model_flags	rs.l 1				; 0 - normal, 1 - world algorithm NOT DONE
06000AA4 =00000020            sizeof_model	rs.l 0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      ; 3D Face
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsreset
06000AA4 =00000000            face_type	rs.l 1			; polygon(3) quad(4)
06000AA4 =00000004            face_texture	rs.l 1			; texture data, if -1 = solid color mode
06000AA4 =00000008            face_texwidth	rs.l 1			; texture add | width / color $00-$FF
06000AA4 =0000000C            face_texsrc	rs.l 2*4		; texture source points
06000AA4 =0000002C            face_points	rs.l 3*4		; x/y/z points (with perspective)
06000AA4 =0000005C            sizeof_plygn	rs.l 0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      		rsset RAM_PolygonSys
06000AA4 =06028FD8            plyfield_buffer	rs.b sizeof_plyfld
06000AA4 =06028FEC            models_buffer	rs.b sizeof_model*MAX_MODELS
06000AA4 =060293EC            polygon_out	rs.b sizeof_plygn*MAX_POLYGONS		; one list to read (X/Y/Z gone)
06000AA4 =06034BEC            polygon_z_list	rs.l MAX_POLYGONS*2
06000AA4                      
06000AA4                      ; ----------------------------------
06000AA4                      
06000AA4 =06035BEC            polygon_list 	rs.l MAX_POLYGONS
06000AA4 =060363EC            DDA_List 	rs.b (sizeof_dda*2)*224			; 224 or 240
06000AA4 =0603C5EC            TML_data_M	rs.b sizeof_tml
06000AA4 =0603C620            TML_data_S	rs.b sizeof_tml
06000AA4 =0603C654            DDA_Left	rs.b sizeof_dda				; DONT SEPARATE
06000AA4 =0603C68C            DDA_Right 	rs.b sizeof_dda				; THESE
06000AA4                      
06000AA4 =0603C6C4            mdltask_slave	rs.l 1
06000AA4 =0603C6C8            polygon_len	rs.l 1
06000AA4 =0603C6CC            sizeof_this	rs.l 0
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      ; NOTE: quitarlo si MAX_POLYGONS es mas de 1024
06000AA4                      
06000AA4                      		rsset $C0000000
06000AA4 =C0000000            face_dest	rs.l 2*4		; screen dest points
06000AA4                      
06000AA4                      ; ------------------------------------
06000AA4                      
06000AA4                      ; 		inform 0,"Polygons system: %h %h",RAM_PolygonSys,sizeof_this-RAM_PolygonSys
06000AA4                      ;    		inform 0,"%h %h",polygon_list,polygon_z_list
06000AA4                      		
06000AA4                      ; ====================================================================
06000AA4                      ; -------------------------------------------------
06000AA4                      ; Polygons
06000AA4                      ; 
06000AA4                      ; Master side
06000AA4                      ; -------------------------------------------------
06000AA4                      
06000AA4                      Polygons_Read:
06000AA4 4F22                 		mov	pr,@-r15
06000AA6                      
06000AA6 D100                 		mov	#polygon_len,r1
06000AA8 E000                 		mov	#0,r0
06000AAA 2102                 		mov	r0,@r1
06000AAC                      		
06000AAC                      ; --------------------------------
06000AAC                      ; Draw the faces
06000AAC                      ; --------------------------------		
06000AAC                      
06000AAC DE00                 		mov	#models_buffer,r14
06000AAE DD00                  		mov	#polygon_out,r13
06000AB0 EC20                 		mov	#MAX_MODELS,r12
06000AB2                      @next_model:
06000AB2 50E0                 		mov	@(model_addr,r14),r0
06000AB4 4015                 		cmp/pl	r0
06000AB6 8B00                 		bf	@skip_model
06000AB8 2FC6                 		mov	r12,@-r15
06000ABA                      		
06000ABA                      ; --------------------------------
06000ABA                      ; Read model, set faces
06000ABA                      ; --------------------------------
06000ABA                      
06000ABA B000                 		bsr	Model_Read
06000ABC 0009                 		nop
06000ABE                      
06000ABE                      ; --------------------------------
06000ABE                      ; Next model
06000ABE                      ; --------------------------------
06000ABE                      
06000ABE 6CF6                 		mov	@r15+,r12
06000AC0                      @skip_model:
06000AC0 7E20                 		add 	#sizeof_model,r14
06000AC2 4C10                 		dt	r12
06000AC4 8BF5                 		bf	@next_model
06000AC6                      		
06000AC6                      ; --------------------------------
06000AC6                      ; Draw the faces
06000AC6                      ; --------------------------------
06000AC6                      
06000AC6 B000                 		bsr	Polygon_ZSort
06000AC8 0009                 		nop
06000ACA                      
06000ACA B000                 		bsr	Polygon_Draw
06000ACC 0009                 		nop
06000ACE                      		
06000ACE                      ; --------------------------------
06000ACE                      ; Exit
06000ACE                      ; --------------------------------
06000ACE                      
06000ACE                      @exit_all:
06000ACE D100                 		mov	#polygon_len,r1
06000AD0 6012                 		mov	@r1,r0
06000AD2 C117                 		mov.w	r0,@(comm14,gbr)
06000AD4                      		
06000AD4 4F26                 		mov 	@r15+,pr
06000AD6 000B                 		rts
06000AD8 0009                 		nop
06000ADA 0009 0009            		align	4
06000AE0 0000 0000 0000    +  		lits
06000AEC                      	
06000AEC                      ; ====================================================================
06000AEC                      ; -------------------------------------------------
06000AEC                      ; Subs MASTER
06000AEC                      ; -------------------------------------------------
06000AEC                      
06000AEC                      ; *******************************
06000AEC                      ; Polygon
06000AEC                      ; *******************************
06000AEC                      
06000AEC                      ; -------------------------------
06000AEC                      ; Draw_Texture
06000AEC                      ; 
06000AEC                      ; Input:
06000AEC                      ; r1 - Dest points
06000AEC                      ; r2 - Type 3 or 4
06000AEC                      ; r3 - Texture or Solid color
06000AEC                      ; r4 - Texture ADD | Texture WIDTH
06000AEC                      ; r5 - Source points
06000AEC                      ;
06000AEC                      ; Uses:
06000AEC                      ; r0-r13 MASTER + SLAVE
06000AEC                      ; -------------------------------
06000AEC                      
06000AEC                      Draw_Texture:
06000AEC 4F22                 		mov	pr,@-r15
06000AEE                      		
06000AEE D800                 		mov	#TML_data_M,r8
06000AF0 1830                 		mov	r3,@(TML_SRC_TXTR,r8)
06000AF2 1841                  		mov	r4,@(TML_SRC_TXTWDH,r8)
06000AF4                      		
06000AF4 B000                 		bsr	Preinit_DDA
06000AF6 0009                 		nop
06000AF8                      
06000AF8 3650                 		cmp/eq	r5,r6
06000AFA 8900                 		bt	@exit;_old
06000AFC                      		
06000AFC D100                  		mov	#TML_data_M,r1
06000AFE 4615                 		cmp/pl	r6
06000B00 8900                 		bt	@not_top
06000B02 E5FF                 		mov	#-1,r5	
06000B04                      @not_top:	
06000B04 3657                 		cmp/gt	r5,r6
06000B06 8B00                 		bf	@exit;_old	
06000B08 115A                 		mov	r5,@(tml_dst_y,r1)
06000B0A 7601                 		add	#1,r6
06000B0C 116B                 		mov	r6,@(tml_bottom_y,r1)
06000B0E                      
06000B0E D600                 		mov	#DDA_Left,r6
06000B10 B000                 		bsr	Init_DDA
06000B12 0009                 		nop
06000B14 D600                 		mov	#DDA_Right,r6
06000B16 B000                 		bsr	Init_DDA
06000B18 0009                 		nop
06000B1A                      		
06000B1A                      ; ---------------------------------
06000B1A                      ; line loop
06000B1A                      ; ---------------------------------
06000B1A                      
06000B1A                      ; 		mov	#TML_data_M,r1
06000B1A                      ; 		mov 	@(tml_bottom_y,r1),r0
06000B1A                      ; 		cmp/pz	r0
06000B1A                      ; 		bt	@SuperRender
06000B1A                      ; 		
06000B1A                      ; @loop_old:
06000B1A                      ; 		mov	#TML_data_M,r11
06000B1A                      ; 		
06000B1A                      ;  		mov	#DDA_Right,r8
06000B1A                      ;  		bsr	Update_DDA_Right
06000B1A                      ;  		nop
06000B1A                      ; 		mov	#DDA_Left,r8
06000B1A                      ; 		bsr	Update_DDA_Left
06000B1A                      ;  		nop
06000B1A                      ;  
06000B1A                      ;  		mov	@(TML_DST_Y,r11),r0
06000B1A                      ; 		cmp/pz	r0
06000B1A                      ; 		bf	@bad_y_old
06000B1A                      ; 		mov	#DDA_Left,r3
06000B1A                      ; 		mov	@(DDA_SRC_X,r3),r7
06000B1A                      ;  		mov	@(DDA_SRC_Y,r3),r5
06000B1A                      ;  		mov	@(DDA_DST_X,r3),r8
06000B1A                      ; 		mov	#DDA_Right,r3
06000B1A                      ; 		mov	@(DDA_SRC_X,r3),r6
06000B1A                      ; 		mov	@(DDA_SRC_Y,r3),r4
06000B1A                      ; 		mov	@(DDA_DST_X,r3),r9
06000B1A                      ; 		bsr	Texture_Map_Line
06000B1A                      ;  		nop
06000B1A                      ; @bad_y_old:
06000B1A                      ; 		mov	@(TML_DST_Y,r11),r0
06000B1A                      ; 		add	#1,r0
06000B1A                      ; 		mov	r0,@(TML_DST_Y,r11)
06000B1A                      ; 
06000B1A                      ; 		mov	#SCREEN_HEIGHT,r1
06000B1A                      ; 		cmp/gt	r1,r0
06000B1A                      ; 		bt	@exit
06000B1A                      ; 		mov	@(TML_BOTTOM_Y,r11),r1
06000B1A                      ; 		cmp/ge	r1,r0
06000B1A                      ; 		bt	@loop_old
06000B1A                      ; 
06000B1A                      ; @exit_old:
06000B1A                      ; 		bra	@exit
06000B1A                      ; 		nop
06000B1A                      		
06000B1A                      ; --------------------------
06000B1A                      ; NEW render (MASTER+SLAVE)
06000B1A                      ; --------------------------
06000B1A                      
06000B1A                      @SuperRender:
06000B1A D100                   		mov	#mdltask_slave,r1
06000B1C 6012                 @wait:  	mov 	@r1,r0
06000B1E 8800                   		cmp/eq	#0,r0
06000B20 8BFC                   		bf	@wait
06000B22                        		
06000B22 DA00                  		mov	#DDA_List,r10
06000B24 DB00                 		mov	#TML_data_M,r11
06000B26 59BA                  		mov	@(TML_DST_Y,r11),r9
06000B28                      @loop:
06000B28 D800                  		mov	#DDA_Right,r8
06000B2A B000                  		bsr	Update_DDA_Right
06000B2C 0009                  		nop
06000B2E D800                 		mov	#DDA_Left,r8
06000B30 B000                 		bsr	Update_DDA_Left
06000B32 0009                  		nop
06000B34                      
06000B34 4911                 		cmp/pz	r9
06000B36 8B00                 		bf	@bad_y
06000B38 D100                 		mov	#224,r1
06000B3A 3917                 		cmp/gt	r1,r9
06000B3C 8900                 		bt	@endquik
06000B3E                      	
06000B3E D000                 		mov 	#DDA_Left,r0
06000B40 5103                  		mov	@(DDA_SRC_X,r0),r1
06000B42 5205                  		mov	@(DDA_SRC_Y,r0),r2
06000B44 5300                  		mov	@(DDA_DST_X,r0),r3
06000B46 D000                 		mov 	#DDA_Right,r0
06000B48 5403                 		mov	@(DDA_SRC_X,r0),r4
06000B4A 5505                 		mov	@(DDA_SRC_Y,r0),r5
06000B4C 5600                 		mov	@(DDA_DST_X,r0),r6
06000B4E 1A10                  		mov	r1,@(DDAL_SRC_LX,r10)
06000B50 1A21                  		mov	r2,@(DDAL_SRC_LY,r10)
06000B52 1A32                  		mov	r3,@(DDAL_DST_LX,r10)
06000B54 1A43                 		mov	r4,@(DDAL_SRC_RX,r10)
06000B56 1A54                 		mov	r5,@(DDAL_SRC_RY,r10)
06000B58 1A65                 		mov	r6,@(DDAL_DST_RX,r10)
06000B5A E000                 		mov 	#0,r0
06000B5C 1A06                 		mov 	r0,@(DDAL_BUSY,r10)
06000B5E E01C                 		mov 	#sizeof_ddalist,r0
06000B60 3A0C                 		add 	r0,r10
06000B62                      		
06000B62                      ; 		mov	#(sizeof_dda*2),r2
06000B62                      ; 		mov	#_DMASOURCE0,r1
06000B62                      ; 		mov	r8,@r1			; Source address
06000B62                      ; 		add 	r2,r8
06000B62                      ; 		mov	r10,@(4,r1)		; Destination address
06000B62                      ; 		add 	r2,r10
06000B62                      ; 		shlr2	r2			; /4
06000B62                      ; 		mov	r2,@(8,r1)		; Length
06000B62                      ;  		mov	#$5000|$800|$2E1,r0	; $5000|Size|
06000B62                      ; 		mov	r0,@($C,r1)		; load mode
06000B62                      ; 		add	#1,r2
06000B62                      ; 		mov	#_DMAOPERATION,r3 	; _DMAOPERATION = $ffffffb0
06000B62                      ; 		mov	r2,@r3
06000B62                      
06000B62                      @bad_y:
06000B62 51BB                 		mov	@(TML_BOTTOM_Y,r11),r1
06000B64 3917                 		cmp/gt	r1,r9
06000B66 8FDF                 		bf/s	@loop
06000B68 7901                 		add 	#1,r9
06000B6A                      @endquik:
06000B6A                      
06000B6A 50BA                 		mov	@(TML_DST_Y,r11),r0
06000B6C 6103                 		mov	r0,r1
06000B6E 7101                 		add 	#1,r1
06000B70 4011                 		cmp/pz	r0
06000B72 8900                 		bt	@dontzero
06000B74 E000                 		mov	#0,r0
06000B76 E101                 		mov	#1,r1
06000B78                      @dontzero:
06000B78 1B0A                 		mov	r0,@(TML_DST_Y,r11)
06000B7A                      		
06000B7A                      ; -----------------
06000B7A                      ; Read lines
06000B7A                      ; -----------------
06000B7A                      
06000B7A DB00                  		mov	#TML_data_M,r11
06000B7C D200                  		mov	#TML_data_S,r2
06000B7E 121A                  		mov	r1,@(TML_DST_Y,r2)
06000B80                       		
06000B80 50BB                  		mov	@(TML_BOTTOM_Y,r11),r0
06000B82 120B                  		mov	r0,@(TML_BOTTOM_Y,r2)
06000B84 50B0                  		mov	@(TML_SRC_TXTR,r11),r0
06000B86 1200                  		mov	r0,@(TML_SRC_TXTR,r2)
06000B88 50B1                  		mov	@(TML_SRC_TXTWDH,r11),r0
06000B8A 1201                  		mov	r0,@(TML_SRC_TXTWDH,r2) 
06000B8C                       		
06000B8C D000                 		mov	#DDA_List,r0
06000B8E 1B02                  		mov	r0,@(TML_DDA_ENTRY,r11)
06000B90 701C                  		add 	#sizeof_ddalist,r0
06000B92 1202                  		mov	r0,@(TML_DDA_ENTRY,r2)
06000B94 50B0                 		mov	@(TML_SRC_TXTR,r11),r0
06000B96 1200                 		mov	r0,@(TML_SRC_TXTR,r2)
06000B98 50B1                 		mov	@(TML_SRC_TXTWDH,r11),r0
06000B9A 1201                 		mov	r0,@(TML_SRC_TXTWDH,r2)
06000B9C                      
06000B9C D100                   		mov	#mdltask_slave,r1
06000B9E E001                  		mov	#1,r0
06000BA0 2102                     		mov	r0,@r1
06000BA2                          		
06000BA2                      @line_do:
06000BA2 53B2                   		mov	@(TML_DDA_ENTRY,r11),r3
06000BA4 5036                   		mov	@(DDAL_BUSY,r3),r0
06000BA6 E1FF                   		mov	#-1,r1
06000BA8 3010                   		cmp/eq	r1,r0
06000BAA 8900                   		bt	@busy_line
06000BAC 1316                   		mov	r1,@(DDAL_BUSY,r3)
06000BAE                        		
06000BAE 5730                  		mov	@(DDAL_SRC_LX,r3),r7
06000BB0 5531                  		mov	@(DDAL_SRC_LY,r3),r5
06000BB2 5832                  		mov	@(DDAL_DST_LX,r3),r8
06000BB4 5633                 		mov	@(DDAL_SRC_RX,r3),r6
06000BB6 5434                 		mov	@(DDAL_SRC_RY,r3),r4
06000BB8 5935                 		mov	@(DDAL_DST_RX,r3),r9
06000BBA                      		
06000BBA                      ; 		mov	@(DDA_SRC_X,r3),r7
06000BBA                      ;  		mov	@(DDA_SRC_Y,r3),r5
06000BBA                      ;  		mov	@(DDA_DST_X,r3),r8
06000BBA                      ; 		add 	#sizeof_dda,r3
06000BBA                      ; 		mov	@(DDA_SRC_X,r3),r6
06000BBA                      ; 		mov	@(DDA_SRC_Y,r3),r4
06000BBA                      ; 		mov	@(DDA_DST_X,r3),r9
06000BBA B000                 		bsr	Texture_Map_Line
06000BBC 0009                  		nop
06000BBE                       		
06000BBE                      @busy_line:
06000BBE 53B2                   		mov	@(TML_DDA_ENTRY,r11),r3
06000BC0 731C                 		add 	#sizeof_ddalist,r3
06000BC2 1B32                   		mov	r3,@(TML_DDA_ENTRY,r11)
06000BC4 50BA                 		mov	@(TML_DST_Y,r11),r0
06000BC6 7001                 		add	#1,r0
06000BC8 1B0A                 		mov	r0,@(TML_DST_Y,r11)
06000BCA                      		
06000BCA 51BB                 		mov	@(TML_BOTTOM_Y,r11),r1
06000BCC 3017                 		cmp/gt	r1,r0
06000BCE 8900                 		bt	@exit_here
06000BD0 D100                 		mov	#SCREEN_HEIGHT,r1
06000BD2 3017                 		cmp/gt	r1,r0
06000BD4 8BE5                 		bf	@line_do
06000BD6                      @exit_here:	
06000BD6                      		
06000BD6                      ; --------------------------
06000BD6                      
06000BD6                      @exit:
06000BD6 4F26                 		mov	@r15+,pr
06000BD8 000B                 		rts
06000BDA 0009                 		nop
06000BDC                      		align 4
06000BDC 0000 0000 0000    +  		lits
06000BF8                      
06000BF8                      ; ---------------------------------
06000BF8                      ; Find top point
06000BF8                      ;
06000BF8                      ; Entry:
06000BF8                      ;
06000BF8                      ;   r1: Dest   point list pointer
06000BF8                      ;   r2: Num of points
06000BF8                      ;   r4: Source point list pointer
06000BF8                      ;
06000BF8                      ; Returns:
06000BF8                      ;
06000BF8                      ;    r5: Start Y position
06000BF8                      ;    r6: End Y position
06000BF8                      ;    r7: Start dest point
06000BF8                      ;    r8: Start source point
06000BF8                      ;    r9: First dest point
06000BF8                      ;   r10: Last  dest point
06000BF8                      ;   r11: First source point
06000BF8                      ; ---------------------------------
06000BF8                      
06000BF8                      Preinit_DDA:
06000BF8 6823                 		mov	r2,r8			; Load number of points
06000BFA                      
06000BFA 6913                 		mov	r1,r9			; Set pointer to first dest point
06000BFC 6B53                 		mov	r5,r11			; Set pointer to first source point
06000BFE                      
06000BFE 6A83                 		mov	r8,r10			; Set pointer to last dest point
06000C00 7AFF                 		add	#-1,r10
06000C02 4A08                 		shll2	r10			; (Assumes SIZEOF_POINT == 8)
06000C04 4A00                 		shll	r10
06000C06 3A9C                 		add	r9,r10
06000C08                      
06000C08 6493                 		mov	r9,r4			; Search for dest start point
06000C0A D500                 		mov	#$7FFFFFFF,r5
06000C0C E6FF                 		mov	#$FFFFFFFF,r6
06000C0E                      
06000C0E 5041                 @loop		mov	@(POINT_Y,r4),r0
06000C10 3057                 		cmp/gt	r5,r0
06000C12 8900                 		bt	@check
06000C14                      
06000C14 6743                 		mov	r4,r7
06000C16 6503                 		mov	r0,r5
06000C18                      
06000C18 3603                 @check		cmp/ge	r0,r6
06000C1A 8900                 		bt	@next
06000C1C                      
06000C1C 6603                 		mov	r0,r6
06000C1E                      
06000C1E 7408                 @next		add	#SIZEOF_POINT,r4
06000C20 4810                 		dt	r8
06000C22 8BF4                 		bf	@loop
06000C24                      
06000C24 6873                 		mov	r7,r8			; Set source start point
06000C26 3898                 		sub	r9,r8
06000C28 38BC                 		add	r11,r8
06000C2A 000B                 		rts
06000C2C 0009                 		nop
06000C2E 0009 0009            		align 4
06000C34 0000 0000 0000       		lits
06000C38                      	
06000C38                      ;
06000C38                      ; Init DDA
06000C38                      ;
06000C38                      ; Entry:
06000C38                      ;
06000C38                      ;    r7: Start dest point
06000C38                      ;    r8: Start source point
06000C38                      ;    r9: First dest point
06000C38                      ;   r10: Last  dest point
06000C38                      ;   r11: First source point
06000C38                      ;   r6: DDA pointer
06000C38                      ;
06000C38                      ; Usage:
06000C38                      ;
06000C38                      ; r0-r4: Temporaries
06000C38                      ;    r5: Next dest point
06000C38                      ;    r6: Next source point
06000C38                      ;
06000C38                      ; Return:
06000C38                      ;
06000C38                      ; r7-r12: Unchanged
06000C38                      ;
06000C38                      
06000C38                      Init_DDA:
06000C38                      
06000C38                      ; Set limits
06000C38                      
06000C38 1677                 	mov	r7,@(DDA_DST_POINT,r6)	; Set destination points
06000C3A 1699                 	mov	r9,@(DDA_DST_LOW,r6)
06000C3C 16A8                 	mov	r10,@(DDA_DST_HIGH,r6)
06000C3E                      
06000C3E 60A3                 	mov	r10,r0
06000C40 3098                 	sub	r9,r0
06000C42 30BC                 	add	r11,r0
06000C44                      
06000C44 168A                 	mov	r8,@(DDA_SRC_POINT,r6) ; Set source point
06000C46 16BB                 	mov	r11,@(DDA_SRC_LOW,r6)
06000C48 160C                 	mov	r0,@(DDA_SRC_HIGH,r6)
06000C4A                      
06000C4A E000                 	mov	#0,r0			; Set height to zero
06000C4C 1602                 	mov	r0,@(DDA_DST_H,r6)
06000C4E 000B                 	rts
06000C50 160D                 	mov	r0,@(DDA_EXIT_FLAG,r6)
06000C52                      
06000C52                      ; ----------------------------------
06000C52                      ; Update left DDA
06000C52                      ;
06000C52                      ; Input:
06000C52                      ; r8: LEFT DDA pointer
06000C52                      ; 
06000C52                      ; Uses:
06000C52                      ; r0-r8
06000C52                      ; ----------------------------------
06000C52                      
06000C52                      Update_DDA_Left:
06000C52                      
06000C52                      ; Start critical section
06000C52                      
06000C52 5082                 	mov	@(DDA_DST_H,r8),r0	; Decrement height
06000C54 8800                 	cmp/eq	#0,r0
06000C56 8900                 	bt	@next_point
06000C58 70FF                 	add	#-1,r0
06000C5A 1802                 	mov	r0,@(DDA_DST_H,r8)
06000C5C                      
06000C5C 5080                 	mov	@(DDA_DST_X,r8),r0 	; Update dest horizontal position
06000C5E 5181                 	mov	@(DDA_DST_DX,r8),r1
06000C60 301C                 	add	r1,r0
06000C62 1800                 	mov	r0,@(DDA_DST_X,r8)
06000C64                      
06000C64 5083                 	mov	@(DDA_SRC_X,r8),r0	; Update source horizontal position
06000C66 5184                 	mov	@(DDA_SRC_DX,r8),r1
06000C68 301C                 	add	r1,r0
06000C6A 1803                 	mov	r0,@(DDA_SRC_X,r8)
06000C6C                      
06000C6C 5085                 	mov	@(DDA_SRC_Y,r8),r0	; Update source vertical position
06000C6E 5186                 	mov	@(DDA_SRC_DY,r8),r1
06000C70 301C                 	add	r1,r0
06000C72 000B                 	rts
06000C74 1805                 	mov	r0,@(DDA_SRC_Y,r8)
06000C76 0009 0009            	align 4
06000C7A                      	lits
06000C7A                      	
06000C7A                      ; End critical section
06000C7A                      
06000C7A                      @next_point
06000C7A                      
06000C7A D500                 @loop	mov	#$80000000,r5
06000C7C                      
06000C7C 5687                 	mov	@(DDA_DST_POINT,r8),r6	; Set dest to target point
06000C7E 5160                 	mov	@(POINT_X,r6),r1
06000C80 6053                 	mov	r5,r0
06000C82 201D                 	xtrct	r1,r0
06000C84 1800                 	mov	r0,@(DDA_DST_X,r8)
06000C86 5261                 	mov	@(POINT_Y,r6),r2
06000C88                      
06000C88 578A                 	mov	@(DDA_SRC_POINT,r8),r7	; Set source to target point
06000C8A 5370                 	mov	@(POINT_X,r7),r3
06000C8C 6053                 	mov	r5,r0
06000C8E 203D                 	xtrct	r3,r0
06000C90 1803                 	mov	r0,@(DDA_SRC_X,r8)
06000C92 5471                 	mov	@(POINT_Y,r7),r4
06000C94 6053                 	mov	r5,r0
06000C96 204D                 	xtrct	r4,r0
06000C98 1805                 	mov	r0,@(DDA_SRC_Y,r8)
06000C9A                      
06000C9A 5588                 	mov	@(DDA_DST_HIGH,r8),r5	; Calculate next target point
06000C9C 7608                 	add	#SIZEOF_POINT,r6
06000C9E 7708                 	add	#SIZEOF_POINT,r7
06000CA0 3657                 	cmp/gt	r5,r6
06000CA2 8B00                 	bf	@save_new_target
06000CA4 5689                 	mov	@(DDA_DST_LOW,r8),r6
06000CA6 578B                 	mov	@(DDA_SRC_LOW,r8),r7
06000CA8                      
06000CA8                      @save_new_target
06000CA8                      
06000CA8 1867                 	mov	r6,@(DDA_DST_POINT,r8)
06000CAA 187A                 	mov	r7,@(DDA_SRC_POINT,r8)
06000CAC                      
06000CAC 5560                 	mov	@(POINT_X,r6),r5	; Calculate dest dx and dy
06000CAE 3518                 	sub	r1,r5
06000CB0 5661                 	mov	@(POINT_Y,r6),r6
06000CB2 3628                 	sub	r2,r6
06000CB4                      
06000CB4 6063                 	mov	r6,r0
06000CB6 8800                 	cmp/eq	#0,r0
06000CB8 89DF                 	bt	@loop
06000CBA 4011                 	cmp/pz	r0
06000CBC 8B00                 	bf	@exit
06000CBE                      
06000CBE 1862                 	mov	r6,@(DDA_DST_H,r8)
06000CC0                      
06000CC0 D000                 	mov	#div_table,r0		; Calculate divisor
06000CC2 4608                 	shll2	r6
06000CC4 006E                 	mov	@(r0,r6),r0
06000CC6                      
06000CC6 4528                 	shll16	r5			; Calculate dest dx
06000CC8 305D                 	dmuls	r5,r0
06000CCA                      ; 	mov	macl,r2
06000CCA 010A                 	mov	mach,r1
06000CCC                      ; 	shal	r2
06000CCC 4124                 	rotcl	r1
06000CCE 1811                 	mov	r1,@(DDA_DST_DX,r8)
06000CD0                      
06000CD0 5570                 	mov	@(POINT_X,r7),r5	; Calculate source dx and dy
06000CD2 3538                 	sub	r3,r5
06000CD4 5671                 	mov	@(POINT_Y,r7),r6
06000CD6 3648                 	sub	r4,r6
06000CD8                      
06000CD8 4528                 	shll16	r5
06000CDA 305D                 	dmuls	r5,r0			; Calculate source dx
06000CDC                      ; 	mov	macl,r2
06000CDC 010A                 	mov	mach,r1
06000CDE                      ; 	shal	r2
06000CDE 4124                 	rotcl	r1
06000CE0 1814                 	mov	r1,@(DDA_SRC_DX,r8)
06000CE2                      
06000CE2 4628                 	shll16	r6
06000CE4 306D                 	dmuls	r6,r0			; Calculate source dy
06000CE6                      ; 	mov	macl,r2
06000CE6 010A                 	mov	mach,r1
06000CE8                      ; 	shal	r2
06000CE8 4124                 	rotcl	r1
06000CEA 000B                 	rts
06000CEC 1816                 	mov	r1,@(DDA_SRC_DY,r8)
06000CEE                      
06000CEE 000B                 @exit	rts
06000CF0 180D                 	mov	r0,@(DDA_EXIT_FLAG,r8)
06000CF2 0009 0009            	align 4
06000CF8 0000 0000 0000    +  	lits
06000D00                      	
06000D00                      ; ----------------------------------
06000D00                      ; Update Right DDA
06000D00                      ;
06000D00                      ; Input:
06000D00                      ; r8: RIGHT DDA pointer
06000D00                      ; 
06000D00                      ; Uses:
06000D00                      ; r0-r8
06000D00                      ; ----------------------------------
06000D00                      
06000D00                      Update_DDA_Right:
06000D00                      
06000D00                      ; Start critical section
06000D00                      
06000D00 5082                 	mov	@(DDA_DST_H,r8),r0	; Decrement height
06000D02 8800                 	cmp/eq	#0,r0
06000D04 8900                 	bt	@next_point
06000D06 70FF                 	add	#-1,r0
06000D08 1802                 	mov	r0,@(DDA_DST_H,r8)
06000D0A                      
06000D0A 5080                 	mov	@(DDA_DST_X,r8),r0 	; Update dest horizontal position
06000D0C 5181                 	mov	@(DDA_DST_DX,r8),r1
06000D0E 301C                 	add	r1,r0
06000D10 1800                 	mov	r0,@(DDA_DST_X,r8)
06000D12                      
06000D12 5083                 	mov	@(DDA_SRC_X,r8),r0	; Update source horizontal position
06000D14 5184                 	mov	@(DDA_SRC_DX,r8),r1
06000D16 301C                 	add	r1,r0
06000D18 1803                 	mov	r0,@(DDA_SRC_X,r8)
06000D1A                      
06000D1A 5085                 	mov	@(DDA_SRC_Y,r8),r0	; Update source vertical position
06000D1C 5186                 	mov	@(DDA_SRC_DY,r8),r1
06000D1E 301C                 	add	r1,r0
06000D20 000B                 	rts
06000D22 1805                 	mov	r0,@(DDA_SRC_Y,r8)
06000D24                      	align 4
06000D24                      	lits
06000D24                      	
06000D24                      ; End critical section
06000D24                      
06000D24                      @next_point
06000D24                      
06000D24 D500                 @loop	mov	#$80000000,r5
06000D26                      
06000D26 5687                 	mov	@(DDA_DST_POINT,r8),r6	; Set dest to target point
06000D28 5160                 	mov	@(POINT_X,r6),r1
06000D2A 6053                 	mov	r5,r0
06000D2C 201D                 	xtrct	r1,r0
06000D2E 1800                 	mov	r0,@(DDA_DST_X,r8)
06000D30 5261                 	mov	@(POINT_Y,r6),r2
06000D32                      
06000D32 578A                 	mov	@(DDA_SRC_POINT,r8),r7	; Set source to target point
06000D34 5370                 	mov	@(POINT_X,r7),r3
06000D36 6053                 	mov	r5,r0
06000D38 203D                 	xtrct	r3,r0
06000D3A 1803                 	mov	r0,@(DDA_SRC_X,r8)
06000D3C 5471                 	mov	@(POINT_Y,r7),r4
06000D3E 6053                 	mov	r5,r0
06000D40 204D                 	xtrct	r4,r0
06000D42 1805                 	mov	r0,@(DDA_SRC_Y,r8)
06000D44                      
06000D44 5589                 	mov	@(DDA_DST_LOW,r8),r5	; Calculate next target point
06000D46 76F8                 	add	#-SIZEOF_POINT,r6
06000D48 77F8                 	add	#-SIZEOF_POINT,r7
06000D4A 3653                 	cmp/ge	r5,r6
06000D4C 8900                 	bt	@save_new_target
06000D4E 5688                 	mov	@(DDA_DST_HIGH,r8),r6
06000D50 578C                 	mov	@(DDA_SRC_HIGH,r8),r7
06000D52                      
06000D52                      @save_new_target
06000D52                      
06000D52 1867                 	mov	r6,@(DDA_DST_POINT,r8)
06000D54 187A                 	mov	r7,@(DDA_SRC_POINT,r8)
06000D56                      
06000D56 5560                 	mov	@(POINT_X,r6),r5	; Calculate dest dx and dy
06000D58 3518                 	sub	r1,r5
06000D5A 5661                 	mov	@(POINT_Y,r6),r6
06000D5C 3628                 	sub	r2,r6
06000D5E                      
06000D5E 6063                 	mov	r6,r0
06000D60 8800                 	cmp/eq	#0,r0
06000D62 89DF                 	bt	@loop
06000D64 4011                 	cmp/pz	r0
06000D66 8B00                 	bf	@exit
06000D68                      
06000D68 1862                 	mov	r6,@(DDA_DST_H,r8)
06000D6A                      
06000D6A D000                 	mov	#div_table,r0		; Calculate divisor
06000D6C 4608                 	shll2	r6
06000D6E 006E                 	mov	@(r0,r6),r0
06000D70                      
06000D70 4528                 	shll16	r5			; Calculate dest dx
06000D72 305D                 	dmuls	r5,r0
06000D74                      ; 	mov	macl,r2
06000D74 010A                 	mov	mach,r1
06000D76                      ; 	shal	r2
06000D76 4124                 	rotcl	r1
06000D78 1811                 	mov	r1,@(DDA_DST_DX,r8)
06000D7A                      
06000D7A 5570                 	mov	@(POINT_X,r7),r5	; Calculate source dx and dy
06000D7C 3538                 	sub	r3,r5
06000D7E 5671                 	mov	@(POINT_Y,r7),r6
06000D80 3648                 	sub	r4,r6
06000D82                      
06000D82 4528                 	shll16	r5
06000D84 305D                 	dmuls	r5,r0			; Calculate source dx
06000D86                      ; 	mov	macl,r2
06000D86 010A                 	mov	mach,r1
06000D88                      ; 	shal	r2
06000D88 4124                 	rotcl	r1
06000D8A 1814                 	mov	r1,@(DDA_SRC_DX,r8)
06000D8C                      
06000D8C 4628                 	shll16	r6
06000D8E 306D                 	dmuls	r6,r0			; Calculate source dy
06000D90                      ; 	mov	macl,r2
06000D90 010A                 	mov	mach,r1
06000D92                      ; 	shal	r2
06000D92 4124                 	rotcl	r1
06000D94 000B                 	rts
06000D96 1816                 	mov	r1,@(DDA_SRC_DY,r8)
06000D98                      
06000D98 000B                 @exit	rts
06000D9A 180D                 	mov	r0,@(DDA_EXIT_FLAG,r8)
06000D9C                      	align 4
06000D9C 0000 0000 0000    +  	lits
06000DA4                      	
06000DA4                      ; ----------------------------------
06000DA4                      ; Texture map line
06000DA4                      ;
06000DA4                      ; Notes:
06000DA4                      ;
06000DA4                      ; Should take 13 clocks per pixel, once started. It's possible to reduce this
06000DA4                      ; to 10 clocks per pixel by using a slightly different algorithm, though.
06000DA4                      ;
06000DA4                      ; This texture-mapper works best with textures smaller than 4k, since they
06000DA4                      ; will fit in the SH2's cache.
06000DA4                      ;
06000DA4                      ; This texture mapper will not work with textures larger than 32k since
06000DA4                      ; we're using a 16-bit multiply (mulu.w).
06000DA4                      ;
06000DA4                      ; Register usage:
06000DA4                      ;
06000DA4                      ; r2: Bitmap width
06000DA4                      ; r3: Bitmap data pointer
06000DA4                      ; r4: Bitmap X position        (fixed pt, 16:16)
06000DA4                      ; r5: Bitmap DX                (fixed pt, 16:16)
06000DA4                      ; r6: Bitmap Y position        (fixed pt, 16:16)
06000DA4                      ; r7: Bitmap DY                (fixed pt, 16:16)
06000DA4                      ; r8: Destination line pointer (last pixel address + 1)
06000DA4                      ; r9: Destination line length
06000DA4                      ; ----------------------------------
06000DA4                      
06000DA4                      ; r14 - TML_data_M
06000DA4                      
06000DA4                      Texture_Map_Line:
06000DA4 53BA                 		mov	@(TML_DST_Y,r11),r3	; -1?
06000DA6 4311                 		cmp/pz	r3
06000DA8 8B00                 		bf	@exit
06000DAA D000                 		mov	#SCREEN_HEIGHT,r0	; +224?
06000DAC 3303                 		cmp/ge	r0,r3
06000DAE 8900                 		bt	@exit
06000DB0                      		
06000DB0 50B0                   		mov	@(TML_SRC_TXTR,r11),r0
06000DB2 4015                   		cmp/pl	r0
06000DB4 8B00                   		bf	@solid_map
06000DB6                      
06000DB6 6083                  		mov	r8,r0
06000DB8 3098                  		sub 	r9,r0
06000DBA 4011                  		cmp/pz	r0
06000DBC 8B00                  		bf	@backwrdsdst
06000DBE 6093                  		mov	r9,r0			; swap dest L/R
06000DC0 6183                  		mov	r8,r1
06000DC2 6803                  		mov	r0,r8
06000DC4 6913                  		mov	r1,r9
06000DC6                       		
06000DC6 6073                  		mov	r7,r0			; swap texture X
06000DC8 6163                  		mov	r6,r1
06000DCA 6603                  		mov	r0,r6
06000DCC 6713                  		mov	r1,r7		
06000DCE 6053                  		mov	r5,r0			; swap texture Y
06000DD0 6143                  		mov	r4,r1
06000DD2 6403                  		mov	r0,r4
06000DD4 6513                  		mov	r1,r5	
06000DD6                      @backwrdsdst:
06000DD6                      
06000DD6                      		;r9 - RIGHT point
06000DD6                      		;r8 - LEFT point
06000DD6                      		
06000DD6 4929                  		shlr16	r9
06000DD8 699F                   		exts	r9,r9
06000DDA 6293                    		mov	r9,r2
06000DDC 4915                   		cmp/pl	r9			; right < 0?
06000DDE 8B00                   		bf	@exit
06000DE0 4829                   		shlr16	r8
06000DE2 688F                   		exts	r8,r8
06000DE4 6183                   		mov	r8,r1
06000DE6 D000                  		mov	#SCREEN_WIDTH,r0
06000DE8 3803                   		cmp/ge	r0,r8			; left > 320?
06000DEA 8900                   		bt	@exit
06000DEC 203E                 		mulu	r3,r0
06000DEE                      
06000DEE 3218                    		sub 	r1,r2
06000DF0 D000                   		mov	#div_table,r0
06000DF2 4208                  		shll2	r2			; Calculate width divisor
06000DF4 012E                   		mov	@(r0,r2),r1
06000DF6                         				
06000DF6                      ; --------------------------
06000DF6                      ; Set texture
06000DF6                      ; --------------------------
06000DF6                      
06000DF6 021A                 		mov	macl,r2
06000DF8 6A53                  		mov	r5,r10
06000DFA 6043                  		mov	r4,r0
06000DFC                      		
06000DFC                      ; 		mov	@(TML_SRC_RX,r11),r4	; Set texture X
06000DFC                      ; 		mov	@(TML_SRC_LX,r11),r0	; Set texture DX
06000DFC 6473                 		mov	r7,r4
06000DFE 3648                 		sub 	r4,r6
06000E00 316D                 		dmuls	r6,r1
06000E02 050A                 		mov	mach,r5
06000E04 4524                 		rotcl	r5
06000E06                      ;  		mov	@(TML_SRC_RY,r11),r6	; Set texture Y
06000E06                      ; 		mov	@(TML_SRC_LY,r11),r0	; Set texture DY
06000E06 66A3                  		mov	r10,r6
06000E08 3068                 		sub	r6,r0
06000E0A 310D                 		dmuls	r0,r1
06000E0C 070A                 		mov	mach,r7
06000E0E 4724                 		rotcl	r7
06000E10                      
06000E10 4811                  		cmp/pz	r8
06000E12 8900                  		bt	@dontcropr
06000E14 6383                  		mov	r8,r3
06000E16 633B                  		neg 	r3,r3
06000E18                      @ogt:					;TODO: este fix es muy pendejo
06000E18 345C                   		add	r5,r4		; Update X
06000E1A 367C                   		add	r7,r6		; Update Y
06000E1C 4310                  		dt	r3
06000E1E 8BFB                  		bf	@ogt
06000E20 E800                   		mov	#0,r8
06000E22                      @dontcropr:
06000E22 D000                  		mov	#SCREEN_WIDTH,r0
06000E24 3903                  		cmp/ge	r0,r9
06000E26 8B00                  		bf	@dontcropl
06000E28 6903                  		mov	r0,r9
06000E2A                      @dontcropl:
06000E2A                       		
06000E2A 421A                 		mov	r2,macl
06000E2C D200                 		mov	#$FFFF,r2
06000E2E 50B1                 		mov	@(TML_SRC_TXTWDH,r11),r0
06000E30 4029                 		shlr16	r0
06000E32 2029                 		and	r2,r0
06000E34 6203                 		mov	r0,r2
06000E36 D100                   		mov	#_framebuffer+$200,r1
06000E38 001A                   		mov	macl,r0
06000E3A 310C                   		add 	r0,r1			; Y add
06000E3C 318C                  		add 	r8,r1			; X add
06000E3E                       		
06000E3E 53B0                 		mov	@(TML_SRC_TXTR,r11),r3	; Set texture struct pointer
06000E40 50B1                   		mov	@(TML_SRC_TXTWDH,r11),r0
06000E42 C9FF                  		and	#$FF,r0
06000E44 400A                  		mov	r0,mach			; pffft, but it works.
06000E46                       		
06000E46                      ;  		mov	#0,r10
06000E46 6093                 		mov	r9,r0
06000E48 6913                 		mov	r1,r9
06000E4A 3088                  		sub 	r8,r0
06000E4C 6803                   		mov	r0,r8
06000E4E E000                   		mov	#0,r0
06000E50 3800                   		cmp/eq	r0,r8
06000E52 8900                   		bt	@exit
06000E54                      		
06000E54                      ; --------------------------
06000E54                      ; *** Heavy loop ***
06000E54                      ;
06000E54                      ; r2 - Texture width
06000E54                      ; r3 - Texture data
06000E54                      ; r4 - X position
06000E54                      ; r5 - X update
06000E54                      ; r6 - Y position
06000E54                      ; r7 - Y add
06000E54                      ; r8 - Length
06000E54                      ; r9 - Output (framebuffer)
06000E54                      ; --------------------------
06000E54                      		
06000E54                      @loop:
06000E54 6169                 		swap	r6,r1			; Build row offset
06000E56 212E                 		mulu	r2,r1
06000E58                      		
06000E58 6143                 		mov	r4,r1	   		; Build column index
06000E5A 001A                 		mov	macl,r0
06000E5C 4129                 		shlr16	r1
06000E5E 301C                 		add	r1,r0
06000E60 013C                  		mov.b	@(r3,r0),r1		; Read pixel
06000E62 000A                  		mov	mach,r0
06000E64 310C                  		add 	r0,r1
06000E66 2910                 		mov.b	r1,@r9
06000E68                       		
06000E68 7901                 		add 	#1,r9
06000E6A 345C                    		add	r5,r4			; Update X
06000E6C 367C                  		add	r7,r6			; Update Y
06000E6E 4810                  		dt	r8
06000E70 8BF0                  		bf	@loop
06000E72                       		
06000E72                      @exit:
06000E72 000B                  		rts
06000E74 0009                  		nop
06000E76                      
06000E76                      ; --------------------------
06000E76                      ; Solid color map
06000E76                      ; --------------------------
06000E76                      
06000E76                      @solid_map:
06000E76 D700                 		mov	#SCREEN_WIDTH,r7
06000E78 6083                  		mov	r8,r0
06000E7A 3098                  		sub 	r9,r0
06000E7C 4011                  		cmp/pz	r0
06000E7E 8B00                  		bf	@backwrdsdst2
06000E80 6093                  		mov	r9,r0			; swap dest L/R
06000E82 6183                  		mov	r8,r1
06000E84 6803                  		mov	r0,r8
06000E86 6913                  		mov	r1,r9
06000E88                      @backwrdsdst2:
06000E88 4929                  		shlr16	r9
06000E8A 699F                   		exts	r9,r9
06000E8C 6293                    		mov	r9,r2
06000E8E 4915                   		cmp/pl	r9			; right < 0?
06000E90 8BEF                   		bf	@exit
06000E92 4829                   		shlr16	r8
06000E94 688F                   		exts	r8,r8
06000E96 6183                   		mov	r8,r1
06000E98 3873                   		cmp/ge	r7,r8			; left > 320?
06000E9A 89EA                   		bt	@exit
06000E9C 273E                 		mulu	r3,r7
06000E9E                         				
06000E9E 4811                  		cmp/pz	r8
06000EA0 8900                  		bt	@dontcropr2
06000EA2 E800                   		mov	#0,r8
06000EA4                      @dontcropr2:
06000EA4 D000                  		mov	#SCREEN_WIDTH,r0
06000EA6 3903                  		cmp/ge	r0,r9
06000EA8 8B00                  		bf	@dontcropl2
06000EAA 70FF                  		sub 	#1,r0
06000EAC 6903                  		mov	r0,r9
06000EAE                      @dontcropl2:
06000EAE                       
06000EAE                      ;   		mov	#_vdpreg,r4
06000EAE                      ; @wait_fb	mov.w	@(10,r4),r0	; Wait framebuffer
06000EAE                      ; 		and	#%10,r0
06000EAE                      ; 		cmp/eq	#2,r0
06000EAE                      ; 		bt	@wait_fb
06000EAE                      ; 
06000EAE                      ; 		mov	#2,r0
06000EAE                      ; ; 		shlr	r0
06000EAE                      ; 		mov.w	r0,@(4,r4)	; Set length
06000EAE                      ; 		
06000EAE                      ; 		mov 	#$100,r0
06000EAE                      ; 		mov 	#$A0,r2
06000EAE                      ; 		muls	r3,r2
06000EAE                      ; 		mov 	macl,r2
06000EAE                      ; 		add 	r2,r0
06000EAE                      ; 		mov 	r8,r2
06000EAE                      ; 		shlr	r2
06000EAE                      ; 		add 	r2,r0
06000EAE                      ; 		mov.w	r0,@(6,r4)	; Set address
06000EAE                      ; 		
06000EAE                      ;   		mov	@(TML_SRC_TXTWDH,r11),r0
06000EAE                      ;   		and 	#$FF,r0
06000EAE                      ;   		mov 	r0,r1
06000EAE                      ;   		shll8	r1
06000EAE                      ;   		or	r1,r0
06000EAE                      ; 		mov.w	r0,@(8,r4)	; Set data
06000EAE                      ; 	
06000EAE                      ; @wait_fb2	mov.w	@(10,r4),r0	; Wait framebuffer
06000EAE                      ; 		and	#%10,r0
06000EAE                      ; 		cmp/eq	#2,r0
06000EAE                      ; 		bt	@wait_fb2
06000EAE                      ; 		rts
06000EAE                      ; 		nop
06000EAE                      		
06000EAE D100                   		mov	#_framebuffer+$200,r1
06000EB0 001A                   		mov	macl,r0
06000EB2 310C                   		add 	r0,r1		; Y add
06000EB4 318C                  		add 	r8,r1		; X add
06000EB6 6293                 		mov	r9,r2
06000EB8 6913                 		mov	r1,r9
06000EBA 3288                  		sub 	r8,r2
06000EBC 7201                  		add 	#1,r2
06000EBE E000                  		mov	#0,r0
06000EC0 3200                   		cmp/eq	r0,r2
06000EC2 89D6                   		bt	@exit
06000EC4 50B1                   		mov	@(TML_SRC_TXTWDH,r11),r0
06000EC6 C9FF                   		and 	#$FF,r0
06000EC8                      	
06000EC8                      ; --------------------------
06000EC8                      ; *** Heavy loop ***
06000EC8                      ; --------------------------
06000EC8                      
06000EC8                      @loop2:
06000EC8 2100                 		mov.b	r0,@r1
06000ECA 7101                 		add 	#1,r1
06000ECC 4210                  		dt	r2
06000ECE 8BFB                  		bf	@loop2
06000ED0 000B                 		rts
06000ED2 0009                 		nop
06000ED4                      		align 4
06000ED4 0000 0000 0000    +  		lits
06000EE8                      		
06000EE8                      ; ------------------------------
06000EE8                      ; Rotate point around Z axis
06000EE8                      ;
06000EE8                      ; Entry:
06000EE8                      ;
06000EE8                      ; r5: x
06000EE8                      ; r6: y
06000EE8                      ; r0: theta
06000EE8                      ;
06000EE8                      ; Returns:
06000EE8                      ;
06000EE8                      ; r0: (x  cos @) + (y sin @)
06000EE8                      ; r1: (x -sin @) + (y cos @)
06000EE8                      ; ------------------------------
06000EE8                      
06000EE8                      Rotate_Point:
06000EE8 D100                 		mov	#sin_table,r1
06000EEA D200                 		mov	#cos_table,r2
06000EEC 031E                 		mov	@(r0,r1),r3
06000EEE 042E                 		mov	@(r0,r2),r4
06000EF0                      
06000EF0 345D                 		dmuls	r5,r4		; x cos @
06000EF2 001A                 		mov	macl,r0
06000EF4 010A                 		mov	mach,r1
06000EF6 201D                 		xtrct	r1,r0
06000EF8 336D                 		dmuls	r6,r3		; y sin @
06000EFA 011A                 		mov	macl,r1
06000EFC 020A                 		mov	mach,r2
06000EFE 212D                 		xtrct	r2,r1
06000F00 301C                 		add	r1,r0
06000F02                      
06000F02 633B                 		neg	r3,r3
06000F04 335D                 		dmuls	r5,r3		; x -sin @
06000F06 011A                 		mov	macl,r1
06000F08 020A                 		mov	mach,r2
06000F0A 212D                 		xtrct	r2,r1
06000F0C 346D                 		dmuls	r6,r4		; y cos @
06000F0E 021A                 		mov	macl,r2
06000F10 030A                 		mov	mach,r3
06000F12 223D                 		xtrct	r3,r2
06000F14 312C                 		add	r2,r1
06000F16 000B                  		rts
06000F18 0009                 		nop
06000F1C 0000 0000 0000    +  		lits
06000F24                      		align 4
06000F24                      	
06000F24                      ; -------------------------------
06000F24                      ; Autosort Z
06000F24                      ; -------------------------------
06000F24                      
06000F24                      Polygon_ZSort:
06000F24 D900                 		mov 	#polygon_len,r9
06000F26 6092                 		mov 	@r9,r0
06000F28 6903                 		mov 	r0,r9
06000F2A 4015                 		cmp/pl	r0
06000F2C 8B00                 		bf	@out
06000F2E 8800                 		cmp/eq	#0,r0
06000F30 8900                 		bt	@out
06000F32                      		
06000F32 D800                 		mov 	#polygon_z_list,r8
06000F34 6482                 		mov 	@r8,r4
06000F36 5181                 		mov 	@(4,r8),r1
06000F38 7808                 		add 	#8,r8
06000F3A D700                 		mov 	#polygon_list,r7
06000F3C 2712                 		mov 	r1,@r7
06000F3E                      		
06000F3E 8801                 		cmp/eq	#1,r0
06000F40 8900                 		bt	@out
06000F42                      		
06000F42                      ; ----------------------
06000F42                      ; Check the farest away
06000F42                      ; ----------------------
06000F42                      
06000F42 6793                 		mov 	r9,r7
06000F44                      @loop:
06000F44 6082                 		mov 	@r8,r0
06000F46 3047                 		cmp/gt	r4,r0
06000F48 8900                 		bt	@not
06000F4A 6403                 		mov 	r0,r4
06000F4C                      @not:
06000F4C 7808                 		add 	#8,r8
06000F4E 4710                 		dt	r7
06000F50 8BF8                 		bf	@loop
06000F52                      		
06000F52                      ; ----------------------
06000F52                      ; Now sort
06000F52                      ; 
06000F52                      ; r4 - start
06000F52                      ; ----------------------
06000F52                      
06000F52                      ; 		mov 	#-512,r4
06000F52 6693                 		mov 	r9,r6
06000F54 6593                 		mov 	r9,r5
06000F56 D800                 		mov 	#polygon_z_list,r8
06000F58 D700                 		mov 	#polygon_list,r7
06000F5A                      @loopZ:
06000F5A 6182                 		mov 	@r8,r1
06000F5C 3417                          	cmp/gt	r1,r4
06000F5E 8B00                            	bf	@next
06000F60                      		
06000F60 5081                 		mov 	@(4,r8),r0
06000F62 88FF                 		cmp/eq	#-1,r0
06000F64 8900                 		bt	@next
06000F66                      		
06000F66 D100                 		mov 	#TH,r1
06000F68 201B                 		or	r1,r0
06000F6A 2702                 		mov 	r0,@r7
06000F6C 7704                 		add 	#4,r7
06000F6E 76FF                 		sub 	#1,r6
06000F70                      		
06000F70 E0FF                 		mov 	#-1,r0
06000F72 1801                 		mov 	r0,@(4,r8)
06000F74                      @next:
06000F74 4615                 		cmp/pl	r6
06000F76 8B00                 		bf	@out
06000F78                      		
06000F78 7808                 		add 	#8,r8
06000F7A 4510                 		dt 	r5
06000F7C 8BED                 		bf	@loopZ
06000F7E                      ; 		
06000F7E 6593                 		mov 	r9,r5
06000F80 D800                 		mov 	#polygon_z_list,r8
06000F82 AFEA                 		bra	@loopZ
06000F84 7401                 		add 	#1,r4
06000F86                      		
06000F86                      ; ----------------------
06000F86                      
06000F86                      @out:
06000F86 000B                 		rts
06000F88 0009                 		nop
06000F8A 0009 0009            		align 4
06000F90 0000 0000 0000    +  		lits
06000FA0                      		
06000FA0                      ; -------------------------------
06000FA0                      ; Draw polygons from list to
06000FA0                      ; framebuffer
06000FA0                      ; -------------------------------
06000FA0                      
06000FA0                      Polygon_Draw:
06000FA0 DD00                   		mov	#polygon_list,r13
06000FA2 D100                   		mov	#polygon_len,r1
06000FA4 6C12                   		mov	@r1,r12
06000FA6 4C15                   		cmp/pl	r12
06000FA8 8B00                   		bf	@exit	
06000FAA                      @next:
06000FAA 6BD2                 		mov 	@r13,r11
06000FAC E000                 		mov 	#0,r0
06000FAE 3B00                 		cmp/eq	r0,r11
06000FB0 8900                 		bt	@skip
06000FB2 50B0                   		mov	@(face_type,r11),r0
06000FB4 4015                   		cmp/pl	r0			;Fail-Safe
06000FB6 8B00                   		bf	@skip
06000FB8                        		
06000FB8 6503                 		mov	r0,r5
06000FBA 63B3                 		mov	r11,r3
06000FBC 732C                 		add 	#face_points,r3
06000FBE D400                 		mov 	#face_dest,r4
06000FC0                      @next_master:
06000FC0 6032                      		mov	@r3,r0
06000FC2 4019                      		shlr8	r0
06000FC4 600F                      		exts	r0,r0
06000FC6 D600                 		mov	#(SCREEN_WDTHVIEW/2),r6
06000FC8 306C                              	add 	r6,r0
06000FCA 2402                         	mov	r0,@r4
06000FCC 5031                 		mov	@(4,r3),r0
06000FCE 4019                      		shlr8	r0
06000FD0 600F                      		exts	r0,r0
06000FD2 E670                          	mov	#(SCREEN_HEIGHT/2),r6
06000FD4 306C                 		add 	r6,r0
06000FD6 1401                 		mov	r0,@(4,r4)
06000FD8                       
06000FD8 730C                    		add 	#$C,r3
06000FDA 7408                     		add 	#8,r4
06000FDC 4510                      		dt	r5
06000FDE 8BEF                      		bf	@next_master
06000FE0                      
06000FE0 52B0                   		mov	@(face_type,r11),r2
06000FE2 D100                 		mov 	#face_dest,r1
06000FE4 53B1                 		mov	@(face_texture,r11),r3
06000FE6 54B2                 		mov	@(face_texwidth,r11),r4
06000FE8 65B3                 		mov	r11,r5
06000FEA 750C                 		add 	#face_texsrc,r5
06000FEC                      		
06000FEC 4F22                 		mov 	pr,@-r15
06000FEE D000                 		mov	#Draw_Texture,r0
06000FF0 400B                 		jsr	@r0
06000FF2 0009                 		nop
06000FF4 4F26                 		mov 	@r15+,pr
06000FF6                      		
06000FF6 E000                 		mov 	#0,r0
06000FF8 2D02                 		mov 	r0,@r13
06000FFA                      @skip:
06000FFA 7D04                 		add 	#4,r13
06000FFC 4C10                 		dt	r12
06000FFE 8BD4                 		bf	@next
06001000                      
06001000                      @exit:
06001000 000B                 		rts
06001002 0009                 		nop
06001004                      			
06001004                      ; ====================================================================
06001004                      ; -------------------------------------------------
06001004                      ; Polygons
06001004                      ; 
06001004                      ; Slave side
06001004                      ; -------------------------------------------------
06001004                      
06001004                      Polygons_Slave:
06001004 D100                 		mov	#mdltask_slave,r1
06001006 6012                 		mov	@r1,r0
06001008 8800                 		cmp/eq	#0,r0
0600100A 8900                 		bt	@exit
0600100C                      		
0600100C                      ; -----------------
0600100C                      ; Read lines
0600100C                      ; -----------------
0600100C                      
0600100C DB00                  		mov	#TML_data_S,r11	
0600100E                      @line_do:
0600100E 53B2                   		mov	@(TML_DDA_ENTRY,r11),r3
06001010 5036                   		mov	@(DDAL_BUSY,r3),r0
06001012 E1FF                   		mov	#-1,r1
06001014 3010                   		cmp/eq	r1,r0
06001016 8900                   		bt	@busy_line
06001018 1316                   		mov	r1,@(DDAL_BUSY,r3)
0600101A                        	
0600101A 5730                  		mov	@(DDAL_SRC_LX,r3),r7
0600101C 5531                  		mov	@(DDAL_SRC_LY,r3),r5
0600101E 5832                  		mov	@(DDAL_DST_LX,r3),r8
06001020 5633                 		mov	@(DDAL_SRC_RX,r3),r6
06001022 5434                 		mov	@(DDAL_SRC_RY,r3),r4
06001024 5935                 		mov	@(DDAL_DST_RX,r3),r9
06001026 4F22                 		mov	pr,@-r15
06001028 BEBC                 		bsr	Texture_Map_Line
0600102A 0009                  		nop
0600102C 4F26                  		mov	@r15+,pr
0600102E                       		
0600102E                      @busy_line:
0600102E 53B2                   		mov	@(TML_DDA_ENTRY,r11),r3
06001030 731C                 		add 	#sizeof_ddalist,r3
06001032 1B32                   		mov	r3,@(TML_DDA_ENTRY,r11)
06001034 50BA                 		mov	@(TML_DST_Y,r11),r0
06001036 7001                 		add	#1,r0
06001038 1B0A                 		mov	r0,@(TML_DST_Y,r11)
0600103A                      		
0600103A D100                 		mov	#SCREEN_HEIGHT,r1
0600103C 3017                 		cmp/gt	r1,r0
0600103E 8900                 		bt	@exit_here
06001040 51BB                 		mov	@(TML_BOTTOM_Y,r11),r1
06001042 3017                 		cmp/gt	r1,r0
06001044 8BE3                 		bf	@line_do
06001046                      @exit_here:
06001046                      
06001046                      ; -----------------
06001046                      
06001046                      @finish:
06001046 D100                 		mov	#mdltask_slave,r1
06001048 E000                 		mov	#0,r0
0600104A 2102                 		mov	r0,@r1
0600104C                      		
0600104C                      ; 		bra	*
0600104C                      ; 		nop
0600104C                      		
0600104C                      @exit:
0600104C 000B                 		rts
0600104E 0009                 		nop
06001050                      		align 4
06001050 0000 0000 0000    +  		lits
06001070                      	
06001070                      ; ====================================================================
06001070                      
06001070                      ; *******************************
06001070                      ; Model engine
06001070                      ; *******************************
06001070                      
06001070                      ; -------------------------------
06001070                      ; Model read
06001070                      ; 
06001070                      ; r14 - Current model in list
06001070                      ; r13 - Polygon list (current)
06001070                      ; -------------------------------
06001070                      
06001070                      Model_Read:
06001070 4F22                 		mov	pr,@-r15
06001072                      		
06001072 50E0                  		mov	@(model_addr,r14),r0
06001074 6802                 		mov	@r0,r8			; r8 - Faces
06001076 5901                 		mov	@(4,r0),r9		; r9 - Points
06001078 5A02                 		mov	@(8,r0),r10		; r10 - Material
0600107A                       		
0600107A                      ;  		mov	#polygon_out,r13
0600107A                      ;    		mov 	#polygon_len,r1
0600107A                      ;  		mov	@r1,r0
0600107A                      ;    		mov 	#MAX_POLYGONS,r2
0600107A                      ;    		cmp/ge	r2,r0
0600107A                      ;    		bf	@not_out
0600107A                      ;    		bra	@end
0600107A                      ;    		nop
0600107A                      ; @not_out:
0600107A                      ;  		mov	@r1,r0
0600107A                      ;  		mov	#sizeof_plygn,r1
0600107A                      ;  		mulu	r0,r1
0600107A                      ;  		mov	macl,r0
0600107A                      ;  		add 	r0,r13
0600107A                      
0600107A                      ; ----------------------------------
0600107A                      
0600107A                      @next:
0600107A E000                 		mov	#0,r0
0600107C 6085                 		mov.w	@r8+,r0
0600107E 6B03                 		mov	r0,r11
06001080 E003                 		mov	#3,r0			; triangle?
06001082 3B00                 		cmp/eq	r0,r11
06001084 8900                 		bt	@valid
06001086 7001                 		add 	#1,r0
06001088 3B00                 		cmp/eq	r0,r11			; quad?
0600108A 8900                 		bt	@valid
0600108C A000                 		bra	@end
0600108E 0009                 		nop
06001090                      
06001090                      ; ----------------------------------
06001090                      ; Valid model
06001090                      ; ----------------------------------
06001090                      
06001090                      @valid:
06001090 1DB0                 		mov	r11,@(face_type,r13)
06001092                      		
06001092                      ; ----------------------------------
06001092                      ; find texture
06001092                      ; ----------------------------------
06001092                      
06001092 E0FF                 		mov	#-1,r0			; Solid color mode
06001094 1D01                 		mov	r0,@(face_texture,r13)
06001096 E000                 		mov	#0,r0
06001098 6085                 		mov.w	@r8+,r0			; grab material id
0600109A 6103                 		mov	r0,r1
0600109C 6203                 		mov	r0,r2
0600109E D000                 		mov	#$7FFF,r0
060010A0 2109                 		and 	r0,r1
060010A2 D000                 		mov	#$8000,r0
060010A4 2209                 		and 	r0,r2
060010A6 4228                 		shll16	r2
060010A8 212B                 		or	r2,r1
060010AA 4115                 		cmp/pl	r1
060010AC 8900                 		bt	@set_solid
060010AE                      		
060010AE                      ; ----------------------------------
060010AE                      ; Set texture source
060010AE                      ; ----------------------------------
060010AE                      
060010AE 66A3                 		mov	r10,r6
060010B0 63A3                 		mov	r10,r3
060010B2                      		
060010B2                      @next_srch:
060010B2 6062                 		mov	@r6,r0			; ID to search
060010B4 88FF                 		cmp/eq	#-1,r0
060010B6 8900                 		bt	@not_found
060010B8 3100                 		cmp/eq	r0,r1
060010BA 8900                 		bt	@found
060010BC                      		
060010BC 7608                 		add 	#$8,r6			; skip id/addr/width
060010BE 4011                 		cmp/pz	r0
060010C0 8900                 		bt	@solidadd
060010C2 7624                 		add 	#$24,r6			; skip tex source
060010C4                      @solidadd:
060010C4 AFF5                 		bra	@next_srch
060010C6 0009                 		nop
060010C8                      		
060010C8                      ; -----------------------------
060010C8                      ; Material if not found
060010C8                      ; -----------------------------
060010C8                      	
060010C8                      @not_found:
060010C8 D100                 		mov	#$FF,r1
060010CA                      		
060010CA                      ; -----------------------------
060010CA                      ; Use solid color
060010CA                      ; -----------------------------
060010CA                      
060010CA                      @set_solid:
060010CA A000                 		bra	@its_solid
060010CC 1D12                 		mov	r1,@(face_texwidth,r13)
060010CE                      
060010CE                      ; -----------------------------
060010CE                      ; Found texture
060010CE                      ; -----------------------------
060010CE                      
060010CE                      @found:	
060010CE 7604                 		add 	#4,r6
060010D0                      		
060010D0 6462                 		mov	@r6,r4
060010D2 5561                 		mov	@(4,r6),r5
060010D4 7608                 		add 	#8,r6
060010D6 1D42                 		mov	r4,@(face_texwidth,r13)
060010D8 4011                 		cmp/pz	r0
060010DA 8900                 		bt	@its_solid
060010DC 1D41                 		mov	r4,@(face_texture,r13)
060010DE 1D52                 		mov	r5,@(face_texwidth,r13)
060010E0                      
060010E0 65B3                 		mov	r11,r5
060010E2 67D3                 		mov	r13,r7
060010E4 770C                 		add 	#face_texsrc,r7
060010E6                      @copysrc:
060010E6 6066                 		mov	@r6+,r0
060010E8 2702                 		mov	r0,@r7
060010EA 7704                 		add 	#4,r7
060010EC 6066                 		mov	@r6+,r0
060010EE 2702                 		mov	r0,@r7
060010F0 7704                 		add 	#4,r7
060010F2 4510                 		dt	r5
060010F4 8BF7                 		bf	@copysrc
060010F6                      @its_solid:
060010F6                      
060010F6                      ; ----------------------------------
060010F6                      ; Send target points to buffer
060010F6                      ; ----------------------------------
060010F6                      
060010F6 67D3                 		mov	r13,r7
060010F8 772C                 		add	#face_points,r7
060010FA                      		
060010FA E100                  		mov	#0,r1
060010FC                      @nextpoints:
060010FC 6C93                 		mov	r9,r12
060010FE E000                 		mov	#0,r0
06001100 6085                 		mov.w	@r8+,r0
06001102 E106                 		mov	#6,r1
06001104 210E                 		mulu	r0,r1
06001106 001A                 		mov	macl,r0
06001108 3C0C                 		add 	r0,r12
0600110A                      
0600110A                      ; ----------------------------------
0600110A                      
0600110A                        		;Rotated
0600110A E000                  		mov	#0,r0
0600110C 60C1                  		mov.w	@r12,r0
0600110E 650F                   		exts.w	r0,r5
06001110 85C2                   		mov.w	@(4,r12),r0
06001112 660F                   		exts.w	r0,r6
06001114                      ;   		mov 	@(model_z,r14),r0
06001114                      ;   		add 	r0,r6
06001114 4518                   		shll8	r5
06001116 4618                   		shll8	r6
06001118 50E5                    		mov	@(model_y_rot,r14),r0
0600111A 4000                    		shll	r0
0600111C D100                     		mov	#$7FF,r1
0600111E 2019                     		and	r1,r0
06001120 BEE2                  		bsr	Rotate_Point
06001122 4008                    		shll2	r0 
06001124 2702                    		mov	r0,@r7
06001126                         		
06001126 6613                   		mov	r1,r6
06001128 E000                  		mov	#0,r0
0600112A 85C1                 		mov.w	@(2,r12),r0
0600112C 6503                    		mov	r0,r5
0600112E 4518                    		shll8	r5
06001130 50E4                    		mov	@(model_x_rot,r14),r0
06001132 4000                    		shll	r0
06001134 D200                     		mov	#$7FF,r2
06001136 2029                     		and	r2,r0
06001138 BED6                  		bsr	Rotate_Point
0600113A 4008                    		shll2	r0
0600113C 1712                        		mov	r1,@(8,r7)
0600113E                             		
0600113E 6572                 		mov	@r7,r5			; grab X again
06001140 6603                 		mov 	r0,r6
06001142 50E6                    		mov	@(model_z_rot,r14),r0
06001144 4000                    		shll	r0
06001146 D100                     		mov	#$7FF,r1
06001148 2019                     		and	r1,r0
0600114A BECD                  		bsr	Rotate_Point
0600114C 4008                    		shll2	r0
0600114E 2702                    		mov	r0,@r7
06001150 1711                   		mov	r1,@(4,r7)
06001152                      
06001152                        		
06001152                        		;Move object
06001152 5672                 		mov	@(8,r7),r6
06001154 51E3                 		mov 	@(model_z,r14),r1
06001156 4118                 		shll8	r1
06001158 4121                 		shar	r1
0600115A                      ; 		shar	r1
0600115A 361C                         	add 	r1,r6
0600115C 1762                 		mov	r6,@(8,r7)
0600115E 6672                 		mov	@r7,r6
06001160 51E1                 		mov 	@(model_x,r14),r1
06001162 4118                 		shll8	r1
06001164 4121                 		shar	r1
06001166                      ; 		shar	r1
06001166 361C                         	add 	r1,r6
06001168 2762                 		mov	r6,@r7		
0600116A 5671                 		mov	@(4,r7),r6
0600116C 51E2                 		mov 	@(model_y,r14),r1
0600116E 4118                 		shll8	r1
06001170 4121                 		shar	r1
06001172                      ; 		shar	r1
06001172 361C                         	add 	r1,r6
06001174 1761                 		mov	r6,@(4,r7)
06001176                      		
06001176                      ; -----------------------------
06001176                      ; Perspective
06001176                      ; -----------------------------
06001176                      
06001176 B000                 		bsr	calc_persp
06001178 5272                 		mov	@(8,r7),r2
0600117A                      		
0600117A 6072                 		mov	@r7,r0
0600117C 302D                 		dmuls	r2,r0
0600117E 001A                 		mov	macl,r0
06001180 010A                 		mov	mach,r1
06001182 201D                 		xtrct	r1,r0
06001184 2702                 		mov	r0,@r7
06001186                      		
06001186 5071                 		mov	@(4,r7),r0
06001188 302D                 		dmuls	r2,r0
0600118A 001A                 		mov	macl,r0
0600118C 010A                 		mov	mach,r1
0600118E 201D                 		xtrct	r1,r0
06001190 1701                 		mov	r0,@(4,r7)
06001192                      
06001192                      ; -----------------------------
06001192                      
06001192                      @false:
06001192 770C                    		add	#$C,r7
06001194 4B10                   		dt	r11
06001196 8BB1                   		bf	@nextpoints
06001198                      	
06001198                      ; ----------------------------------
06001198                      ; Face out check 1
06001198                      ; ----------------------------------
06001198                      
06001198 67D3                   		mov	r13,r7
0600119A 772C                   		add	#face_points,r7
0600119C D200                    		mov 	#-160,r2		; X end
0600119E E390                    		mov 	#-112,r3		; Y end
060011A0 D400                    		mov 	#-512,r4		; Z end
060011A2 E600                    		mov 	#0,r6
060011A4 55D0                  		mov	@(face_type,r13),r5
060011A6                      @next2:
060011A6 5072                     		mov	@(8,r7),r0		;TODO: esto causa mucho pedo
060011A8 4019                     		shlr8	r0
060011AA 600F                     		exts	r0,r0    		
060011AC 3047                      		cmp/gt	r4,r0
060011AE 8B00                      		bf	@on_x
060011B0 4011                     		cmp/pz	r0
060011B2 8900                     		bt	@on_x
060011B4                          		
060011B4 6123                 		mov 	r2,r1
060011B6 6072                     		mov	@r7,r0
060011B8 4019                     		shlr8	r0
060011BA 600F                     		exts	r0,r0
060011BC 3017                     		cmp/gt	r1,r0
060011BE 8B00                     		bf	@on_x
060011C0 612B                     		neg 	r2,r1
060011C2 3017                      		cmp/gt	r1,r0
060011C4 8900                      		bt	@on_x
060011C6                           		
060011C6 6133                 		mov 	r3,r1
060011C8 5071                     		mov	@(4,r7),r0
060011CA 4019                     		shlr8	r0
060011CC 600F                     		exts	r0,r0
060011CE 3017                     		cmp/gt	r1,r0
060011D0 8B00                     		bf	@on_x
060011D2 613B                     		neg 	r3,r1
060011D4 3017                      		cmp/gt	r1,r0
060011D6 8900                      		bt	@on_x
060011D8                      
060011D8 A000                      		bra 	@not_x
060011DA 0009                      		nop
060011DC                      @on_x:
060011DC 7601                      		add 	#1,r6
060011DE                          
060011DE                      @not_x:
060011DE 770C                      		add	#$C,r7
060011E0 4510                      		dt 	r5
060011E2 8BE0                      		bf	@next2
060011E4                           		
060011E4 50D0                  		mov	@(face_type,r13),r0
060011E6 3603                      		cmp/ge	r0,r6
060011E8 8900                      		bt	@is_bad
060011EA                        
060011EA                      ; ----------------------------------
060011EA                      ; Face out check 2
060011EA                      ; ----------------------------------
060011EA                      
060011EA                      ;   		mov	r13,r7
060011EA                      ;   		add	#face_points,r7
060011EA                      ; 
060011EA                      ;   		mov	#-256,r1		; Z far  best: -256
060011EA                      ;   		mov	#256,r2		; Z near best: 1024
060011EA                      ;   		mov 	#-384,r3		; X/Y left best: -384
060011EA                      ;    		mov	#384,r4			; X/Y right best: 384
060011EA                      ;  		mov	@(face_type,r13),r5
060011EA                      ; @next3:
060011EA                      ; ;    		mov	@r7,r0
060011EA                      ; ;    		shlr8	r0
060011EA                      ; ;    		exts	r0,r0
060011EA                      ; ;     		cmp/ge	r3,r0
060011EA                      ; ;     		bf	@is_bad
060011EA                      ; ;    		cmp/ge	r4,r0
060011EA                      ; ;    		bt	@is_bad
060011EA                      ;    		
060011EA                      ; ;    		mov	@(4,r7),r0
060011EA                      ; ;    		shlr8	r0
060011EA                      ; ;    		exts	r0,r0
060011EA                      ; ;     		cmp/ge	r3,r0
060011EA                      ; ;     		bf	@is_bad
060011EA                      ; ;    		cmp/ge	r4,r0
060011EA                      ; ;    		bt	@is_bad
060011EA                      ;    		
060011EA                      ;     		mov	@(8,r7),r0
060011EA                      ;     		shlr8	r0
060011EA                      ;     		exts	r0,r0
060011EA                      ;    		cmp/ge	r1,r0
060011EA                      ;    		bf	@is_bad
060011EA                      ;   		cmp/gt	r2,r0
060011EA                      ;   		bt	@is_bad
060011EA                      ; 
060011EA                      ;      		add	#$C,r7
060011EA                      ;      		dt 	r5
060011EA                      ;      		bf	@next3
060011EA                           		
060011EA                      ; -----------------------------
060011EA                      ; Z Check Painters algorithm
060011EA                      ; -----------------------------
060011EA                      
060011EA 64D3                  		mov	r13,r4
060011EC 742C                  		add 	#face_points,r4
060011EE                      
060011EE                      @check_it:
060011EE 5142                           	mov 	@(8,r4),r1		;point 1
060011F0 4119                           	shlr8	r1
060011F2 611F                           	exts	r1,r1
060011F4 740C                           	add 	#$C,r4
060011F6                                	
060011F6 5042                          	mov	@(8,r4),r0		;point 2
060011F8 4019                           	shlr8	r0
060011FA 600F                           	exts	r0,r0
060011FC 740C                          	add 	#$C,r4
060011FE 3103                          	cmp/ge	r0,r1
06001200 8B00                          	bf	@same_1
06001202 6103                          	mov	r0,r1
06001204                      @same_1:
06001204 5042                          	mov	@(8,r4),r0		;point 3
06001206 4019                           	shlr8	r0
06001208 600F                           	exts	r0,r0
0600120A 740C                          	add 	#$C,r4
0600120C 3103                          	cmp/ge	r0,r1
0600120E 8B00                          	bf	@same_2
06001210 6103                          	mov	r0,r1
06001212                      @same_2:
06001212 50D0                 		mov	@(face_type,r13),r0
06001214 8803                 		cmp/eq	#3,r0
06001216 8900                 		bt	@same_3
06001218 5042                          	mov	@(8,r4),r0		;point 4
0600121A 4019                           	shlr8	r0
0600121C 600F                           	exts	r0,r0
0600121E 740C                          	add 	#$C,r4
06001220 3103                          	cmp/ge	r0,r1
06001222 8B00                          	bf	@same_3
06001224 6103                          	mov	r0,r1
06001226                      @same_3:
06001226 D200                    		mov 	#polygon_len,r2
06001228 6022                  		mov	@r2,r0
0600122A 4008                    		shll2	r0
0600122C 4000                    		shll	r0
0600122E D200                 		mov 	#polygon_z_list,r2
06001230 320C                  		add 	r0,r2
06001232 2212                 		mov 	r1,@r2
06001234 12D1                 		mov 	r13,@(4,r2)
06001236                      		
06001236                      ; ----------------------------------
06001236                      
06001236                      ; 		mov	@(face_type,r13),r5
06001236                      ; 		mov	r13,r3
06001236                      ; 		add 	#face_points,r3
06001236                      ; 		mov	r13,r4
06001236                      ; 		add 	#face_dest,r4
06001236                      ; @next_master:
06001236                      ;      		mov	@r3,r0
06001236                      ;      		shlr8	r0
06001236                      ;      		exts	r0,r0
06001236                      ; 		mov	#(SCREEN_WIDTH/2),r6
06001236                      ;              	add 	r6,r0
06001236                      ;         	mov	r0,@r4
06001236                      ; 		mov	@(4,r3),r0
06001236                      ;      		shlr8	r0
06001236                      ;      		exts	r0,r0
06001236                      ;          	mov	#(SCREEN_HEIGHT/2),r6
06001236                      ; 		add 	r6,r0
06001236                      ; 		mov	r0,@(4,r4)
06001236                      ;  
06001236                      ;    		add 	#$C,r3
06001236                      ;     		add 	#8,r4
06001236                      ;      		dt	r5
06001236                      ;      		bf	@next_master
06001236                      		
06001236                      ; ----------------------------------
06001236                      
06001236 D100                   		mov	#polygon_len,r1
06001238 6012                   		mov	@r1,r0
0600123A 7001                    		add 	#1,r0
0600123C 2102                    		mov	r0,@r1
0600123E D100                    		mov 	#MAX_POLYGONS,r1
06001240 3013                    		cmp/ge	r1,r0
06001242 8900                    		bt	@end
06001244 7D5C                  		add 	#sizeof_plygn,r13
06001246                       
06001246                      @is_bad:
06001246 AF18                      		bra	@next
06001248 0009                      		nop
0600124A                      
0600124A                      ; ----------------------------------
0600124A                      ; End
0600124A                      ; ----------------------------------
0600124A                      
0600124A                      @end:
0600124A 4F26                 		mov	@r15+,pr
0600124C 000B                 		rts
0600124E 0009                 		nop
06001250                      		align 4
06001250 0000 0000 0000    +  		lits
06001274                      
06001274                      ; -----------------------------
06001274                      ; Get perspective value from Z
06001274                      ; 
06001274                      ; r2 - Z
06001274                      ; -----------------------------
06001274                      
06001274                      calc_persp:
06001274 E100                 		mov 	#0,r1
06001276 4219                 		shlr8	r2
06001278 622F                 		exts	r2,r2
0600127A 6123                 		mov	r2,r1
0600127C D000                 		mov	#persp_table_max,r0
0600127E 4211                 		cmp/pz	r2
06001280 8900                 		bt	@calc
06001282 612B                 		neg	r2,r1
06001284 D000                 		mov	#persp_table_min,r0
06001286                      @calc:
06001286 4108                 		shll2	r1
06001288 021E                 		mov	@(r0,r1),r2
0600128A 000B                 		rts
0600128C 4218                 		shll8	r2
0600128E                      
0600128E                      ; -------------------------------
0600128E                      ; Model Set
0600128E                      ; -------------------------------
0600128E                      
0600128E                      Model_Set:
0600128E DE00                 		mov	#models_buffer,r14
06001290 E020                 		mov	#sizeof_model,r0
06001292 201E                 		mulu	r1,r0
06001294 001A                 		mov	macl,r0
06001296 3E0C                 		add 	r0,r14
06001298                      
06001298 1E20                 		mov	r2,@(model_addr,r14)
0600129A 000B                 		rts
0600129C 0009                 		nop
0600129E 0009 0009            		align 4
060012A4 0000 0000 0000    +  		lits
060012B0                      		
060012B0                      ; -------------------------------
060012B0                      ; Model Position
060012B0                      ; -------------------------------
060012B0                      
060012B0                      Model_Pos:
060012B0 DE00                 		mov	#models_buffer,r14
060012B2 E020                 		mov	#sizeof_model,r0
060012B4 201E                 		mulu	r1,r0
060012B6 001A                 		mov	macl,r0
060012B8 3E0C                 		add 	r0,r14
060012BA                      
060012BA 1E21                 		mov	r2,@(model_x,r14)
060012BC 1E32                 		mov	r3,@(model_y,r14)		
060012BE 1E43                 		mov	r4,@(model_z,r14)		
060012C0 000B                 		rts
060012C2 0009                 		nop
060012C4                      		align 4
060012C4 0000 0000            		lits
060012C8                      
060012C8                      ; -------------------------------
060012C8                      ; Model Set
060012C8                      ; -------------------------------
060012C8                      
060012C8                      Model_Rot:
060012C8 DE00                 		mov	#models_buffer,r14
060012CA E020                 		mov	#sizeof_model,r0
060012CC 201E                 		mulu	r1,r0
060012CE 001A                 		mov	macl,r0
060012D0 3E0C                 		add 	r0,r14
060012D2                      
060012D2 1E24                 		mov	r2,@(model_x_rot,r14)
060012D4 1E35                 		mov	r3,@(model_y_rot,r14)		
060012D6 1E46                 		mov	r4,@(model_z_rot,r14)		
060012D8 000B                 		rts
060012DA 0009                 		nop
060012DC                      		align 4
060012DC 0000 0000            		lits
060012E0                      		
060012E0                      ; ====================================================================
060012E0                      ; -------------------------------------------------
060012E0                      ; DATA
060012E0                      ; -------------------------------------------------
060012E0                      
060012E0                      ;
060012E0                      ; This table is "off by one" - to get 1/n you must fetch the (n-1)th entry.
060012E0                      ;
060012E0                      div_table
060012E0                      	incbin "system/hardware/mars/sh2/subs/data/divtable.bin"
060021E0                      	align 4
060021E0                      	
060021E0                      ; COS: sin_table $800
060021E0                      sin_table
060021E0                      	incbin "system/hardware/mars/sh2/subs/data/sinedata.bin",0,$800
060029E0                      cos_table:
060029E0                      	incbin "system/hardware/mars/sh2/subs/data/sinedata.bin",$800
060049E0                      	align 4
060049E0                      	
060049E0                      persp_table_max:
060049E0 0000 0E00             dc.l 3584
060049E4 0000 0F66             dc.l 3942
060049E8 0000 10CC             dc.l 4300
060049EC 0000 1233             dc.l 4659
060049F0 0000 1399             dc.l 5017
060049F4 0000 1500             dc.l 5376
060049F8 0000 1666             dc.l 5734
060049FC 0000 17CC             dc.l 6092
06004A00 0000 1933             dc.l 6451
06004A04 0000 1A99             dc.l 6809
06004A08 0000 1C00             dc.l 7168
06004A0C 0000 1D66             dc.l 7526
06004A10 0000 1ECC             dc.l 7884
06004A14 0000 2033             dc.l 8243
06004A18 0000 2199             dc.l 8601
06004A1C 0000 2300             dc.l 8960
06004A20 0000 2466             dc.l 9318
06004A24 0000 25CC             dc.l 9676
06004A28 0000 2733             dc.l 10035
06004A2C 0000 2899             dc.l 10393
06004A30 0000 2A00             dc.l 10752
06004A34 0000 2B66             dc.l 11110
06004A38 0000 2CCC             dc.l 11468
06004A3C 0000 2E33             dc.l 11827
06004A40 0000 2F99             dc.l 12185
06004A44 0000 3100             dc.l 12544
06004A48 0000 3266             dc.l 12902
06004A4C 0000 33CC             dc.l 13260
06004A50 0000 3533             dc.l 13619
06004A54 0000 3699             dc.l 13977
06004A58 0000 3800             dc.l 14336
06004A5C 0000 3966             dc.l 14694
06004A60 0000 3ACC             dc.l 15052
06004A64 0000 3C33             dc.l 15411
06004A68 0000 3D99             dc.l 15769
06004A6C 0000 3F00             dc.l 16128
06004A70 0000 4066             dc.l 16486
06004A74 0000 41CC             dc.l 16844
06004A78 0000 4333             dc.l 17203
06004A7C 0000 4499             dc.l 17561
06004A80 0000 45FF             dc.l 17919
06004A84 0000 4766             dc.l 18278
06004A88 0000 48CC             dc.l 18636
06004A8C 0000 4A33             dc.l 18995
06004A90 0000 4B99             dc.l 19353
06004A94 0000 4CFF             dc.l 19711
06004A98 0000 4E66             dc.l 20070
06004A9C 0000 4FCC             dc.l 20428
06004AA0 0000 5133             dc.l 20787
06004AA4 0000 5299             dc.l 21145
06004AA8 0000 53FF             dc.l 21503
06004AAC 0000 5566             dc.l 21862
06004AB0 0000 56CC             dc.l 22220
06004AB4 0000 5833             dc.l 22579
06004AB8 0000 5999             dc.l 22937
06004ABC 0000 5AFF             dc.l 23295
06004AC0 0000 5C66             dc.l 23654
06004AC4 0000 5DCC             dc.l 24012
06004AC8 0000 5F33             dc.l 24371
06004ACC 0000 6099             dc.l 24729
06004AD0 0000 61FF             dc.l 25087
06004AD4 0000 6366             dc.l 25446
06004AD8 0000 64CC             dc.l 25804
06004ADC 0000 6633             dc.l 26163
06004AE0 0000 6799             dc.l 26521
06004AE4 0000 68FF             dc.l 26879
06004AE8 0000 6A66             dc.l 27238
06004AEC 0000 6BCC             dc.l 27596
06004AF0 0000 6D33             dc.l 27955
06004AF4 0000 6E99             dc.l 28313
06004AF8 0000 6FFF             dc.l 28671
06004AFC 0000 7166             dc.l 29030
06004B00 0000 72CC             dc.l 29388
06004B04 0000 7433             dc.l 29747
06004B08 0000 7599             dc.l 30105
06004B0C 0000 76FF             dc.l 30463
06004B10 0000 7866             dc.l 30822
06004B14 0000 79CC             dc.l 31180
06004B18 0000 7B33             dc.l 31539
06004B1C 0000 7C99             dc.l 31897
06004B20 0000 7DFF             dc.l 32255
06004B24 0000 7F66             dc.l 32614
06004B28 0000 80CC             dc.l 32972
06004B2C 0000 8233             dc.l 33331
06004B30 0000 8399             dc.l 33689
06004B34 0000 84FF             dc.l 34047
06004B38 0000 8666             dc.l 34406
06004B3C 0000 87CC             dc.l 34764
06004B40 0000 8933             dc.l 35123
06004B44 0000 8A99             dc.l 35481
06004B48 0000 8BFF             dc.l 35839
06004B4C 0000 8D66             dc.l 36198
06004B50 0000 8ECC             dc.l 36556
06004B54 0000 9033             dc.l 36915
06004B58 0000 9199             dc.l 37273
06004B5C 0000 92FF             dc.l 37631
06004B60 0000 9466             dc.l 37990
06004B64 0000 95CC             dc.l 38348
06004B68 0000 9733             dc.l 38707
06004B6C 0000 9899             dc.l 39065
06004B70 0000 99FF             dc.l 39423
06004B74 0000 9B66             dc.l 39782
06004B78 0000 9CCC             dc.l 40140
06004B7C 0000 9E33             dc.l 40499
06004B80 0000 9F99             dc.l 40857
06004B84 0000 A0FF             dc.l 41215
06004B88 0000 A266             dc.l 41574
06004B8C 0000 A3CC             dc.l 41932
06004B90 0000 A533             dc.l 42291
06004B94 0000 A699             dc.l 42649
06004B98 0000 A7FF             dc.l 43007
06004B9C 0000 A966             dc.l 43366
06004BA0 0000 AACC             dc.l 43724
06004BA4 0000 AC33             dc.l 44083
06004BA8 0000 AD99             dc.l 44441
06004BAC 0000 AEFF             dc.l 44799
06004BB0 0000 B066             dc.l 45158
06004BB4 0000 B1CC             dc.l 45516
06004BB8 0000 B333             dc.l 45875
06004BBC 0000 B499             dc.l 46233
06004BC0 0000 B5FF             dc.l 46591
06004BC4 0000 B766             dc.l 46950
06004BC8 0000 B8CC             dc.l 47308
06004BCC 0000 BA33             dc.l 47667
06004BD0 0000 BB99             dc.l 48025
06004BD4 0000 BCFF             dc.l 48383
06004BD8 0000 BE66             dc.l 48742
06004BDC 0000 BFCC             dc.l 49100
06004BE0 0000 C133             dc.l 49459
06004BE4 0000 C299             dc.l 49817
06004BE8 0000 C3FF             dc.l 50175
06004BEC 0000 C566             dc.l 50534
06004BF0 0000 C6CC             dc.l 50892
06004BF4 0000 C833             dc.l 51251
06004BF8 0000 C999             dc.l 51609
06004BFC 0000 CAFF             dc.l 51967
06004C00 0000 CC66             dc.l 52326
06004C04 0000 CDCC             dc.l 52684
06004C08 0000 CF33             dc.l 53043
06004C0C 0000 D099             dc.l 53401
06004C10 0000 D1FF             dc.l 53759
06004C14 0000 D366             dc.l 54118
06004C18 0000 D4CC             dc.l 54476
06004C1C 0000 D633             dc.l 54835
06004C20 0000 D799             dc.l 55193
06004C24 0000 D8FF             dc.l 55551
06004C28 0000 DA66             dc.l 55910
06004C2C 0000 DBCC             dc.l 56268
06004C30 0000 DD33             dc.l 56627
06004C34 0000 DE99             dc.l 56985
06004C38 0000 DFFF             dc.l 57343
06004C3C 0000 E166             dc.l 57702
06004C40 0000 E2CC             dc.l 58060
06004C44 0000 E433             dc.l 58419
06004C48 0000 E599             dc.l 58777
06004C4C 0000 E6FF             dc.l 59135
06004C50 0000 E866             dc.l 59494
06004C54 0000 E9CC             dc.l 59852
06004C58 0000 EB33             dc.l 60211
06004C5C 0000 EC99             dc.l 60569
06004C60 0000 EDFF             dc.l 60927
06004C64 0000 EF66             dc.l 61286
06004C68 0000 F0CC             dc.l 61644
06004C6C 0000 F233             dc.l 62003
06004C70 0000 F399             dc.l 62361
06004C74 0000 F4FF             dc.l 62719
06004C78 0000 F666             dc.l 63078
06004C7C 0000 F7CC             dc.l 63436
06004C80 0000 F933             dc.l 63795
06004C84 0000 FA99             dc.l 64153
06004C88 0000 FBFF             dc.l 64511
06004C8C 0000 FD66             dc.l 64870
06004C90 0000 FECC             dc.l 65228
06004C94 0001 0033             dc.l 65587
06004C98 0001 0199             dc.l 65945
06004C9C 0001 02FF             dc.l 66303
06004CA0 0001 0466             dc.l 66662
06004CA4 0001 05CC             dc.l 67020
06004CA8 0001 0733             dc.l 67379
06004CAC 0001 0899             dc.l 67737
06004CB0 0001 0A00             dc.l 68096
06004CB4 0001 0B66             dc.l 68454
06004CB8 0001 0CCC             dc.l 68812
06004CBC 0001 0E33             dc.l 69171
06004CC0 0001 0F99             dc.l 69529
06004CC4 0001 1100             dc.l 69888
06004CC8 0001 1266             dc.l 70246
06004CCC 0001 13CC             dc.l 70604
06004CD0 0001 1533             dc.l 70963
06004CD4 0001 1699             dc.l 71321
06004CD8 0001 1800             dc.l 71680
06004CDC 0001 1966             dc.l 72038
06004CE0 0001 1ACC             dc.l 72396
06004CE4 0001 1C33             dc.l 72755
06004CE8 0001 1D99             dc.l 73113
06004CEC 0001 1F00             dc.l 73472
06004CF0 0001 2066             dc.l 73830
06004CF4 0001 21CC             dc.l 74188
06004CF8 0001 2333             dc.l 74547
06004CFC 0001 2499             dc.l 74905
06004D00 0001 2600             dc.l 75264
06004D04 0001 2766             dc.l 75622
06004D08 0001 28CC             dc.l 75980
06004D0C 0001 2A33             dc.l 76339
06004D10 0001 2B99             dc.l 76697
06004D14 0001 2D00             dc.l 77056
06004D18 0001 2E66             dc.l 77414
06004D1C 0001 2FCC             dc.l 77772
06004D20 0001 3133             dc.l 78131
06004D24 0001 3299             dc.l 78489
06004D28 0001 3400             dc.l 78848
06004D2C 0001 3566             dc.l 79206
06004D30 0001 36CC             dc.l 79564
06004D34 0001 3833             dc.l 79923
06004D38 0001 3999             dc.l 80281
06004D3C 0001 3B00             dc.l 80640
06004D40 0001 3C66             dc.l 80998
06004D44 0001 3DCC             dc.l 81356
06004D48 0001 3F33             dc.l 81715
06004D4C 0001 4099             dc.l 82073
06004D50 0001 4200             dc.l 82432
06004D54 0001 4366             dc.l 82790
06004D58 0001 44CC             dc.l 83148
06004D5C 0001 4633             dc.l 83507
06004D60 0001 4799             dc.l 83865
06004D64 0001 4900             dc.l 84224
06004D68 0001 4A66             dc.l 84582
06004D6C 0001 4BCC             dc.l 84940
06004D70 0001 4D33             dc.l 85299
06004D74 0001 4E99             dc.l 85657
06004D78 0001 5000             dc.l 86016
06004D7C 0001 5166             dc.l 86374
06004D80 0001 52CC             dc.l 86732
06004D84 0001 5433             dc.l 87091
06004D88 0001 5599             dc.l 87449
06004D8C 0001 5700             dc.l 87808
06004D90 0001 5866             dc.l 88166
06004D94 0001 59CC             dc.l 88524
06004D98 0001 5B33             dc.l 88883
06004D9C 0001 5C99             dc.l 89241
06004DA0 0001 5E00             dc.l 89600
06004DA4 0001 5F66             dc.l 89958
06004DA8 0001 60CC             dc.l 90316
06004DAC 0001 6233             dc.l 90675
06004DB0 0001 6399             dc.l 91033
06004DB4 0001 6500             dc.l 91392
06004DB8 0001 6666             dc.l 91750
06004DBC 0001 67CC             dc.l 92108
06004DC0 0001 6933             dc.l 92467
06004DC4 0001 6A99             dc.l 92825
06004DC8 0001 6C00             dc.l 93184
06004DCC 0001 6D66             dc.l 93542
06004DD0 0001 6ECC             dc.l 93900
06004DD4 0001 7033             dc.l 94259
06004DD8 0001 7199             dc.l 94617
06004DDC 0001 7300             dc.l 94976
06004DE0 0001 7466             dc.l 95334
06004DE4 0001 75CC             dc.l 95692
06004DE8 0001 7733             dc.l 96051
06004DEC 0001 7899             dc.l 96409
06004DF0 0001 7A00             dc.l 96768
06004DF4 0001 7B66             dc.l 97126
06004DF8 0001 7CCC             dc.l 97484
06004DFC 0001 7E33             dc.l 97843
06004E00 0001 7F99             dc.l 98201
06004E04 0001 8100             dc.l 98560
06004E08 0001 8266             dc.l 98918
06004E0C 0001 83CC             dc.l 99276
06004E10 0001 8533             dc.l 99635
06004E14 0001 8699             dc.l 99993
06004E18 0001 8800             dc.l 100352
06004E1C 0001 8966             dc.l 100710
06004E20 0001 8ACC             dc.l 101068
06004E24 0001 8C33             dc.l 101427
06004E28 0001 8D99             dc.l 101785
06004E2C 0001 8F00             dc.l 102144
06004E30 0001 9066             dc.l 102502
06004E34 0001 91CC             dc.l 102860
06004E38 0001 9333             dc.l 103219
06004E3C 0001 9499             dc.l 103577
06004E40 0001 9600             dc.l 103936
06004E44 0001 9766             dc.l 104294
06004E48 0001 98CC             dc.l 104652
06004E4C 0001 9A33             dc.l 105011
06004E50 0001 9B99             dc.l 105369
06004E54 0001 9D00             dc.l 105728
06004E58 0001 9E66             dc.l 106086
06004E5C 0001 9FCC             dc.l 106444
06004E60 0001 A133             dc.l 106803
06004E64 0001 A299             dc.l 107161
06004E68 0001 A400             dc.l 107520
06004E6C 0001 A566             dc.l 107878
06004E70 0001 A6CC             dc.l 108236
06004E74 0001 A833             dc.l 108595
06004E78 0001 A999             dc.l 108953
06004E7C 0001 AB00             dc.l 109312
06004E80 0001 AC66             dc.l 109670
06004E84 0001 ADCC             dc.l 110028
06004E88 0001 AF33             dc.l 110387
06004E8C 0001 B099             dc.l 110745
06004E90 0001 B200             dc.l 111104
06004E94 0001 B366             dc.l 111462
06004E98 0001 B4CC             dc.l 111820
06004E9C 0001 B633             dc.l 112179
06004EA0 0001 B799             dc.l 112537
06004EA4 0001 B900             dc.l 112896
06004EA8 0001 BA66             dc.l 113254
06004EAC 0001 BBCC             dc.l 113612
06004EB0 0001 BD33             dc.l 113971
06004EB4 0001 BE99             dc.l 114329
06004EB8 0001 C000             dc.l 114688
06004EBC 0001 C166             dc.l 115046
06004EC0 0001 C2CC             dc.l 115404
06004EC4 0001 C433             dc.l 115763
06004EC8 0001 C599             dc.l 116121
06004ECC 0001 C700             dc.l 116480
06004ED0 0001 C866             dc.l 116838
06004ED4 0001 C9CC             dc.l 117196
06004ED8 0001 CB33             dc.l 117555
06004EDC 0001 CC99             dc.l 117913
06004EE0 0001 CE00             dc.l 118272
06004EE4 0001 CF66             dc.l 118630
06004EE8 0001 D0CC             dc.l 118988
06004EEC 0001 D233             dc.l 119347
06004EF0 0001 D399             dc.l 119705
06004EF4 0001 D500             dc.l 120064
06004EF8 0001 D666             dc.l 120422
06004EFC 0001 D7CC             dc.l 120780
06004F00 0001 D933             dc.l 121139
06004F04 0001 DA99             dc.l 121497
06004F08 0001 DC00             dc.l 121856
06004F0C 0001 DD66             dc.l 122214
06004F10 0001 DECC             dc.l 122572
06004F14 0001 E033             dc.l 122931
06004F18 0001 E199             dc.l 123289
06004F1C 0001 E300             dc.l 123648
06004F20 0001 E466             dc.l 124006
06004F24 0001 E5CC             dc.l 124364
06004F28 0001 E733             dc.l 124723
06004F2C 0001 E899             dc.l 125081
06004F30 0001 EA00             dc.l 125440
06004F34 0001 EB66             dc.l 125798
06004F38 0001 ECCC             dc.l 126156
06004F3C 0001 EE33             dc.l 126515
06004F40 0001 EF99             dc.l 126873
06004F44 0001 F100             dc.l 127232
06004F48 0001 F266             dc.l 127590
06004F4C 0001 F3CC             dc.l 127948
06004F50 0001 F533             dc.l 128307
06004F54 0001 F699             dc.l 128665
06004F58 0001 F800             dc.l 129024
06004F5C 0001 F966             dc.l 129382
06004F60 0001 FACC             dc.l 129740
06004F64 0001 FC33             dc.l 130099
06004F68 0001 FD99             dc.l 130457
06004F6C 0001 FF00             dc.l 130816
06004F70 0002 0066             dc.l 131174
06004F74 0002 01CC             dc.l 131532
06004F78 0002 0333             dc.l 131891
06004F7C 0002 0499             dc.l 132249
06004F80 0002 0600             dc.l 132608
06004F84 0002 0766             dc.l 132966
06004F88 0002 08CC             dc.l 133324
06004F8C 0002 0A33             dc.l 133683
06004F90 0002 0B99             dc.l 134041
06004F94 0002 0D00             dc.l 134400
06004F98 0002 0E66             dc.l 134758
06004F9C 0002 0FCC             dc.l 135116
06004FA0 0002 1133             dc.l 135475
06004FA4 0002 1299             dc.l 135833
06004FA8 0002 1400             dc.l 136192
06004FAC 0002 1566             dc.l 136550
06004FB0 0002 16CC             dc.l 136908
06004FB4 0002 1833             dc.l 137267
06004FB8 0002 1999             dc.l 137625
06004FBC 0002 1B00             dc.l 137984
06004FC0 0002 1C66             dc.l 138342
06004FC4 0002 1DCC             dc.l 138700
06004FC8 0002 1F33             dc.l 139059
06004FCC 0002 2099             dc.l 139417
06004FD0 0002 2200             dc.l 139776
06004FD4 0002 2366             dc.l 140134
06004FD8 0002 24CC             dc.l 140492
06004FDC 0002 2633             dc.l 140851
06004FE0 0002 2799             dc.l 141209
06004FE4 0002 2900             dc.l 141568
06004FE8 0002 2A66             dc.l 141926
06004FEC 0002 2BCC             dc.l 142284
06004FF0 0002 2D33             dc.l 142643
06004FF4 0002 2E99             dc.l 143001
06004FF8 0002 3000             dc.l 143360
06004FFC 0002 3166             dc.l 143718
06005000 0002 32CC             dc.l 144076
06005004 0002 3433             dc.l 144435
06005008 0002 3599             dc.l 144793
0600500C 0002 3700             dc.l 145152
06005010 0002 3866             dc.l 145510
06005014 0002 39CC             dc.l 145868
06005018 0002 3B33             dc.l 146227
0600501C 0002 3C99             dc.l 146585
06005020 0002 3E00             dc.l 146944
06005024 0002 3F66             dc.l 147302
06005028 0002 40CC             dc.l 147660
0600502C 0002 4233             dc.l 148019
06005030 0002 4399             dc.l 148377
06005034 0002 4500             dc.l 148736
06005038 0002 4666             dc.l 149094
0600503C 0002 47CC             dc.l 149452
06005040 0002 4933             dc.l 149811
06005044 0002 4A99             dc.l 150169
06005048 0002 4C00             dc.l 150528
0600504C 0002 4D66             dc.l 150886
06005050 0002 4ECC             dc.l 151244
06005054 0002 5033             dc.l 151603
06005058 0002 5199             dc.l 151961
0600505C 0002 5300             dc.l 152320
06005060 0002 5466             dc.l 152678
06005064 0002 55CC             dc.l 153036
06005068 0002 5733             dc.l 153395
0600506C 0002 5899             dc.l 153753
06005070 0002 5A00             dc.l 154112
06005074 0002 5B66             dc.l 154470
06005078 0002 5CCC             dc.l 154828
0600507C 0002 5E33             dc.l 155187
06005080 0002 5F99             dc.l 155545
06005084 0002 6100             dc.l 155904
06005088 0002 6266             dc.l 156262
0600508C 0002 63CC             dc.l 156620
06005090 0002 6533             dc.l 156979
06005094 0002 6699             dc.l 157337
06005098 0002 6800             dc.l 157696
0600509C 0002 6966             dc.l 158054
060050A0 0002 6ACC             dc.l 158412
060050A4 0002 6C33             dc.l 158771
060050A8 0002 6D99             dc.l 159129
060050AC 0002 6F00             dc.l 159488
060050B0 0002 7066             dc.l 159846
060050B4 0002 71CC             dc.l 160204
060050B8 0002 7333             dc.l 160563
060050BC 0002 7499             dc.l 160921
060050C0 0002 7600             dc.l 161280
060050C4 0002 7766             dc.l 161638
060050C8 0002 78CC             dc.l 161996
060050CC 0002 7A33             dc.l 162355
060050D0 0002 7B99             dc.l 162713
060050D4 0002 7D00             dc.l 163072
060050D8 0002 7E66             dc.l 163430
060050DC 0002 7FCC             dc.l 163788
060050E0 0002 8133             dc.l 164147
060050E4 0002 8299             dc.l 164505
060050E8 0002 8400             dc.l 164864
060050EC 0002 8566             dc.l 165222
060050F0 0002 86CC             dc.l 165580
060050F4 0002 8833             dc.l 165939
060050F8 0002 8999             dc.l 166297
060050FC 0002 8B00             dc.l 166656
06005100 0002 8C66             dc.l 167014
06005104 0002 8DCC             dc.l 167372
06005108 0002 8F33             dc.l 167731
0600510C 0002 9099             dc.l 168089
06005110 0002 9200             dc.l 168448
06005114 0002 9366             dc.l 168806
06005118 0002 94CC             dc.l 169164
0600511C 0002 9633             dc.l 169523
06005120 0002 9799             dc.l 169881
06005124 0002 9900             dc.l 170240
06005128 0002 9A66             dc.l 170598
0600512C 0002 9BCC             dc.l 170956
06005130 0002 9D33             dc.l 171315
06005134 0002 9E99             dc.l 171673
06005138 0002 A000             dc.l 172032
0600513C 0002 A166             dc.l 172390
06005140 0002 A2CC             dc.l 172748
06005144 0002 A433             dc.l 173107
06005148 0002 A599             dc.l 173465
0600514C 0002 A700             dc.l 173824
06005150 0002 A866             dc.l 174182
06005154 0002 A9CC             dc.l 174540
06005158 0002 AB33             dc.l 174899
0600515C 0002 AC99             dc.l 175257
06005160 0002 AE00             dc.l 175616
06005164 0002 AF66             dc.l 175974
06005168 0002 B0CC             dc.l 176332
0600516C 0002 B233             dc.l 176691
06005170 0002 B399             dc.l 177049
06005174 0002 B500             dc.l 177408
06005178 0002 B666             dc.l 177766
0600517C 0002 B7CC             dc.l 178124
06005180 0002 B933             dc.l 178483
06005184 0002 BA99             dc.l 178841
06005188 0002 BC00             dc.l 179200
0600518C 0002 BD66             dc.l 179558
06005190 0002 BECC             dc.l 179916
06005194 0002 C033             dc.l 180275
06005198 0002 C199             dc.l 180633
0600519C 0002 C300             dc.l 180992
060051A0 0002 C466             dc.l 181350
060051A4 0002 C5CC             dc.l 181708
060051A8 0002 C733             dc.l 182067
060051AC 0002 C899             dc.l 182425
060051B0 0002 CA00             dc.l 182784
060051B4 0002 CB66             dc.l 183142
060051B8 0002 CCCC             dc.l 183500
060051BC 0002 CE33             dc.l 183859
060051C0 0002 CF99             dc.l 184217
060051C4 0002 D100             dc.l 184576
060051C8 0002 D266             dc.l 184934
060051CC 0002 D3CC             dc.l 185292
060051D0 0002 D533             dc.l 185651
060051D4 0002 D699             dc.l 186009
060051D8 0002 D800             dc.l 186368
060051DC 0002 D966             dc.l 186726
060051E0                      
060051E0                      
060051E0                      
060051E0                      
060051E0                      persp_table_min:
060051E0 0000 0E00             dc.l 3584
060051E4 0000 0CF6             dc.l 3318
060051E8 0000 0C11             dc.l 3089
060051EC 0000 0B4A             dc.l 2890
060051F0 0000 0A9B             dc.l 2715
060051F4 0000 0A00             dc.l 2560
060051F8 0000 0975             dc.l 2421
060051FC 0000 08F9             dc.l 2297
06005200 0000 0889             dc.l 2185
06005204 0000 0823             dc.l 2083
06005208 0000 07C7             dc.l 1991
0600520C 0000 0772             dc.l 1906
06005210 0000 0724             dc.l 1828
06005214 0000 06DC             dc.l 1756
06005218 0000 069A             dc.l 1690
0600521C 0000 065D             dc.l 1629
06005220 0000 0623             dc.l 1571
06005224 0000 05EE             dc.l 1518
06005228 0000 05BC             dc.l 1468
0600522C 0000 058E             dc.l 1422
06005230 0000 0562             dc.l 1378
06005234 0000 0539             dc.l 1337
06005238 0000 0512             dc.l 1298
0600523C 0000 04EE             dc.l 1262
06005240 0000 04CB             dc.l 1227
06005244 0000 04AA             dc.l 1194
06005248 0000 048B             dc.l 1163
0600524C 0000 046E             dc.l 1134
06005250 0000 0452             dc.l 1106
06005254 0000 0437             dc.l 1079
06005258 0000 041E             dc.l 1054
0600525C 0000 0405             dc.l 1029
06005260 0000 03EE             dc.l 1006
06005264 0000 03D8             dc.l 984
06005268 0000 03C3             dc.l 963
0600526C 0000 03AF             dc.l 943
06005270 0000 039B             dc.l 923
06005274 0000 0389             dc.l 905
06005278 0000 0377             dc.l 887
0600527C 0000 0365             dc.l 869
06005280 0000 0355             dc.l 853
06005284 0000 0345             dc.l 837
06005288 0000 0336             dc.l 822
0600528C 0000 0327             dc.l 807
06005290 0000 0318             dc.l 792
06005294 0000 030B             dc.l 779
06005298 0000 02FD             dc.l 765
0600529C 0000 02F0             dc.l 752
060052A0 0000 02E4             dc.l 740
060052A4 0000 02D8             dc.l 728
060052A8 0000 02CC             dc.l 716
060052AC 0000 02C1             dc.l 705
060052B0 0000 02B6             dc.l 694
060052B4 0000 02AC             dc.l 684
060052B8 0000 02A1             dc.l 673
060052BC 0000 0297             dc.l 663
060052C0 0000 028E             dc.l 654
060052C4 0000 0284             dc.l 644
060052C8 0000 027B             dc.l 635
060052CC 0000 0272             dc.l 626
060052D0 0000 0269             dc.l 617
060052D4 0000 0261             dc.l 609
060052D8 0000 0259             dc.l 601
060052DC 0000 0251             dc.l 593
060052E0 0000 0249             dc.l 585
060052E4 0000 0242             dc.l 578
060052E8 0000 023A             dc.l 570
060052EC 0000 0233             dc.l 563
060052F0 0000 022C             dc.l 556
060052F4 0000 0225             dc.l 549
060052F8 0000 021F             dc.l 543
060052FC 0000 0218             dc.l 536
06005300 0000 0212             dc.l 530
06005304 0000 020C             dc.l 524
06005308 0000 0205             dc.l 517
0600530C 0000 0200             dc.l 512
06005310 0000 01FA             dc.l 506
06005314 0000 01F4             dc.l 500
06005318 0000 01EF             dc.l 495
0600531C 0000 01E9             dc.l 489
06005320 0000 01E4             dc.l 484
06005324 0000 01DF             dc.l 479
06005328 0000 01DA             dc.l 474
0600532C 0000 01D5             dc.l 469
06005330 0000 01D0             dc.l 464
06005334 0000 01CB             dc.l 459
06005338 0000 01C6             dc.l 454
0600533C 0000 01C2             dc.l 450
06005340 0000 01BD             dc.l 445
06005344 0000 01B9             dc.l 441
06005348 0000 01B5             dc.l 437
0600534C 0000 01B0             dc.l 432
06005350 0000 01AC             dc.l 428
06005354 0000 01A8             dc.l 424
06005358 0000 01A4             dc.l 420
0600535C 0000 01A0             dc.l 416
06005360 0000 019C             dc.l 412
06005364 0000 0199             dc.l 409
06005368 0000 0195             dc.l 405
0600536C 0000 0191             dc.l 401
06005370 0000 018E             dc.l 398
06005374 0000 018A             dc.l 394
06005378 0000 0187             dc.l 391
0600537C 0000 0183             dc.l 387
06005380 0000 0180             dc.l 384
06005384 0000 017D             dc.l 381
06005388 0000 017A             dc.l 378
0600538C 0000 0176             dc.l 374
06005390 0000 0173             dc.l 371
06005394 0000 0170             dc.l 368
06005398 0000 016D             dc.l 365
0600539C 0000 016A             dc.l 362
060053A0 0000 0167             dc.l 359
060053A4 0000 0165             dc.l 357
060053A8 0000 0162             dc.l 354
060053AC 0000 015F             dc.l 351
060053B0 0000 015C             dc.l 348
060053B4 0000 0159             dc.l 345
060053B8 0000 0157             dc.l 343
060053BC 0000 0154             dc.l 340
060053C0 0000 0152             dc.l 338
060053C4 0000 014F             dc.l 335
060053C8 0000 014D             dc.l 333
060053CC 0000 014A             dc.l 330
060053D0 0000 0148             dc.l 328
060053D4 0000 0145             dc.l 325
060053D8 0000 0143             dc.l 323
060053DC 0000 0141             dc.l 321
060053E0 0000 013E             dc.l 318
060053E4 0000 013C             dc.l 316
060053E8 0000 013A             dc.l 314
060053EC 0000 0138             dc.l 312
060053F0 0000 0136             dc.l 310
060053F4 0000 0133             dc.l 307
060053F8 0000 0131             dc.l 305
060053FC 0000 012F             dc.l 303
06005400 0000 012D             dc.l 301
06005404 0000 012B             dc.l 299
06005408 0000 0129             dc.l 297
0600540C 0000 0127             dc.l 295
06005410 0000 0125             dc.l 293
06005414 0000 0123             dc.l 291
06005418 0000 0122             dc.l 290
0600541C 0000 0120             dc.l 288
06005420 0000 011E             dc.l 286
06005424 0000 011C             dc.l 284
06005428 0000 011A             dc.l 282
0600542C 0000 0118             dc.l 280
06005430 0000 0117             dc.l 279
06005434 0000 0115             dc.l 277
06005438 0000 0113             dc.l 275
0600543C 0000 0112             dc.l 274
06005440 0000 0110             dc.l 272
06005444 0000 010E             dc.l 270
06005448 0000 010D             dc.l 269
0600544C 0000 010B             dc.l 267
06005450 0000 0109             dc.l 265
06005454 0000 0108             dc.l 264
06005458 0000 0106             dc.l 262
0600545C 0000 0105             dc.l 261
06005460 0000 0103             dc.l 259
06005464 0000 0102             dc.l 258
06005468 0000 0100             dc.l 256
0600546C 0000 00FF             dc.l 255
06005470 0000 00FD             dc.l 253
06005474 0000 00FC             dc.l 252
06005478 0000 00FB             dc.l 251
0600547C 0000 00F9             dc.l 249
06005480 0000 00F8             dc.l 248
06005484 0000 00F6             dc.l 246
06005488 0000 00F5             dc.l 245
0600548C 0000 00F4             dc.l 244
06005490 0000 00F2             dc.l 242
06005494 0000 00F1             dc.l 241
06005498 0000 00F0             dc.l 240
0600549C 0000 00EE             dc.l 238
060054A0 0000 00ED             dc.l 237
060054A4 0000 00EC             dc.l 236
060054A8 0000 00EB             dc.l 235
060054AC 0000 00E9             dc.l 233
060054B0 0000 00E8             dc.l 232
060054B4 0000 00E7             dc.l 231
060054B8 0000 00E6             dc.l 230
060054BC 0000 00E5             dc.l 229
060054C0 0000 00E4             dc.l 228
060054C4 0000 00E2             dc.l 226
060054C8 0000 00E1             dc.l 225
060054CC 0000 00E0             dc.l 224
060054D0 0000 00DF             dc.l 223
060054D4 0000 00DE             dc.l 222
060054D8 0000 00DD             dc.l 221
060054DC 0000 00DC             dc.l 220
060054E0 0000 00DB             dc.l 219
060054E4 0000 00DA             dc.l 218
060054E8 0000 00D8             dc.l 216
060054EC 0000 00D7             dc.l 215
060054F0 0000 00D6             dc.l 214
060054F4 0000 00D5             dc.l 213
060054F8 0000 00D4             dc.l 212
060054FC 0000 00D3             dc.l 211
06005500 0000 00D2             dc.l 210
06005504 0000 00D1             dc.l 209
06005508 0000 00D0             dc.l 208
0600550C 0000 00CF             dc.l 207
06005510 0000 00CE             dc.l 206
06005514 0000 00CE             dc.l 206
06005518 0000 00CD             dc.l 205
0600551C 0000 00CC             dc.l 204
06005520 0000 00CB             dc.l 203
06005524 0000 00CA             dc.l 202
06005528 0000 00C9             dc.l 201
0600552C 0000 00C8             dc.l 200
06005530 0000 00C7             dc.l 199
06005534 0000 00C6             dc.l 198
06005538 0000 00C5             dc.l 197
0600553C 0000 00C4             dc.l 196
06005540 0000 00C4             dc.l 196
06005544 0000 00C3             dc.l 195
06005548 0000 00C2             dc.l 194
0600554C 0000 00C1             dc.l 193
06005550 0000 00C0             dc.l 192
06005554 0000 00BF             dc.l 191
06005558 0000 00BF             dc.l 191
0600555C 0000 00BE             dc.l 190
06005560 0000 00BD             dc.l 189
06005564 0000 00BC             dc.l 188
06005568 0000 00BB             dc.l 187
0600556C 0000 00BB             dc.l 187
06005570 0000 00BA             dc.l 186
06005574 0000 00B9             dc.l 185
06005578 0000 00B8             dc.l 184
0600557C 0000 00B8             dc.l 184
06005580 0000 00B7             dc.l 183
06005584 0000 00B6             dc.l 182
06005588 0000 00B5             dc.l 181
0600558C 0000 00B5             dc.l 181
06005590 0000 00B4             dc.l 180
06005594 0000 00B3             dc.l 179
06005598 0000 00B2             dc.l 178
0600559C 0000 00B2             dc.l 178
060055A0 0000 00B1             dc.l 177
060055A4 0000 00B0             dc.l 176
060055A8 0000 00B0             dc.l 176
060055AC 0000 00AF             dc.l 175
060055B0 0000 00AE             dc.l 174
060055B4 0000 00AE             dc.l 174
060055B8 0000 00AD             dc.l 173
060055BC 0000 00AC             dc.l 172
060055C0 0000 00AC             dc.l 172
060055C4 0000 00AB             dc.l 171
060055C8 0000 00AA             dc.l 170
060055CC 0000 00AA             dc.l 170
060055D0 0000 00A9             dc.l 169
060055D4 0000 00A8             dc.l 168
060055D8 0000 00A8             dc.l 168
060055DC 0000 00A7             dc.l 167
060055E0 0000 00A6             dc.l 166
060055E4 0000 00A6             dc.l 166
060055E8 0000 00A5             dc.l 165
060055EC 0000 00A5             dc.l 165
060055F0 0000 00A4             dc.l 164
060055F4 0000 00A3             dc.l 163
060055F8 0000 00A3             dc.l 163
060055FC 0000 00A2             dc.l 162
06005600 0000 00A2             dc.l 162
06005604 0000 00A1             dc.l 161
06005608 0000 00A0             dc.l 160
0600560C 0000 00A0             dc.l 160
06005610 0000 009F             dc.l 159
06005614 0000 009F             dc.l 159
06005618 0000 009E             dc.l 158
0600561C 0000 009E             dc.l 158
06005620 0000 009D             dc.l 157
06005624 0000 009C             dc.l 156
06005628 0000 009C             dc.l 156
0600562C 0000 009B             dc.l 155
06005630 0000 009B             dc.l 155
06005634 0000 009A             dc.l 154
06005638 0000 009A             dc.l 154
0600563C 0000 0099             dc.l 153
06005640 0000 0099             dc.l 153
06005644 0000 0098             dc.l 152
06005648 0000 0098             dc.l 152
0600564C 0000 0097             dc.l 151
06005650 0000 0097             dc.l 151
06005654 0000 0096             dc.l 150
06005658 0000 0096             dc.l 150
0600565C 0000 0095             dc.l 149
06005660 0000 0095             dc.l 149
06005664 0000 0094             dc.l 148
06005668 0000 0094             dc.l 148
0600566C 0000 0093             dc.l 147
06005670 0000 0093             dc.l 147
06005674 0000 0092             dc.l 146
06005678 0000 0092             dc.l 146
0600567C 0000 0091             dc.l 145
06005680 0000 0091             dc.l 145
06005684 0000 0090             dc.l 144
06005688 0000 0090             dc.l 144
0600568C 0000 008F             dc.l 143
06005690 0000 008F             dc.l 143
06005694 0000 008E             dc.l 142
06005698 0000 008E             dc.l 142
0600569C 0000 008E             dc.l 142
060056A0 0000 008D             dc.l 141
060056A4 0000 008D             dc.l 141
060056A8 0000 008C             dc.l 140
060056AC 0000 008C             dc.l 140
060056B0 0000 008B             dc.l 139
060056B4 0000 008B             dc.l 139
060056B8 0000 008A             dc.l 138
060056BC 0000 008A             dc.l 138
060056C0 0000 008A             dc.l 138
060056C4 0000 0089             dc.l 137
060056C8 0000 0089             dc.l 137
060056CC 0000 0088             dc.l 136
060056D0 0000 0088             dc.l 136
060056D4 0000 0088             dc.l 136
060056D8 0000 0087             dc.l 135
060056DC 0000 0087             dc.l 135
060056E0 0000 0086             dc.l 134
060056E4 0000 0086             dc.l 134
060056E8 0000 0085             dc.l 133
060056EC 0000 0085             dc.l 133
060056F0 0000 0085             dc.l 133
060056F4 0000 0084             dc.l 132
060056F8 0000 0084             dc.l 132
060056FC 0000 0084             dc.l 132
06005700 0000 0083             dc.l 131
06005704 0000 0083             dc.l 131
06005708 0000 0082             dc.l 130
0600570C 0000 0082             dc.l 130
06005710 0000 0082             dc.l 130
06005714 0000 0081             dc.l 129
06005718 0000 0081             dc.l 129
0600571C 0000 0080             dc.l 128
06005720 0000 0080             dc.l 128
06005724 0000 0080             dc.l 128
06005728 0000 007F             dc.l 127
0600572C 0000 007F             dc.l 127
06005730 0000 007F             dc.l 127
06005734 0000 007E             dc.l 126
06005738 0000 007E             dc.l 126
0600573C 0000 007E             dc.l 126
06005740 0000 007D             dc.l 125
06005744 0000 007D             dc.l 125
06005748 0000 007D             dc.l 125
0600574C 0000 007C             dc.l 124
06005750 0000 007C             dc.l 124
06005754 0000 007B             dc.l 123
06005758 0000 007B             dc.l 123
0600575C 0000 007B             dc.l 123
06005760 0000 007A             dc.l 122
06005764 0000 007A             dc.l 122
06005768 0000 007A             dc.l 122
0600576C 0000 0079             dc.l 121
06005770 0000 0079             dc.l 121
06005774 0000 0079             dc.l 121
06005778 0000 0078             dc.l 120
0600577C 0000 0078             dc.l 120
06005780 0000 0078             dc.l 120
06005784 0000 0077             dc.l 119
06005788 0000 0077             dc.l 119
0600578C 0000 0077             dc.l 119
06005790 0000 0077             dc.l 119
06005794 0000 0076             dc.l 118
06005798 0000 0076             dc.l 118
0600579C 0000 0076             dc.l 118
060057A0 0000 0075             dc.l 117
060057A4 0000 0075             dc.l 117
060057A8 0000 0075             dc.l 117
060057AC 0000 0074             dc.l 116
060057B0 0000 0074             dc.l 116
060057B4 0000 0074             dc.l 116
060057B8 0000 0073             dc.l 115
060057BC 0000 0073             dc.l 115
060057C0 0000 0073             dc.l 115
060057C4 0000 0073             dc.l 115
060057C8 0000 0072             dc.l 114
060057CC 0000 0072             dc.l 114
060057D0 0000 0072             dc.l 114
060057D4 0000 0071             dc.l 113
060057D8 0000 0071             dc.l 113
060057DC 0000 0071             dc.l 113
060057E0 0000 0071             dc.l 113
060057E4 0000 0070             dc.l 112
060057E8 0000 0070             dc.l 112
060057EC 0000 0070             dc.l 112
060057F0 0000 006F             dc.l 111
060057F4 0000 006F             dc.l 111
060057F8 0000 006F             dc.l 111
060057FC 0000 006F             dc.l 111
06005800 0000 006E             dc.l 110
06005804 0000 006E             dc.l 110
06005808 0000 006E             dc.l 110
0600580C 0000 006D             dc.l 109
06005810 0000 006D             dc.l 109
06005814 0000 006D             dc.l 109
06005818 0000 006D             dc.l 109
0600581C 0000 006C             dc.l 108
06005820 0000 006C             dc.l 108
06005824 0000 006C             dc.l 108
06005828 0000 006C             dc.l 108
0600582C 0000 006B             dc.l 107
06005830 0000 006B             dc.l 107
06005834 0000 006B             dc.l 107
06005838 0000 006B             dc.l 107
0600583C 0000 006A             dc.l 106
06005840 0000 006A             dc.l 106
06005844 0000 006A             dc.l 106
06005848 0000 006A             dc.l 106
0600584C 0000 0069             dc.l 105
06005850 0000 0069             dc.l 105
06005854 0000 0069             dc.l 105
06005858 0000 0069             dc.l 105
0600585C 0000 0068             dc.l 104
06005860 0000 0068             dc.l 104
06005864 0000 0068             dc.l 104
06005868 0000 0068             dc.l 104
0600586C 0000 0067             dc.l 103
06005870 0000 0067             dc.l 103
06005874 0000 0067             dc.l 103
06005878 0000 0067             dc.l 103
0600587C 0000 0066             dc.l 102
06005880 0000 0066             dc.l 102
06005884 0000 0066             dc.l 102
06005888 0000 0066             dc.l 102
0600588C 0000 0065             dc.l 101
06005890 0000 0065             dc.l 101
06005894 0000 0065             dc.l 101
06005898 0000 0065             dc.l 101
0600589C 0000 0065             dc.l 101
060058A0 0000 0064             dc.l 100
060058A4 0000 0064             dc.l 100
060058A8 0000 0064             dc.l 100
060058AC 0000 0064             dc.l 100
060058B0 0000 0063             dc.l 99
060058B4 0000 0063             dc.l 99
060058B8 0000 0063             dc.l 99
060058BC 0000 0063             dc.l 99
060058C0 0000 0063             dc.l 99
060058C4 0000 0062             dc.l 98
060058C8 0000 0062             dc.l 98
060058CC 0000 0062             dc.l 98
060058D0 0000 0062             dc.l 98
060058D4 0000 0061             dc.l 97
060058D8 0000 0061             dc.l 97
060058DC 0000 0061             dc.l 97
060058E0 0000 0061             dc.l 97
060058E4 0000 0061             dc.l 97
060058E8 0000 0060             dc.l 96
060058EC 0000 0060             dc.l 96
060058F0 0000 0060             dc.l 96
060058F4 0000 0060             dc.l 96
060058F8 0000 0060             dc.l 96
060058FC 0000 005F             dc.l 95
06005900 0000 005F             dc.l 95
06005904 0000 005F             dc.l 95
06005908 0000 005F             dc.l 95
0600590C 0000 005F             dc.l 95
06005910 0000 005E             dc.l 94
06005914 0000 005E             dc.l 94
06005918 0000 005E             dc.l 94
0600591C 0000 005E             dc.l 94
06005920 0000 005E             dc.l 94
06005924 0000 005D             dc.l 93
06005928 0000 005D             dc.l 93
0600592C 0000 005D             dc.l 93
06005930 0000 005D             dc.l 93
06005934 0000 005D             dc.l 93
06005938 0000 005C             dc.l 92
0600593C 0000 005C             dc.l 92
06005940 0000 005C             dc.l 92
06005944 0000 005C             dc.l 92
06005948 0000 005C             dc.l 92
0600594C 0000 005B             dc.l 91
06005950 0000 005B             dc.l 91
06005954 0000 005B             dc.l 91
06005958 0000 005B             dc.l 91
0600595C 0000 005B             dc.l 91
06005960 0000 005B             dc.l 91
06005964 0000 005A             dc.l 90
06005968 0000 005A             dc.l 90
0600596C 0000 005A             dc.l 90
06005970 0000 005A             dc.l 90
06005974 0000 005A             dc.l 90
06005978 0000 0059             dc.l 89
0600597C 0000 0059             dc.l 89
06005980 0000 0059             dc.l 89
06005984 0000 0059             dc.l 89
06005988 0000 0059             dc.l 89
0600598C 0000 0059             dc.l 89
06005990 0000 0058             dc.l 88
06005994 0000 0058             dc.l 88
06005998 0000 0058             dc.l 88
0600599C 0000 0058             dc.l 88
060059A0 0000 0058             dc.l 88
060059A4 0000 0057             dc.l 87
060059A8 0000 0057             dc.l 87
060059AC 0000 0057             dc.l 87
060059B0 0000 0057             dc.l 87
060059B4 0000 0057             dc.l 87
060059B8 0000 0057             dc.l 87
060059BC 0000 0056             dc.l 86
060059C0 0000 0056             dc.l 86
060059C4 0000 0056             dc.l 86
060059C8 0000 0056             dc.l 86
060059CC 0000 0056             dc.l 86
060059D0 0000 0056             dc.l 86
060059D4 0000 0055             dc.l 85
060059D8 0000 0055             dc.l 85
060059DC 0000 0055             dc.l 85
060059E0 0000 0055             dc.l 85
060059E4 0000 0055             dc.l 85
060059E8 0000 0055             dc.l 85
060059EC 0000 0054             dc.l 84
060059F0 0000 0054             dc.l 84
060059F4 0000 0054             dc.l 84
060059F8 0000 0054             dc.l 84
060059FC 0000 0054             dc.l 84
06005A00 0000 0054             dc.l 84
06005A04 0000 0054             dc.l 84
06005A08 0000 0053             dc.l 83
06005A0C 0000 0053             dc.l 83
06005A10 0000 0053             dc.l 83
06005A14 0000 0053             dc.l 83
06005A18 0000 0053             dc.l 83
06005A1C 0000 0053             dc.l 83
06005A20 0000 0052             dc.l 82
06005A24 0000 0052             dc.l 82
06005A28 0000 0052             dc.l 82
06005A2C 0000 0052             dc.l 82
06005A30 0000 0052             dc.l 82
06005A34 0000 0052             dc.l 82
06005A38 0000 0052             dc.l 82
06005A3C 0000 0051             dc.l 81
06005A40 0000 0051             dc.l 81
06005A44 0000 0051             dc.l 81
06005A48 0000 0051             dc.l 81
06005A4C 0000 0051             dc.l 81
06005A50 0000 0051             dc.l 81
06005A54 0000 0050             dc.l 80
06005A58 0000 0050             dc.l 80
06005A5C 0000 0050             dc.l 80
06005A60 0000 0050             dc.l 80
06005A64 0000 0050             dc.l 80
06005A68 0000 0050             dc.l 80
06005A6C 0000 0050             dc.l 80
06005A70 0000 004F             dc.l 79
06005A74 0000 004F             dc.l 79
06005A78 0000 004F             dc.l 79
06005A7C 0000 004F             dc.l 79
06005A80 0000 004F             dc.l 79
06005A84 0000 004F             dc.l 79
06005A88 0000 004F             dc.l 79
06005A8C 0000 004E             dc.l 78
06005A90 0000 004E             dc.l 78
06005A94 0000 004E             dc.l 78
06005A98 0000 004E             dc.l 78
06005A9C 0000 004E             dc.l 78
06005AA0 0000 004E             dc.l 78
06005AA4 0000 004E             dc.l 78
06005AA8 0000 004E             dc.l 78
06005AAC 0000 004D             dc.l 77
06005AB0 0000 004D             dc.l 77
06005AB4 0000 004D             dc.l 77
06005AB8 0000 004D             dc.l 77
06005ABC 0000 004D             dc.l 77
06005AC0 0000 004D             dc.l 77
06005AC4 0000 004D             dc.l 77
06005AC8 0000 004C             dc.l 76
06005ACC 0000 004C             dc.l 76
06005AD0 0000 004C             dc.l 76
06005AD4 0000 004C             dc.l 76
06005AD8 0000 004C             dc.l 76
06005ADC 0000 004C             dc.l 76
06005AE0 0000 004C             dc.l 76
06005AE4 0000 004C             dc.l 76
06005AE8 0000 004B             dc.l 75
06005AEC 0000 004B             dc.l 75
06005AF0 0000 004B             dc.l 75
06005AF4 0000 004B             dc.l 75
06005AF8 0000 004B             dc.l 75
06005AFC 0000 004B             dc.l 75
06005B00 0000 004B             dc.l 75
06005B04 0000 004B             dc.l 75
06005B08 0000 004A             dc.l 74
06005B0C 0000 004A             dc.l 74
06005B10 0000 004A             dc.l 74
06005B14 0000 004A             dc.l 74
06005B18 0000 004A             dc.l 74
06005B1C 0000 004A             dc.l 74
06005B20 0000 004A             dc.l 74
06005B24 0000 004A             dc.l 74
06005B28 0000 0049             dc.l 73
06005B2C 0000 0049             dc.l 73
06005B30 0000 0049             dc.l 73
06005B34 0000 0049             dc.l 73
06005B38 0000 0049             dc.l 73
06005B3C 0000 0049             dc.l 73
06005B40 0000 0049             dc.l 73
06005B44 0000 0049             dc.l 73
06005B48 0000 0048             dc.l 72
06005B4C 0000 0048             dc.l 72
06005B50 0000 0048             dc.l 72
06005B54 0000 0048             dc.l 72
06005B58 0000 0048             dc.l 72
06005B5C 0000 0048             dc.l 72
06005B60 0000 0048             dc.l 72
06005B64 0000 0048             dc.l 72
06005B68 0000 0048             dc.l 72
06005B6C 0000 0047             dc.l 71
06005B70 0000 0047             dc.l 71
06005B74 0000 0047             dc.l 71
06005B78 0000 0047             dc.l 71
06005B7C 0000 0047             dc.l 71
06005B80 0000 0047             dc.l 71
06005B84 0000 0047             dc.l 71
06005B88 0000 0047             dc.l 71
06005B8C 0000 0046             dc.l 70
06005B90 0000 0046             dc.l 70
06005B94 0000 0046             dc.l 70
06005B98 0000 0046             dc.l 70
06005B9C 0000 0046             dc.l 70
06005BA0 0000 0046             dc.l 70
06005BA4 0000 0046             dc.l 70
06005BA8 0000 0046             dc.l 70
06005BAC 0000 0046             dc.l 70
06005BB0 0000 0045             dc.l 69
06005BB4 0000 0045             dc.l 69
06005BB8 0000 0045             dc.l 69
06005BBC 0000 0045             dc.l 69
06005BC0 0000 0045             dc.l 69
06005BC4 0000 0045             dc.l 69
06005BC8 0000 0045             dc.l 69
06005BCC 0000 0045             dc.l 69
06005BD0 0000 0045             dc.l 69
06005BD4 0000 0045             dc.l 69
06005BD8 0000 0044             dc.l 68
06005BDC 0000 0044             dc.l 68
06005BE0 0000 0044             dc.l 68
06005BE4 0000 0044             dc.l 68
06005BE8 0000 0044             dc.l 68
06005BEC 0000 0044             dc.l 68
06005BF0 0000 0044             dc.l 68
06005BF4 0000 0044             dc.l 68
06005BF8 0000 0044             dc.l 68
06005BFC 0000 0043             dc.l 67
06005C00 0000 0043             dc.l 67
06005C04 0000 0043             dc.l 67
06005C08 0000 0043             dc.l 67
06005C0C 0000 0043             dc.l 67
06005C10 0000 0043             dc.l 67
06005C14 0000 0043             dc.l 67
06005C18 0000 0043             dc.l 67
06005C1C 0000 0043             dc.l 67
06005C20 0000 0043             dc.l 67
06005C24 0000 0042             dc.l 66
06005C28 0000 0042             dc.l 66
06005C2C 0000 0042             dc.l 66
06005C30 0000 0042             dc.l 66
06005C34 0000 0042             dc.l 66
06005C38 0000 0042             dc.l 66
06005C3C 0000 0042             dc.l 66
06005C40 0000 0042             dc.l 66
06005C44 0000 0042             dc.l 66
06005C48 0000 0042             dc.l 66
06005C4C 0000 0041             dc.l 65
06005C50 0000 0041             dc.l 65
06005C54 0000 0041             dc.l 65
06005C58 0000 0041             dc.l 65
06005C5C 0000 0041             dc.l 65
06005C60 0000 0041             dc.l 65
06005C64 0000 0041             dc.l 65
06005C68 0000 0041             dc.l 65
06005C6C 0000 0041             dc.l 65
06005C70 0000 0041             dc.l 65
06005C74 0000 0041             dc.l 65
06005C78 0000 0040             dc.l 64
06005C7C 0000 0040             dc.l 64
06005C80 0000 0040             dc.l 64
06005C84 0000 0040             dc.l 64
06005C88 0000 0040             dc.l 64
06005C8C 0000 0040             dc.l 64
06005C90 0000 0040             dc.l 64
06005C94 0000 0040             dc.l 64
06005C98 0000 0040             dc.l 64
06005C9C 0000 0040             dc.l 64
06005CA0 0000 0040             dc.l 64
06005CA4 0000 003F             dc.l 63
06005CA8 0000 003F             dc.l 63
06005CAC 0000 003F             dc.l 63
06005CB0 0000 003F             dc.l 63
06005CB4 0000 003F             dc.l 63
06005CB8 0000 003F             dc.l 63
06005CBC 0000 003F             dc.l 63
06005CC0 0000 003F             dc.l 63
06005CC4 0000 003F             dc.l 63
06005CC8 0000 003F             dc.l 63
06005CCC 0000 003F             dc.l 63
06005CD0 0000 003E             dc.l 62
06005CD4 0000 003E             dc.l 62
06005CD8 0000 003E             dc.l 62
06005CDC 0000 003E             dc.l 62
06005CE0 0000 003E             dc.l 62
06005CE4 0000 003E             dc.l 62
06005CE8 0000 003E             dc.l 62
06005CEC 0000 003E             dc.l 62
06005CF0 0000 003E             dc.l 62
06005CF4 0000 003E             dc.l 62
06005CF8 0000 003E             dc.l 62
06005CFC 0000 003D             dc.l 61
06005D00 0000 003D             dc.l 61
06005D04 0000 003D             dc.l 61
06005D08 0000 003D             dc.l 61
06005D0C 0000 003D             dc.l 61
06005D10 0000 003D             dc.l 61
06005D14 0000 003D             dc.l 61
06005D18 0000 003D             dc.l 61
06005D1C 0000 003D             dc.l 61
06005D20 0000 003D             dc.l 61
06005D24 0000 003D             dc.l 61
06005D28 0000 003D             dc.l 61
06005D2C 0000 003C             dc.l 60
06005D30 0000 003C             dc.l 60
06005D34 0000 003C             dc.l 60
06005D38 0000 003C             dc.l 60
06005D3C 0000 003C             dc.l 60
06005D40 0000 003C             dc.l 60
06005D44 0000 003C             dc.l 60
06005D48 0000 003C             dc.l 60
06005D4C 0000 003C             dc.l 60
06005D50 0000 003C             dc.l 60
06005D54 0000 003C             dc.l 60
06005D58 0000 003C             dc.l 60
06005D5C 0000 003B             dc.l 59
06005D60 0000 003B             dc.l 59
06005D64 0000 003B             dc.l 59
06005D68 0000 003B             dc.l 59
06005D6C 0000 003B             dc.l 59
06005D70 0000 003B             dc.l 59
06005D74 0000 003B             dc.l 59
06005D78 0000 003B             dc.l 59
06005D7C 0000 003B             dc.l 59
06005D80 0000 003B             dc.l 59
06005D84 0000 003B             dc.l 59
06005D88 0000 003B             dc.l 59
06005D8C 0000 003B             dc.l 59
06005D90 0000 003A             dc.l 58
06005D94 0000 003A             dc.l 58
06005D98 0000 003A             dc.l 58
06005D9C 0000 003A             dc.l 58
06005DA0 0000 003A             dc.l 58
06005DA4 0000 003A             dc.l 58
06005DA8 0000 003A             dc.l 58
06005DAC 0000 003A             dc.l 58
06005DB0 0000 003A             dc.l 58
06005DB4 0000 003A             dc.l 58
06005DB8 0000 003A             dc.l 58
06005DBC 0000 003A             dc.l 58
06005DC0 0000 003A             dc.l 58
06005DC4 0000 0039             dc.l 57
06005DC8 0000 0039             dc.l 57
06005DCC 0000 0039             dc.l 57
06005DD0 0000 0039             dc.l 57
06005DD4 0000 0039             dc.l 57
06005DD8 0000 0039             dc.l 57
06005DDC 0000 0039             dc.l 57
06005DE0 0000 0039             dc.l 57
06005DE4 0000 0039             dc.l 57
06005DE8 0000 0039             dc.l 57
06005DEC 0000 0039             dc.l 57
06005DF0 0000 0039             dc.l 57
06005DF4 0000 0039             dc.l 57
06005DF8 0000 0039             dc.l 57
06005DFC 0000 0038             dc.l 56
06005E00 0000 0038             dc.l 56
06005E04 0000 0038             dc.l 56
06005E08 0000 0038             dc.l 56
06005E0C 0000 0038             dc.l 56
06005E10 0000 0038             dc.l 56
06005E14 0000 0038             dc.l 56
06005E18 0000 0038             dc.l 56
06005E1C 0000 0038             dc.l 56
06005E20 0000 0038             dc.l 56
06005E24 0000 0038             dc.l 56
06005E28 0000 0038             dc.l 56
06005E2C 0000 0038             dc.l 56
06005E30 0000 0038             dc.l 56
06005E34 0000 0037             dc.l 55
06005E38 0000 0037             dc.l 55
06005E3C 0000 0037             dc.l 55
06005E40 0000 0037             dc.l 55
06005E44 0000 0037             dc.l 55
06005E48 0000 0037             dc.l 55
06005E4C 0000 0037             dc.l 55
06005E50 0000 0037             dc.l 55
06005E54 0000 0037             dc.l 55
06005E58 0000 0037             dc.l 55
06005E5C 0000 0037             dc.l 55
06005E60 0000 0037             dc.l 55
06005E64 0000 0037             dc.l 55
06005E68 0000 0037             dc.l 55
06005E6C 0000 0036             dc.l 54
06005E70 0000 0036             dc.l 54
06005E74 0000 0036             dc.l 54
06005E78 0000 0036             dc.l 54
06005E7C 0000 0036             dc.l 54
06005E80 0000 0036             dc.l 54
06005E84 0000 0036             dc.l 54
06005E88 0000 0036             dc.l 54
06005E8C 0000 0036             dc.l 54
06005E90 0000 0036             dc.l 54
06005E94 0000 0036             dc.l 54
06005E98 0000 0036             dc.l 54
06005E9C 0000 0036             dc.l 54
06005EA0 0000 0036             dc.l 54
06005EA4 0000 0036             dc.l 54
06005EA8 0000 0035             dc.l 53
06005EAC 0000 0035             dc.l 53
06005EB0 0000 0035             dc.l 53
06005EB4 0000 0035             dc.l 53
06005EB8 0000 0035             dc.l 53
06005EBC 0000 0035             dc.l 53
06005EC0 0000 0035             dc.l 53
06005EC4 0000 0035             dc.l 53
06005EC8 0000 0035             dc.l 53
06005ECC 0000 0035             dc.l 53
06005ED0 0000 0035             dc.l 53
06005ED4 0000 0035             dc.l 53
06005ED8 0000 0035             dc.l 53
06005EDC 0000 0035             dc.l 53
06005EE0 0000 0035             dc.l 53
06005EE4 0000 0035             dc.l 53
06005EE8 0000 0034             dc.l 52
06005EEC 0000 0034             dc.l 52
06005EF0 0000 0034             dc.l 52
06005EF4 0000 0034             dc.l 52
06005EF8 0000 0034             dc.l 52
06005EFC 0000 0034             dc.l 52
06005F00 0000 0034             dc.l 52
06005F04 0000 0034             dc.l 52
06005F08 0000 0034             dc.l 52
06005F0C 0000 0034             dc.l 52
06005F10 0000 0034             dc.l 52
06005F14 0000 0034             dc.l 52
06005F18 0000 0034             dc.l 52
06005F1C 0000 0034             dc.l 52
06005F20 0000 0034             dc.l 52
06005F24 0000 0034             dc.l 52
06005F28 0000 0033             dc.l 51
06005F2C 0000 0033             dc.l 51
06005F30 0000 0033             dc.l 51
06005F34 0000 0033             dc.l 51
06005F38 0000 0033             dc.l 51
06005F3C 0000 0033             dc.l 51
06005F40 0000 0033             dc.l 51
06005F44 0000 0033             dc.l 51
06005F48 0000 0033             dc.l 51
06005F4C 0000 0033             dc.l 51
06005F50 0000 0033             dc.l 51
06005F54 0000 0033             dc.l 51
06005F58 0000 0033             dc.l 51
06005F5C 0000 0033             dc.l 51
06005F60 0000 0033             dc.l 51
06005F64 0000 0033             dc.l 51
06005F68 0000 0033             dc.l 51
06005F6C 0000 0032             dc.l 50
06005F70 0000 0032             dc.l 50
06005F74 0000 0032             dc.l 50
06005F78 0000 0032             dc.l 50
06005F7C 0000 0032             dc.l 50
06005F80 0000 0032             dc.l 50
06005F84 0000 0032             dc.l 50
06005F88 0000 0032             dc.l 50
06005F8C 0000 0032             dc.l 50
06005F90 0000 0032             dc.l 50
06005F94 0000 0032             dc.l 50
06005F98 0000 0032             dc.l 50
06005F9C 0000 0032             dc.l 50
06005FA0 0000 0032             dc.l 50
06005FA4 0000 0032             dc.l 50
06005FA8 0000 0032             dc.l 50
06005FAC 0000 0032             dc.l 50
06005FB0 0000 0032             dc.l 50
06005FB4 0000 0031             dc.l 49
06005FB8 0000 0031             dc.l 49
06005FBC 0000 0031             dc.l 49
06005FC0 0000 0031             dc.l 49
06005FC4 0000 0031             dc.l 49
06005FC8 0000 0031             dc.l 49
06005FCC 0000 0031             dc.l 49
06005FD0 0000 0031             dc.l 49
06005FD4 0000 0031             dc.l 49
06005FD8 0000 0031             dc.l 49
06005FDC 0000 0031             dc.l 49
06005FE0 0000 0031             dc.l 49
06005FE4 0000 0031             dc.l 49
06005FE8 0000 0031             dc.l 49
06005FEC 0000 0031             dc.l 49
06005FF0 0000 0031             dc.l 49
06005FF4 0000 0031             dc.l 49
06005FF8 0000 0031             dc.l 49
06005FFC 0000 0030             dc.l 48
06006000 0000 0030             dc.l 48
06006004 0000 0030             dc.l 48
06006008 0000 0030             dc.l 48
0600600C 0000 0030             dc.l 48
06006010 0000 0030             dc.l 48
06006014 0000 0030             dc.l 48
06006018 0000 0030             dc.l 48
0600601C 0000 0030             dc.l 48
06006020 0000 0030             dc.l 48
06006024 0000 0030             dc.l 48
06006028 0000 0030             dc.l 48
0600602C 0000 0030             dc.l 48
06006030 0000 0030             dc.l 48
06006034 0000 0030             dc.l 48
06006038 0000 0030             dc.l 48
0600603C 0000 0030             dc.l 48
06006040 0000 0030             dc.l 48
06006044 0000 0030             dc.l 48
06006048 0000 002F             dc.l 47
0600604C 0000 002F             dc.l 47
06006050 0000 002F             dc.l 47
06006054 0000 002F             dc.l 47
06006058 0000 002F             dc.l 47
0600605C 0000 002F             dc.l 47
06006060 0000 002F             dc.l 47
06006064 0000 002F             dc.l 47
06006068 0000 002F             dc.l 47
0600606C 0000 002F             dc.l 47
06006070 0000 002F             dc.l 47
06006074 0000 002F             dc.l 47
06006078 0000 002F             dc.l 47
0600607C 0000 002F             dc.l 47
06006080 0000 002F             dc.l 47
06006084 0000 002F             dc.l 47
06006088 0000 002F             dc.l 47
0600608C 0000 002F             dc.l 47
06006090 0000 002F             dc.l 47
06006094 0000 002F             dc.l 47
06006098 0000 002E             dc.l 46
0600609C 0000 002E             dc.l 46
060060A0 0000 002E             dc.l 46
060060A4 0000 002E             dc.l 46
060060A8 0000 002E             dc.l 46
060060AC 0000 002E             dc.l 46
060060B0 0000 002E             dc.l 46
060060B4 0000 002E             dc.l 46
060060B8 0000 002E             dc.l 46
060060BC 0000 002E             dc.l 46
060060C0 0000 002E             dc.l 46
060060C4 0000 002E             dc.l 46
060060C8 0000 002E             dc.l 46
060060CC 0000 002E             dc.l 46
060060D0 0000 002E             dc.l 46
060060D4 0000 002E             dc.l 46
060060D8 0000 002E             dc.l 46
060060DC 0000 002E             dc.l 46
060060E0 0000 002E             dc.l 46
060060E4 0000 002E             dc.l 46
060060E8 0000 002E             dc.l 46
060060EC 0000 002D             dc.l 45
060060F0 0000 002D             dc.l 45
060060F4 0000 002D             dc.l 45
060060F8 0000 002D             dc.l 45
060060FC 0000 002D             dc.l 45
06006100 0000 002D             dc.l 45
06006104 0000 002D             dc.l 45
06006108 0000 002D             dc.l 45
0600610C 0000 002D             dc.l 45
06006110 0000 002D             dc.l 45
06006114 0000 002D             dc.l 45
06006118 0000 002D             dc.l 45
0600611C 0000 002D             dc.l 45
06006120 0000 002D             dc.l 45
06006124 0000 002D             dc.l 45
06006128 0000 002D             dc.l 45
0600612C 0000 002D             dc.l 45
06006130 0000 002D             dc.l 45
06006134 0000 002D             dc.l 45
06006138 0000 002D             dc.l 45
0600613C 0000 002D             dc.l 45
06006140 0000 002D             dc.l 45
06006144 0000 002C             dc.l 44
06006148 0000 002C             dc.l 44
0600614C 0000 002C             dc.l 44
06006150 0000 002C             dc.l 44
06006154 0000 002C             dc.l 44
06006158 0000 002C             dc.l 44
0600615C 0000 002C             dc.l 44
06006160 0000 002C             dc.l 44
06006164 0000 002C             dc.l 44
06006168 0000 002C             dc.l 44
0600616C 0000 002C             dc.l 44
06006170 0000 002C             dc.l 44
06006174 0000 002C             dc.l 44
06006178 0000 002C             dc.l 44
0600617C 0000 002C             dc.l 44
06006180 0000 002C             dc.l 44
06006184 0000 002C             dc.l 44
06006188 0000 002C             dc.l 44
0600618C 0000 002C             dc.l 44
06006190 0000 002C             dc.l 44
06006194 0000 002C             dc.l 44
06006198 0000 002C             dc.l 44
0600619C 0000 002B             dc.l 43
060061A0 0000 002B             dc.l 43
060061A4 0000 002B             dc.l 43
060061A8 0000 002B             dc.l 43
060061AC 0000 002B             dc.l 43
060061B0 0000 002B             dc.l 43
060061B4 0000 002B             dc.l 43
060061B8 0000 002B             dc.l 43
060061BC 0000 002B             dc.l 43
060061C0 0000 002B             dc.l 43
060061C4 0000 002B             dc.l 43
060061C8 0000 002B             dc.l 43
060061CC 0000 002B             dc.l 43
060061D0 0000 002B             dc.l 43
060061D4 0000 002B             dc.l 43
060061D8 0000 002B             dc.l 43
060061DC 0000 002B             dc.l 43
060061E0                      
060061E0                      
060061E0                      
060061E0                      		
060061E0                      ; =================================================================
060061E0                      ; ------------------------------------------------
060061E0                      ; irq
060061E0                      ; 
060061E0                      ; r0-r9 only
060061E0                      ; ------------------------------------------------
060061E0                      
060061E0                      master_irq:
060061E0 2F06                 		mov.l	r0,@-r15
060061E2 2F16                 		mov.l	r1,@-r15
060061E4 2F26                 		mov.l	r2,@-r15
060061E6 2F36                 		mov.l	r3,@-r15
060061E8 2F46                 		mov.l	r4,@-r15
060061EA 2F56                 		mov.l	r5,@-r15
060061EC 2F66                 		mov.l	r6,@-r15
060061EE 2F76                 		mov.l	r7,@-r15
060061F0 2F86                 		mov.l	r8,@-r15
060061F2 2F96                 		mov.l	r9,@-r15
060061F4 4F12                 		mov.l	macl,@-r15
060061F6 4F02                 		mov.l	mach,@-r15
060061F8                      		
060061F8 4F22                 		sts.l	pr,@-r15
060061FA                      	
060061FA 0002                 		stc	sr,r0
060061FC 4009                 		shlr2	r0
060061FE C93C                 		and	#$3C,r0
06006200 D100                 		mov.l	#@list,r1
06006202 301C                 		add	r1,r0
06006204 6102                 		mov.l	@r0,r1
06006206 410B                 		jsr	@r1
06006208 0009                 		nop
0600620A                      		
0600620A 4F26                 		lds.l	@r15+,pr
0600620C 4F06                 		mov.l	@r15+,mach
0600620E 4F16                 		mov.l	@r15+,macl
06006210 69F6                 		mov.l	@r15+,r9
06006212 68F6                 		mov.l	@r15+,r8
06006214 67F6                 		mov.l	@r15+,r7
06006216 66F6                 		mov.l	@r15+,r6
06006218 65F6                 		mov.l	@r15+,r5
0600621A 64F6                 		mov.l	@r15+,r4
0600621C 63F6                 		mov.l	@r15+,r3
0600621E 62F6                 		mov.l	@r15+,r2
06006220 61F6                 		mov.l	@r15+,r1
06006222 60F6                 		mov.l	@r15+,r0
06006224 002B                 		rte
06006226 0009                 		nop
06006228 0000 0000            		lits
0600622C                      
0600622C                      ; ------------------------------------------------
0600622C                      ; irq list
0600622C                      ; ------------------------------------------------
0600622C                      
0600622C                      		align	4
0600622C                      @list:
0600622C 0000 0000 0000    +  		dc.l @invalid_irq,@invalid_irq
06006234 0000 0000 0000    +  		dc.l @invalid_irq,@invalid_irq
0600623C 0000 0000 0000    +  		dc.l @invalid_irq,@invalid_irq
06006244 0000 0000 0000    +  		dc.l @pwm_irq,@pwm_irq
0600624C 0000 0000 0000    +  		dc.l @cmd_irq,@cmd_irq
06006254 0000 0000 0000    +  		dc.l @h_irq,@h_irq
0600625C 0000 0000 0000    +  		dc.l @v_irq,@v_irq
06006264 0000 0000 0000    +  		dc.l @vres_irq,@vres_irq
0600626C                      
0600626C                      ; =================================================================
0600626C                      ; ------------------------------------------------
0600626C                      ; Unused
0600626C                      ; ------------------------------------------------
0600626C                      
0600626C                      @invalid_irq:
0600626C 000B                 		rts
0600626E 0009                 		nop
06006270                      		cnop 0,4
06006270                      		lits
06006270                      	
06006270                      ; =================================================================
06006270                      ; ------------------------------------------------
06006270                      ; Master | PWM Interrupt
06006270                      ; ------------------------------------------------
06006270                      
06006270                      @pwm_irq:
06006270                      		
06006270                      ; ----------------------------------
06006270                      
06006270 E001                 		mov	#1,r0
06006272 C10E                 		mov.w	r0,@(pwmintclr,gbr)
06006274 0009                 		nop
06006276 0009                 		nop
06006278 0009                 		nop
0600627A                      		
0600627A 000B                 		rts
0600627C 0009                 		nop
0600627E 0000                 		cnop 0,4
06006280                      		lits
06006280                      
06006280                      ; =================================================================
06006280                      ; ------------------------------------------------
06006280                      ; Master | CMD Interrupt
06006280                      ; ------------------------------------------------
06006280                      
06006280                      @cmd_irq:
06006280                      
06006280                      ; ----------------------------------
06006280                      
06006280 C510                 		mov.w	@(comm0,gbr),r0
06006282 C9FF                 		and	#$FF,r0
06006284 8800                 		cmp/eq	#0,r0
06006286 8900                 		bt	@no_task
06006288                      		
06006288 4008                 		shll2	r0
0600628A D100                 		mov.l	#master_tasks,r1
0600628C 301C                 		add	r1,r0
0600628E 6102                 		mov.l	@r0,r1
06006290 4F22                 		mov	pr,@-r15
06006292 410B                 		jsr	@r1
06006294 0009                 		nop
06006296 4F26                 		mov	@r15+,pr
06006298                      		
06006298 C510                 		mov.w	@(comm0,gbr),r0
0600629A D100                 		mov 	#$FF00,r1
0600629C 2019                 		and	r1,r0
0600629E C110                 		mov.w	r0,@(comm0,gbr)
060062A0                      @no_task:
060062A0                      		
060062A0                      ; ----------------------------------
060062A0                      
060062A0 E001                 		mov	#1,r0
060062A2 C10D                 		mov.w	r0,@(cmdintclr,gbr)
060062A4 0009                 		nop
060062A6 0009                 		nop
060062A8 0009                 		nop
060062AA                      		
060062AA 000B                 		rts
060062AC 0009                 		nop
060062AE 0000                 		cnop 0,4
060062B0 0000 0000 0000    +  		lits
060062B8                      	
060062B8                      ; =================================================================
060062B8                      ; ------------------------------------------------
060062B8                      ; Master | VRES Interrupt
060062B8                      ; ------------------------------------------------
060062B8                      
060062B8                      @vres_irq:
060062B8                      
060062B8                      ; ----------------------------------
060062B8                      
060062B8 E001                 		mov	#1,r0
060062BA C10A                 		mov.w	r0,@(vresintclr,gbr)
060062BC 0009                 		nop
060062BE 0009                 		nop
060062C0 0009                 		nop
060062C2                      		
060062C2 000B                 		rts
060062C4 0009                 		nop
060062C6 0000                 		cnop 0,4
060062C8                      		lits
060062C8                      
060062C8                      ; =================================================================
060062C8                      ; ------------------------------------------------
060062C8                      ; Master | HBlank
060062C8                      ; ------------------------------------------------
060062C8                      
060062C8                      @h_irq:
060062C8                      
060062C8                      ; ----------------------------------
060062C8                      
060062C8 E001                 		mov	#1,r0
060062CA C10C                 		mov.w	r0,@(hintclr,gbr)
060062CC 0009                 		nop
060062CE 0009                 		nop
060062D0 0009                 		nop
060062D2                      		
060062D2 000B                 		rts
060062D4 0009                 		nop
060062D6 0000                 		cnop 0,4
060062D8                      		lits
060062D8                      
060062D8                      ; =================================================================
060062D8                      ; ------------------------------------------------
060062D8                      ; Master | VBlank
060062D8                      ; ------------------------------------------------
060062D8                      
060062D8                      @v_irq:
060062D8                      
060062D8                      ; ----------------------------------
060062D8                      
060062D8 E000                 		mov 	#0,r0
060062DA D100                 		mov 	#frame_wait,r1
060062DC 2102                 		mov	r0,@r1
060062DE D100                 		mov	#frame_count_m,r1
060062E0 6012                 		mov	@r1,r0
060062E2 7001                 		add 	#1,r0
060062E4 2102                 		mov	r0,@r1
060062E6                      		
060062E6 E001                 		mov	#1,r0
060062E8 C10B                 		mov.w	r0,@(vintclr,gbr)
060062EA 0009                 		nop
060062EC 0009                 		nop
060062EE 0009                 		nop
060062F0                      		
060062F0 000B                 		rts
060062F2 0009                 		nop
060062F4                      		cnop 0,4
060062F4 0000 0000 0000    +  		lits
060062FC                      
060062FC                      ; =================================================================
060062FC                      		
060062FC                      		objend
060062FC                      		inform 0,"MARS SH2 MASTER SIZE: %h",*-SH2_Master;,(SlaveEntry-CS3)
060062FC                      		cnop 0,(SlaveEntry-CS3)
06008000                      		
06008000                      ; =================================================================
06008000                      ; ------------------------------------------------
06008000                      ; Slave CPU
06008000                      ; ------------------------------------------------
06008000                      
06008000                      		obj SlaveEntry
06008000                      SH2_Slave:
06008000 0000 0000 0603    +  		dc.l @Entry,S_STACK		; Cold PC,SP
06008008 0000 0000 0603    +  		dc.l @Entry,S_STACK		; Manual PC,SP
06008010                      
06008010 0600 031E            		dc.l ErrorTrap			; Illegal instruction
06008014 0000 0000            		dc.l 0				; reserved
06008018 0600 031E            		dc.l ErrorTrap			; Invalid slot instruction
0600801C 2010 0400            		dc.l $20100400			; reserved
06008020 2010 0420            		dc.l $20100420			; reserved
06008024 0600 031E            		dc.l ErrorTrap			; CPU address error
06008028 0600 031E            		dc.l ErrorTrap			; DMA address error
0600802C 0600 031E            		dc.l ErrorTrap			; NMI vector
06008030 0600 031E            		dc.l ErrorTrap			; User break vector
06008034                      
06008034 0000 0000 0000    +  		dcb.l 19,0			; reserved
06008080                      
06008080 0600 031E 0600    +  		dcb.l 32,ErrorTrap		; Trap vectors
06008100                      
06008100 0000 0000             		dc.l slave_irq			; Level 1 IRQ
06008104 0000 0000            		dc.l slave_irq			; Level 2 & 3 IRQ's
06008108 0000 0000            		dc.l slave_irq			; Level 4 & 5 IRQ's
0600810C 0000 0000            		dc.l slave_irq			; PWM interupt
06008110 0000 0000            		dc.l slave_irq			; Command interupt
06008114 0000 0000            		dc.l slave_irq			; H Blank interupt
06008118 0000 0000            		dc.l slave_irq			; V Blank interupt
0600811C 0000 0000            		dc.l slave_irq			; Reset Button
06008120                      
06008120                      ; =================================================================
06008120                      ; ------------------------------------------------
06008120                      ; Slave entry
06008120                      ; ------------------------------------------------
06008120                      
06008120                      @Entry:
06008120 DE00                 		mov.l	#_sysreg,r14
06008122 4E1E                 		ldc	r14,gbr
06008124                      @wait_md:
06008124 C608                 		mov.l	@(comm0,gbr),r0
06008126 8800                 		cmp/eq	#0,r0
06008128 8BFC                 		bf	@wait_md
0600812A                      	
0600812A D000                 		mov.l	#"SLAV",r0
0600812C C20A                 		mov.l	r0,@(comm8,gbr)
0600812E                      
0600812E                      ; =================================================================
0600812E                      ; ------------------------------------------------
0600812E                      ; Hotstart
0600812E                      ; ------------------------------------------------
0600812E                      
0600812E DF00                 		mov.l	#S_STACK,r15
06008130 DE00                 		mov.l	#_sysreg,r14
06008132 4E1E                 		ldc	r14,gbr
06008134 E003                  		mov	#CMDIRQ_ON|PWMIRQ_ON,r0
06008136 C001                     		mov.b	r0,@(intmask,gbr)
06008138                          		
06008138                      ; ==================================================================
06008138                      ; ---------------------------------------------------
06008138                      ; Start
06008138                      ; ---------------------------------------------------
06008138                      
06008138                      slave_start:
06008138 E020                 		mov	#$20,r0
0600813A 400E                 		ldc	r0,sr
0600813C                      		
0600813C                      ; =================================================================
0600813C                      ; ---------------------------------------------------
0600813C                      ; Slave loop
0600813C                      ; ---------------------------------------------------
0600813C                      
0600813C                      slave_loop:
0600813C D000                 		mov	#Polygons_slave,r0
0600813E 400B                 		jsr	@r0
06008140 0009                 		nop
06008142                      		
06008142                      ; 		mov	#SomeVar,r1
06008142                      ; 		mov	@r1,r0
06008142                      ; 		cmp/eq	#1,r0
06008142                      ; 		bf	@wait
06008142                      ; 		mov	#0,r0
06008142                      		
06008142                      ;  		mov 	#Vsync,r0
06008142                      ;  		jsr	@r0
06008142                      ;  		nop
06008142 AFFB                 		bra	slave_loop
06008144 0009                 		nop
06008146                      	
06008146                      ; =================================================================
06008146                      ; ------------------------------------------------
06008146                      ; irq
06008146                      ; 
06008146                      ; r0-r9 only
06008146                      ; ------------------------------------------------
06008146                      
06008146                      slave_irq:
06008146 2F06                 		mov.l	r0,@-r15
06008148 2F16                 		mov.l	r1,@-r15
0600814A 2F26                 		mov.l	r2,@-r15
0600814C 2F36                 		mov.l	r3,@-r15
0600814E 2F46                 		mov.l	r4,@-r15
06008150 2F56                 		mov.l	r5,@-r15
06008152 2F66                 		mov.l	r6,@-r15
06008154 2F76                 		mov.l	r7,@-r15
06008156 2F86                 		mov.l	r8,@-r15
06008158 2F96                 		mov.l	r9,@-r15
0600815A 4F12                 		mov.l	macl,@-r15
0600815C 4F02                 		mov.l	mach,@-r15
0600815E 4F22                 		sts.l	pr,@-r15
06008160                      
06008160 0002                 		stc	sr,r0
06008162 4009                 		shlr2	r0
06008164 C93C                 		and	#$3C,r0
06008166 D100                 		mov.l	#@inttable,r1
06008168 301C                 		add	r1,r0
0600816A 6102                 		mov.l	@r0,r1
0600816C 410B                 		jsr	@r1
0600816E 0009                 		nop
06008170                      
06008170 4F26                 		lds.l	@r15+,pr
06008172 4F06                 		mov.l	@r15+,mach
06008174 4F16                 		mov.l	@r15+,macl
06008176 69F6                 		mov.l	@r15+,r9
06008178 68F6                 		mov.l	@r15+,r8
0600817A 67F6                 		mov.l	@r15+,r7
0600817C 66F6                 		mov.l	@r15+,r6
0600817E 65F6                 		mov.l	@r15+,r5
06008180 64F6                 		mov.l	@r15+,r4
06008182 63F6                 		mov.l	@r15+,r3
06008184 62F6                 		mov.l	@r15+,r2
06008186 61F6                 		mov.l	@r15+,r1
06008188 60F6                 		mov.l	@r15+,r0
0600818A                      	
0600818A 002B                 		rte
0600818C 0009                 		nop
06008190 0000 0000 0000    +  		lits
060081A4                      
060081A4                      ; ------------------------------------------------
060081A4                      ; irq list
060081A4                      ; ------------------------------------------------
060081A4                      
060081A4                      		align	4
060081A4                      @inttable:
060081A4 0000 0000 0000    +  		dc.l @invalid_irq,@invalid_irq
060081AC 0000 0000 0000    +  		dc.l @invalid_irq,@invalid_irq
060081B4 0000 0000 0000    +  		dc.l @invalid_irq,@invalid_irq
060081BC 0000 0000 0000    +  		dc.l @pwm_irq,@pwm_irq
060081C4 0000 0000 0000    +  		dc.l @cmd_irq,@cmd_irq
060081CC 0000 0000 0000    +  		dc.l @h_irq,@h_irq
060081D4 0000 0000 0000    +  		dc.l @v_irq,@v_irq
060081DC 0000 0000 0000    +  		dc.l @vres_irq,@vres_irq
060081E4                      
060081E4                      ; =================================================================
060081E4                      ; ------------------------------------------------
060081E4                      ; Unused
060081E4                      ; ------------------------------------------------
060081E4                      
060081E4                      @invalid_irq:
060081E4 000B                 		rts
060081E6 0009                 		nop
060081E8                      		cnop 0,4
060081E8                      		lits
060081E8                      
060081E8                      ; =================================================================
060081E8                      ; ------------------------------------------------
060081E8                      ; Slave | CMD Interrupt
060081E8                      ; ------------------------------------------------
060081E8                      
060081E8                      @cmd_irq:
060081E8                      
060081E8                      ; ----------------------------------
060081E8                      
060081E8 C511                 		mov.w	@(comm2,gbr),r0
060081EA C9FF                 		and	#$FF,r0
060081EC 8800                 		cmp/eq	#0,r0
060081EE 8900                 		bt	@no_task
060081F0 B000                 		bsr	@do_task
060081F2 0009                 		nop
060081F4                      @no_task:
060081F4                      		
060081F4                      ; ----------------------------------
060081F4                      
060081F4 E001                 		mov	#1,r0
060081F6 C10D                 		mov.w	r0,@(cmdintclr,gbr)
060081F8 0009                 		nop
060081FA 0009                 		nop
060081FC 0009                 		nop
060081FE                      		
060081FE 000B                 		rts
06008200 0009                 		nop
06008202 0000                 		cnop 0,4
06008204                      		lits
06008204                      		
06008204                      ; ----------------------------------
06008204                      ; Task list
06008204                      ; ----------------------------------
06008204                      
06008204                      @do_task:
06008204 000B                 		rts
06008206 0009                 		nop
06008208                      		align 4
06008208                      		lits
06008208                      		
06008208                      ; =================================================================
06008208                      ; ------------------------------------------------
06008208                      ; Slave | PWM Interrupt
06008208                      ; ------------------------------------------------
06008208                      
06008208                      @pwm_irq:
06008208 C60E                 		mov.l	@(monowidth,gbr),r0
0600820A 6103                 		mov 	r0,r1
0600820C 6010                 		mov.b	@r1,r0				;is pwm fifo full?
0600820E C880                 		tst	#$80,r0
06008210 8B00                 		bf	@exit
06008212                      
06008212 4F22                 		mov 	pr,@-r15
06008214 D000                 		mov	#Audio_Run,r0
06008216 400B                 		jsr	@r0
06008218 0009                 		nop
0600821A 4F26                 		mov 	@r15+,pr
0600821C                      @exit:
0600821C                      
0600821C                      ; ----------------------------------
0600821C                      
0600821C E001                 		mov	#1,r0
0600821E C10E                 		mov.w	r0,@(pwmintclr,gbr)
06008220 0009                 		nop
06008222 0009                 		nop
06008224 0009                 		nop
06008226                      		
06008226 000B                 		rts
06008228 0009                 		nop
0600822A 0000                 		cnop 0,4
0600822C 0000 0000            		lits
06008230                      		
06008230                      ; =================================================================
06008230                      ; ------------------------------------------------
06008230                      ; Slave | HBlank
06008230                      ; ------------------------------------------------
06008230                      
06008230                      @h_irq:
06008230                      
06008230                      ; ----------------------------------
06008230                      
06008230 E001                 		mov	#1,r0
06008232 C10C                 		mov.w	r0,@(hintclr,gbr)
06008234 0009                 		nop
06008236 0009                 		nop
06008238 0009                 		nop
0600823A                      		
0600823A 000B                 		rts
0600823C 0009                 		nop
0600823E 0000                 		cnop 0,4
06008240                      		lits
06008240                      	
06008240                      ; =================================================================
06008240                      ; ------------------------------------------------
06008240                      ; Slave | VBlank
06008240                      ; ------------------------------------------------
06008240                      
06008240                      @v_irq:
06008240                      
06008240                      
06008240                      		
06008240                      ; ----------------------------------
06008240                      
06008240 D100                 		mov	#frame_count_s,r1
06008242 6012                 		mov	@r1,r0
06008244 7001                 		add 	#1,r0
06008246 2102                 		mov	r0,@r1
06008248                      		
06008248 E001                 		mov	#1,r0
0600824A C10B                 		mov.w	r0,@(vintclr,gbr)
0600824C 0009                 		nop
0600824E 0009                 		nop
06008250 0009                 		nop
06008252                      		
06008252 000B                 		rts
06008254 0009                 		nop
06008256 0000                 		cnop 0,4
06008258 0000 0000            		lits
0600825C                      		
0600825C                      ; =================================================================
0600825C                      ; ------------------------------------------------
0600825C                      ; Slave | VRES Interrupt
0600825C                      ; ------------------------------------------------
0600825C                      
0600825C                      @vres_irq:
0600825C                      
0600825C                      ; ----------------------------------
0600825C                      
0600825C E001                 		mov	#1,r0
0600825E C10A                 		mov.w	r0,@(vresintclr,gbr)
06008260 0009                 		nop
06008262 0009                 		nop
06008264 0009                 		nop
06008266                      		
06008266 000B                 		rts
06008268 0009                 		nop
0600826A 0000                 		cnop 0,4
0600826C                      		lits
0600826C                      		
0600826C                      ; ====================================================================
0600826C                      
0600826C                      		objend
0600826C                      		inform 0,"MARS SH2 SLAVE SIZE: %h",*-SH2_Slave;,(Sh2_CodeEnd-CS3)
0600826C                       		
0600826C                      ; ====================================================================
0600826C                      		
0600826C                      ; 		cnop 0,$200
0600826C                       		inform 0,"MARS SH2 CODE ENDS AT: %h",*
