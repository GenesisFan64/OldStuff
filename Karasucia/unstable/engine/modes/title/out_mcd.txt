00000000                            ; ====================================================================
00000000                            ; --------------------------------------------
00000000                            ; Include
00000000                            ; --------------------------------------------
00000000                            
00000000                            		include	"system/macros.asm"
00000000                            ; ====================================================================
00000000                            ; -------------------------------------------------
00000000                            ; Macros
00000000                            ; -------------------------------------------------
00000000                            
00000000                            align		macro
00000000                            		cnop 0,\1
00000000                            		endm
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; Pick ROM section
00000000                            ; --------------------------------------------
00000000                            
00000000                            romSection	macro where
00000000                            CODE		=	*+$880000
00000000                            DATA		=	*+marsbank
00000000                            RAM		=	$FF0000
00000000                            WRAM		=	$200000
00000000                            ; ---------------------------
00000000                            		if MCD|MARS == True
00000000                            		obj \1
00000000                            		endif
00000000                            		
00000000                            		endm
00000000                            		
00000000                            ; ---------------------------
00000000                            
00000000                            romSectionEnd	macro
00000000                            		if MCD
00000000                            		objend
00000000                            		elseif MARS
00000000                            		objend
00000000                            		endif
00000000                            		
00000000                            		endm
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; Video
00000000                            ; --------------------------------------------
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; dmaTask
00000000                            ; --------------------------------------------
00000000                            
00000000                            dmaTask		macro
00000000                            FILL		=	$C0000000+1
00000000                            COPY		=	$C0000000+2
00000000                            		
00000000                            ; ---------------------------
00000000                            ; DMA FILL
00000000                            ; (FILL,byte,to,size)
00000000                            ; 
00000000                            ; USES d0
00000000                            ; ---------------------------
00000000                            		if \1=FILL
00000000                            		
00000000                            		move.w	#$8F01,(vdp_ctrl)
00000000                             		move.l	#$9400+(((\4)&$FF00)>>9)|(($9300+(((\4)&$FF)>>1))<<16),(vdp_ctrl)
00000000                            		move.w	#$9780,(vdp_ctrl)
00000000                            		move.l	#\3|$80,(vdp_ctrl)
00000000                            		move.w	#\2&$FFFF,(vdp_data)
00000000                            @wait1\@:
00000000                            		move.w	(vdp_ctrl),d0
00000000                            		btst	#1,d0
00000000                            		bne.s	@wait1\@
00000000                            		move.w	#$8F02,(vdp_ctrl)
00000000                            		
00000000                            ; ---------------------------
00000000                            ; DMA COPY
00000000                            ; (COPY,from,to,size)
00000000                            ; 
00000000                            ; USES d0
00000000                            ; ---------------------------
00000000                            		elseif \1=COPY
00000000                            		move.w	#$8F01,(vdp_ctrl)
00000000                             		move.l	#$9400+(((\4)&$FF00)>>9)|(($9300+(((\4)&$FF)>>1))<<16),(vdp_ctrl)
00000000                             		move.l	#$9600+(((\2>>1)&$FF00)>>8)|(($9500+((\2>>1)&$FF))<<16),(vdp_ctrl)
00000000                            		move.w	#$97C0,(vdp_ctrl)
00000000                            		move.l	#\3|$C0,(vdp_ctrl)
00000000                            		move.w	#\2&$FFFF,(vdp_data)
00000000                            @wait2\@:
00000000                            		move.w	(vdp_ctrl),d0
00000000                            		btst	#1,d0
00000000                            		bne.s	@wait2\@
00000000                            		move.w	#$8F02,(vdp_ctrl)
00000000                            		
00000000                            ; ---------------------------
00000000                            ; DMA ROM/RAM to VDP
00000000                            ; (from,to,size)
00000000                            ; ---------------------------
00000000                            		else
00000000                            		;\1 from | \2 to | \3 size
00000000                             		move.l	#$9400+(((\3)&$FF00)>>9)|(($9300+(((\3)&$FF)>>1))<<16),(vdp_ctrl)
00000000                             		move.l	#$9600+(((\1>>1)&$FF00)>>8)|(($9500+((\1>>1)&$FF))<<16),(vdp_ctrl)
00000000                            		move.w	#$9700+((((\1>>1)&$FF0000)>>16)&$7F),(vdp_ctrl)
00000000                            		
00000000                            ; 		move.l	#\2|$80,(vdp_ctrl)		;new attempt
00000000                            		move.w	#((\2&$FFFF))|$80,-(sp)
00000000                            		move.w	#(((\2)>>16)&$FFFF),-(sp)
00000000                            		move.w	(sp)+,(vdp_ctrl)
00000000                             		move.w	#$100,($A11100)
00000000                            @WaitZ80_\@:
00000000                             		btst	#0,($A11100)
00000000                              		bne.s	@WaitZ80_\@
00000000                            		move.w	(sp)+,(vdp_ctrl)
00000000                             		move.w	#0,($A11100).l
00000000                            		
00000000                            		endif
00000000                            		
00000000                            		endm
00000000                            		
00000000                            ; --------------------------------------------
00000000                            
00000000                            fade		macro
00000000                            in = 1
00000000                            out = 0
00000000                            		if \1=in
00000000                             		move.l	#$0101003F,(RAM_PalFadeSys)
00000000                            @wait_fade\@	tst.l	(RAM_PalFadeSys)
00000000                             		bne.s	@wait_fade\@
00000000                            		
00000000                            		elseif \1=out
00000000                            		
00000000                            		move.l	#$0201003F,(RAM_PalFadeSys)
00000000                            @wait_fade\@	tst.l	(RAM_PalFadeSys)
00000000                             		bne.s	@wait_fade\@
00000000                            		
00000000                            		endif
00000000                            		
00000000                            		endm
00000000                            		
00000000                            ; --------------------------------------------
00000000                            ; System
00000000                            ; --------------------------------------------
00000000                            
00000000                            z80		macro
00000000                            ON = 1
00000000                            OFF = 0
00000000                            		if \1=OFF
00000000                            		
00000000                             		move.w	#$100,($A11100).l
00000000                            @WaitZ80_\@:
00000000                             		btst	#0,($A11100).l
00000000                              		bne.s	@WaitZ80_\@
00000000                            		elseif \1=ON
00000000                            		
00000000                              		move.w	#0,($A11100).l
00000000                            		endif
00000000                            		
00000000                            		endm
00000000                            		
00000000                            		
00000000                            		include	"system/ram.asm"
00000000                            ; ====================================================================
00000000                            ; -------------------------------------------------
00000000                            ; RAM
00000000                            ; -------------------------------------------------
00000000                            
00000000                            ; ---------------------------
00000000                            ; Setup
00000000                            ; ---------------------------
00000000                            
00000000                                            rsset	$FFFFBC00
00000000 =FFFFBC00                  RAM_ModeBuffer	rs.b	$2000
00000000 =FFFFDC00                  RAM_Engine      rs.b	$200
00000000 =FFFFDE00                  RAM_System      rs.b	$80
00000000 =FFFFDE80                  RAM_Input	rs.b	$80
00000000 =FFFFDF00                  RAM_Video       rs.b	$1000
00000000 =FFFFEF00                  RAM_Audio       rs.b	$400
00000000 =FFFFF300                  endof_ram	rs.l	0
00000000                            ;      		inform  0,"RAM ends at: %h",endof_ram
00000000                            ;      		inform  0,"RAM ends at: %h",endof_ram
00000000                            		include	"engine/ram.asm"
00000000                            ; ====================================================================
00000000                            ; -------------------------------------------------
00000000                            ; RAM
00000000                            ; 
00000000                            ; Put your features here
00000000                            ; (players lives, keys, current level, map, etc.)
00000000                            ; -------------------------------------------------
00000000                            
00000000                                            rsset	RAM_Engine
00000000 =FFFFDC00                  RAM_P1_Lives	rs.w	1
00000000 =FFFFDC02                  RAM_P1_Coins	rs.w	1
00000000 =FFFFDC04                  RAM_P1_Hits	rs.w	1
00000000 =FFFFDC06                  RAM_CurrLevel	rs.w	1
00000000 =FFFFDC08                  sizeof_engine	rs.l	0
00000000                            ; 		inform 0,"engine ram: %h",(sizeof_engine-RAM_Engine)
00000000                            ; 		inform 0,"engine ram: %h",(sizeof_engine-RAM_Engine)
00000000                            		include	"system/hardware/map.asm"
00000000                            ; ====================================================================
00000000                            ; -------------------------------------------------
00000000                            ; Variables
00000000                            ; -------------------------------------------------
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; I/O
00000000                            ; --------------------------------------------
00000000                            
00000000 =00A10001                  port_ver	equ	$A10001
00000000 =00A14000                  port_tmss	equ	$A14000
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; VDP
00000000                            ; --------------------------------------------
00000000                            
00000000 =00C00000                  vdp_data	equ	$C00000
00000000 =00C00004                  vdp_ctrl	equ	$C00004
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; MD Audio
00000000                            ; --------------------------------------------
00000000                            
00000000 =00C00011                  sound_psg	equ	$C00011
00000000 =00A04000                  sound_ym_1	equ	$A04000
00000000 =00A04001                  sound_ym_2	equ	$A04001
00000000 =00A04002                  sound_ym_3	equ	$A04002
00000000 =00A04003                  sound_ym_4	equ	$A04003
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; MARS only
00000000                            ; --------------------------------------------
00000000                            
00000000 =00840000                  framebuffer	equ	$840000
00000000 =00860000                  overwrite	equ	$860000
00000000 =00880000                  marsipl		equ	$880000
00000000 =00900000                  marsbank	equ	$900000
00000000 =00A130EC                  mars_ID		equ	$a130ec		; MARS ID "MARS"
00000000                            
00000000 =00A15100                  marsreg		equ	$a15100
00000000 =00000000                  access		equ	$00		; byte		; MARS VDP access control
00000000 =00000001                  adapter		equ	$01		; byte		; MARS adapter control
00000000 =00000003                  intctl		equ	$03		; byte		; SH2 interrupt control
00000000 =00000005                  bankctl		equ	$05		; byte		; BANK conterol
00000000 =00000007                  dreqctl		equ	$07		; byte		; DREQ control
00000000 =00000008                  dreqsource	equ	$08		; long		; 68 to SH DREQ source address
00000000 =0000000C                  dreqdest	equ	$0c		; long		; 68 to SH DREQ destination address
00000000 =00000010                  dreqlength	equ	$10		; word		; 68 to SH DREQ length
00000000 =00000012                  dreqfifo	equ	$12		; word		; 68 to SH DREQ FIFO
00000000 =0000001B                  segatv		equ	$1b		; byte		; SEGA TV Reg.
00000000 =00000020                  comm0		equ	$20		; 		; Communcation Reg.
00000000 =00000022                  comm2		equ	$22		; 		; Communcation Reg.
00000000 =00000024                  comm4		equ	$24		; 		; Communcation Reg.
00000000 =00000026                  comm6		equ	$26		; 		; Communcation Reg.
00000000 =00000028                  comm8		equ	$28		; 		; Communcation Reg.
00000000 =00000029                  comm9		equ	$29		; 		; Communcation Reg.
00000000 =0000002A                  comm10		equ	$2a		; 		; Communcation Reg.
00000000 =0000002C                  comm12		equ	$2c		; 		; Communcation Reg.
00000000 =0000002E                  comm14		equ	$2e		; 		; Communcation Reg.
00000000                            
00000000 =00000080                  tvmode		equ	$80		; byte		; NTSC/PAL
00000000 =00000081                  bitmapmode	equ	$81		; byte		; BitMap Mode Reg.
00000000 =00000083                  shift		equ	$83		; byte		; Packed Pixel Dot Shift
00000000 =00000085                  filllength	equ	$85		; byte		; DRAM Fill Length
00000000 =00000086                  fillstart	equ	$86		; word		; DRAM Fill Start Address
00000000 =00000088                  filldata	equ	$88		; word		; DRAM Fill Data
00000000 =0000008A                  vdpsts		equ	$8a		; byte		; VDP status
00000000 =0000008B                  framectl	equ	$8b		; byte		; Frame Buffer Control
00000000                            
00000000 =00A15200                  palette		equ	$a15200		; 256 words	; Palette Data
00000000                            
00000000                            ; --------------------------------------------
00000000                            ; OTHER
00000000                            ; --------------------------------------------
00000000                            
00000000                            		include	"system/hardware/mcd/map.asm"
00000000                            ; =================================================================
00000000                            ; ----------------------------------------
00000000                            ; Shared vars
00000000                            ; ----------------------------------------
00000000                            
00000000                            ; -------------
00000000                            ; bits
00000000                            ; -------------
00000000                            
00000000 =00000002                  bitWRamMode	equ	2		;2M | 1M
00000000                            
00000000                            ; -------------
00000000                            ; Registers
00000000                            ; -------------
00000000                            
00000000 =00000002                  MemoryMode	equ	$02		;WORD
00000000 =0000000E                  CommMain	equ	$0E		;BYTE
00000000 =0000000F                  CommSub		equ	$0F		;BYTE
00000000 =00000010                  CommDataM	equ	$10		;Array (size: $E)
00000000 =00000020                  CommDataS	equ	$20		;Array (size: $E)
00000000                            
00000000                            ; =================================================================
00000000                            ; ----------------------------------------
00000000                            ; MAIN CPU ONLY
00000000                            ; ----------------------------------------
00000000                            
00000000 =FFFF6600                  RAM_CdShared	equ	$FFFF6600
00000000                            
00000000                            		rsset   RAM_CdShared
00000000 =FFFF6600                  RAM_Wait_Buff	rs.b	$40
00000000 =FFFF6640                  RAM_Wait_Code	rs.b	$180
00000000 =FFFF67C0                  RAM_GoToHint	rs.w	3		; Sega CD HBlank jump ( jmp (thisaddr).l )
00000000                            
00000000 =00006600                  sizeof_prg	equ	$6600
00000000                            
00000000                            ; =================================================================
00000000                            ; ----------------------------------------
00000000                            ; SUB CPU ONLY
00000000                            ; ----------------------------------------
00000000                            
00000000                            ; -------------
00000000                            ; PCM
00000000                            ; -------------
00000000                            
00000000 =00FF0000                  PCM		equ	$FF0000
00000000 =00000001                  ENV		equ	$01		; Envelope
00000000 =00000003                  PAN		equ	$03		; Panning (%RRRRLLLL, and negative)
00000000 =00000005                  FDL		equ	$05		; Sample rate $00xx
00000000 =00000007                  FDH		equ	$07		; Sample rate $xx00
00000000 =00000009                  LSL		equ	$09		; Loop address $xx00
00000000 =0000000B                  LSH		equ	$0B		; Loop address $00xx
00000000 =0000000D                  ST		equ	$0D		; Start address (only $x0, $x000)
00000000 =0000000F                  Ctrl		equ	$0F		; Control register ($80 - Bank select, $C0 - Channel select)
00000000 =00000011                  OnOff		equ	$11		; Channel On/Off (BITS: 1 - off, 0 - on)
00000000                            
00000000                            ; =================================================================
00000000                            ; =================================================================
00000000                            		
00000000                            ; ====================================================================
00000000                            ; -------------------------------------------------
00000000                            ; Level
00000000                            ; 
00000000                            ; MEGA CD ONLY
00000000                            ; -------------------------------------------------
00000000                            
00000000                            		obj $200000
00200000 23FC 0000 0000 FFFF FD0E       		move.l	#RAM_HintJumpTo,($FFFFFD0E)
0020000A 23FC 0000 0000 FFFF FD08       		move.l	#RAM_VintJumpTo,($FFFFFD08)
00200014 4EF9 0000 0000             		jmp	MD_Main
0020001A                            		
0020001A                            ; ====================================================================
0020001A                            ; -------------------------------------------------
0020001A                            ; Subs
0020001A                            ; -------------------------------------------------
0020001A                            
0020001A                            		include	"system/video.asm"
0020001A                            ; ====================================================================
0020001A                            ; VDP
0020001A                            ; ====================================================================
0020001A                            
0020001A                            ; -------------------------------------------------
0020001A                            ; Variables
0020001A                            ; -------------------------------------------------
0020001A                            
0020001A                            		rsreset
0020001A =00000000                  palFd_mode	rs.b 1
0020001A =00000001                  palFd_delay	rs.b 1
0020001A =00000002                  palFd_from	rs.b 1			;TODO: poner funcionar esto
0020001A =00000003                  palFd_num	rs.b 1
0020001A =00000004                  palFd_timer	rs.w 1
0020001A                            
0020001A                            		rsreset
0020001A =00000000                  sprite_free	rs.l 1
0020001A =00000004                  sprite_link	rs.w 1
0020001A =00000006                  sprite_used	rs.w 1
0020001A                            
0020001A                            ; ====================================================================
0020001A                            ; -------------------------------------------------
0020001A                            ; RAM
0020001A                            ; -------------------------------------------------
0020001A                            
0020001A                            		rsset RAM_Video
0020001A =FFFFDF00                  RAM_ScrlHor	rs.l 240
0020001A =FFFFE2C0                  RAM_ScrlVer	rs.l $20			; Normal
0020001A =FFFFE340                  RAM_Sprites	rs.l (80*2)			; Normal
0020001A =FFFFE5C0                  RAM_SprControl	rs.l 2				; Normal
0020001A =FFFFE5C8                  RAM_HSprites	rs.l (80*2)			; For HBlank
0020001A =FFFFE848                  RAM_HScrlVer	rs.l $20			; For HBlank
0020001A =FFFFE8C8                  RAM_HSprLast	rs.l 2				; For HBlank
0020001A =FFFFE8D0                  RAM_Palette	rs.w 64				; Normal
0020001A =FFFFE950                  RAM_HPalette	rs.w 64				; For HBlank
0020001A =FFFFE9D0                  RAM_PalFade	rs.w 64				; Normal
0020001A =FFFFEA50                  RAM_HPalFade	rs.w 64				; For HBlank
0020001A =FFFFEAD0                  RAM_PalFadeSys	rs.l 8*2
0020001A =FFFFEB10                  RAM_DMA_Buffer	rs.b $200
0020001A =FFFFED10                  RAM_VidRegs	rs.b 16				; Unused regs included (always zero) | WINDOW and DMA regs ignored, use them separately
0020001A                            
0020001A =FFFFED20                  sizeof_vid	rs.l 0
0020001A                            ;       		inform 0,"video ram: %h",(sizeof_vid-RAM_Video)
0020001A                            
0020001A                            ; ====================================================================
0020001A                            ; -------------------------------------------------
0020001A                            ; Subs
0020001A                            ; -------------------------------------------------
0020001A                            
0020001A                            ; -------------------------------------------------
0020001A                            ; Video control
0020001A                            ; -------------------------------------------------
0020001A                            
0020001A                            Video_init:
0020001A 41FA 0000                  		lea	reg_data(pc),a0
0020001E 43F9 FFFF ED10             		lea	(RAM_VidRegs),a1
00200024 303C 8000                  		move.w	#$8000,d0
00200028 7210                       		moveq	#17-1,d1
0020002A                            @reg_list:
0020002A 1018                       		move.b	(a0)+,d0
0020002C 12C0                       		move.b	d0,(a1)+
0020002E 33C0 00C0 0004             		move.w	d0,(vdp_ctrl)
00200034 0640 0100                  		add.w	#$100,d0
00200038 51C9 FFF0                  		dbf	d1,@reg_list
0020003C 23FC 9100 9200 00C0 0004   		move.l	#$91009200,(vdp_ctrl)	;WINDOW LEFT/TOP clear
00200046 23FC 9300 9400 00C0 0004   		move.l	#$93009400,(vdp_ctrl)	;DMA len low/high clear
00200050 23FC 9500 9600 00C0 0004   		move.l	#$95009600,(vdp_ctrl)	;DMA addr mid/low clear
0020005A 33FC 9700 00C0 0004        		move.w	#$9700,(vdp_ctrl)	;DMA addr high clear
00200062                              	
00200062                            ; --------------------------------------------
00200062                            ; Video_ClearAll
00200062                            ; --------------------------------------------
00200062                            
00200062                            Video_ClearAll:
00200062 23FC 9100 9200 00C0 0004   		move.l	#$91009200,(vdp_ctrl)
0020006C                            		
0020006C 6100                       		bsr.s	Video_ClrAllLyrs
0020006E 6100                       		bsr.s	Video_ClearScroll
00200070 6100 0000                  		bsr	Sprites_Clear
00200074 6000 0000                  		bra	Sprites_Reset
00200078                            		
00200078                            Video_ClearSprites:
00200078 6100 0000                  		bsr	Sprites_Clear
0020007C 6000 0000                  		bra	Sprites_Reset
00200080                            		
00200080                            ; --------------------------------------------
00200080                            ; Video_ClrAllLyrs
00200080                            ; --------------------------------------------
00200080                            
00200080                            Video_ClrAllLyrs:
00200080 203C 4000 0003             		move.l	#$40000003,d0
00200086 6100                       		bsr.s	Video_ClrLyr
00200088 203C 5000 0003             		move.l	#$50000003,d0
0020008E 6100                       		bsr.s	Video_ClrLyr
00200090 203C 6000 0003             		move.l	#$60000003,d0
00200096                            ; 		bsr.s	Video_ClrLyr
00200096                            ; 		rts
00200096                            		
00200096                            ; --------------------------------------------
00200096                            ; Video_ClrLyr
00200096                            ; 
00200096                            ; d0 | LONG - VDP VRAM Command for the layer
00200096                            ; --------------------------------------------
00200096                            
00200096                            Video_ClrLyr:
00200096 23C0 00C0 0004             		move.l	d0,(vdp_ctrl)
0020009C 303C 07FF                  		move.w	#$7FF,d0
002000A0                            @loop:
002000A0 33FC 0000 00C0 0000        		move.w	#0,(vdp_data)
002000A8 51C8 FFF6                  		dbf	d0,@loop
002000AC 4E75                       		rts
002000AE                            	
002000AE                            ; --------------------------------------------
002000AE                            ; Video_ClrHScrl
002000AE                            ; --------------------------------------------
002000AE                            
002000AE                            Video_ClrHScrl:
002000AE 41F9 FFFF DF00             		lea	(RAM_ScrlHor),a0
002000B4 303C 00DF                  		move.w	#224-1,d0
002000B8 6000                       		bra.s	VidClrScrl_loop
002000BA                            
002000BA                            ; --------------------------------------------
002000BA                            ; Video_ClearScroll
002000BA                            ; --------------------------------------------
002000BA                            
002000BA                            Video_ClearScroll:
002000BA 61F2                       		bsr.s	Video_ClrHScrl
002000BC 41F9 FFFF E2C0             		lea	(RAM_ScrlVer),a0
002000C2 6100                       		bsr.s	Video_ClrVScrl
002000C4 41F9 FFFF E848             		lea	(RAM_HScrlVer),a0
002000CA                            ; 		bsr.s	Video_ClrVScrl
002000CA                            		
002000CA                            ; --------------------------------------------
002000CA                            ; Video_ClrVScrl
002000CA                            ; 
002000CA                            ; a0 - Vertical scroll data
002000CA                            ; --------------------------------------------
002000CA                            
002000CA                            Video_ClrVScrl:
002000CA 303C 001F                  		move.w	#$20-1,d0
002000CE                            VidClrScrl_loop:
002000CE 4298                       		clr.l	(a0)+
002000D0 51C8 FFFC                  		dbf	d0,VidClrScrl_loop
002000D4 4E75                       		rts
002000D6                            		
002000D6                            ; ------------------------------------
002000D6                            
002000D6                            reg_data:
002000D6 04                         		dc.b %00000100			; $80: [4] HInt interrupt OFF | [2] ALWAYS ON | [1] HV Counter OFF
002000D7 74                         		dc.b %01110100			; $81: [6] Display ON, [5] Vint interrupt ON, [4] DMA OFF, [3] V28 (V30 PAL ONLY) | [2] ALWAYS ON
002000D8 30                         		dc.b ($C000>>10)&%00111000	; $82: Plane A pattern table
002000D9 34                         		dc.b ($D000>>10)&%00111110	; $83:  WINDOW pattern table (%00111110 H32, %00111100 H40)
002000DA 07                         		dc.b ($E000>>13)&%00000111	; $84: Plane B pattern table
002000DB 7C                         		dc.b ($F800>>09)&%01111111	; $85:  Sprite attribute table (%01111111 H32, %01111110 H40)
002000DC 00                         		dc.b 0				; $86: NOTHING
002000DD 00                         		dc.b 0				; $87: BG Color
002000DE 00                         		dc.b 0				; $88: NOTHING
002000DF 00                         		dc.b 0				; $89: NOTHING
002000E0 00                         		dc.b 0				; $8A: HInt counter
002000E1 03                         		dc.b %00000011			; $8B: [3] External interrupt OFF | [2] Vscrl: full | [1|0] Hscrl: full
002000E2 81                         		dc.b %10000001			; $8C: [7+0] H40 | [3] Prio/Shadow | [2|1] Interlace mode: None
002000E3 3F                         		dc.b ($FC00>>10)&%00111111	; $8D: Hscroll attribute table
002000E4 00                         		dc.b 0				; $8E: NOTHING
002000E5 02                         		dc.b 2				; $8F: VDP Auto increment
002000E6 01                         		dc.b %00000001			; $90: Plane size [5|4] Y size | [1|0] X size
002000E8 00                         		even
002000E8                            
002000E8                            ; -------------------------------------------------
002000E8                            ; Subs
002000E8                            ; -------------------------------------------------
002000E8                            
002000E8                            Video_Update:
002000E8 41F9 FFFF ED10             		lea	(RAM_VidRegs),a0
002000EE 303C 8000                  		move.w	#$8000,d0
002000F2 7210                       		moveq	#17-1,d1
002000F4                            @reg_list:
002000F4 1018                       		move.b	(a0)+,d0
002000F6 33C0 00C0 0004             		move.w	d0,(vdp_ctrl)
002000FC 0640 0100                  		add.w	#$100,d0
00200100 51C9 FFF2                  		dbf	d1,@reg_list
00200104 4E75                       		rts
00200106                            		
00200106                            ; --------------------------------------------
00200106                            ; VDP_SendData_W, VDP_SendData_L
00200106                            ;
00200106                            ; Input:
00200106                            ; a0 - Data address
00200106                            ;
00200106                            ; d0 | VRAM Address
00200106                            ; d1 | Data size
00200106                            ; --------------------------------------------
00200106                            
00200106                            VDP_SendData_W:
00200106 EB48                       		lsl.w	#5,d0
00200108 6100 0000                  		bsr	VDP_VramToCmd
0020010C 23C0 00C0 0004             		move.l	d0,(vdp_ctrl)
00200112                            @Loop:
00200112 33D8 00C0 0000             		move.w	(a0)+,(vdp_data).l
00200118 51C9 FFF8                  		dbf	d1,@Loop
0020011C 4E75                       		rts
0020011E                            
0020011E                            VDP_SendData_L:
0020011E EB48                       		lsl.w	#5,d0
00200120 6100 0000                  		bsr	VDP_VramToCmd
00200124 23C0 00C0 0004             		move.l	d0,(vdp_ctrl)
0020012A                            @Loop:
0020012A 23D8 00C0 0000             		move.l	(a0)+,(vdp_data).l
00200130 51C9 FFF8                  		dbf	d1,@Loop
00200134 4E75                       		rts
00200136                            		
00200136                            ; -----------------------
00200136                            ; Uses: d4 (LONG)
00200136                            ;       d5 (WORD)
00200136                            ; -----------------------
00200136                            
00200136                            vdpshv_findvdppos:
00200136                            		;Check plane to use
00200136 4845                       		swap	d5
00200138 3A00                       		move.w	d0,d5
0020013A 7000                       		moveq	#0,d0
0020013C 1039 FFFF ED12             		move.b	(RAM_VidRegs+2),d0
00200142 0805 0001                  		btst	#1,d5				;%10? (WD)
00200146 6700                       		beq.s	@FG
00200148 1039 FFFF ED13             		move.b	(RAM_VidRegs+3),d0
0020014E                            @FG:
0020014E E148                       		lsl.w	#8,d0
00200150 E548                       		lsl.w	#2,d0
00200152 0805 0000                  		btst	#0,d5				;%01? (BG)
00200156 6700                       		beq.s	@FGWD
00200158 7000                       		moveq	#0,d0
0020015A 1039 FFFF ED14             		move.b	(RAM_VidRegs+4),d0
00200160 E148                       		lsl.w	#8,d0
00200162 EB48                       		lsl.w	#5,d0
00200164                            @FGWD:
00200164                            
00200164                            		;Start Y
00200164 7800                       		moveq	#0,d4
00200166 3801                          		move.w	d1,d4
00200168 ED8C                         		lsl.l	#6,d4
0020016A 0805 0001                   		btst	#1,d5
0020016E 6700                        		beq.s	@def_fgbg
00200170                             		
00200170                             		;TODO: WD resolution check
00200170                            ;    		move.b	(RAM_VidRegs+vdpReg_HMode),d5
00200170                            ;    		and.w	#%10000001,d5
00200170                            ;    		bne.s	@Not128
00200170 E38C                           		lsl.l	#1,d4
00200172 6000                       		bra.s	@Not128
00200174                            @def_fgbg:
00200174 0839 0000 FFFF ED20         		btst	#0,(RAM_VidRegs+$10)
0020017C 6700                        		beq.s	@Not40
0020017E E38C                         		lsl.l	#1,d4
00200180                            @Not40:
00200180 0839 0001 FFFF ED20         		btst	#1,(RAM_VidRegs+$10)
00200188 6700                        		beq.s	@Not128
0020018A E38C                           		lsl.l	#1,d4
0020018C                            @Not128:
0020018C D044                        		add.w	d4,d0			;+Y Start
0020018E 4841                       		swap	d1
00200190 E349                       		lsl.w	#1,d1
00200192 D041                       		add.w	d1,d0			;+X Start
00200194 4845                       		swap	d5
00200196                            		
00200196                            ; --------------------------------------------
00200196                            ; VDP_VramToCmd
00200196                            ;
00200196                            ; Input:
00200196                            ; d0 | WORD - VRAM to convert
00200196                            ;
00200196                            ; Output:
00200196                            ; d0 | LONG - VDP Command (Write mode)
00200196                            ; --------------------------------------------
00200196                            
00200196                            VDP_VramToCmd:
00200196 0C40 4000                  		cmp.w	#$4000,d0
0020019A 6500                       		bcs.s	@NoBank
0020019C 4840                       		swap	d0
0020019E 303C 0001                  		move.w	#1,d0
002001A2 4840                       		swap	d0
002001A4 0C40 8000                  		cmp.w	#$8000,d0
002001A8 6500                       		bcs.s	@NoBank	
002001AA 4840                       		swap	d0
002001AC 303C 0002                  		move.w	#2,d0
002001B0 4840                       		swap	d0
002001B2 0C40 C000                  		cmp.w	#$C000,d0
002001B6 6500                       		bcs.s	@NoBank	
002001B8 4840                       		swap	d0
002001BA 303C 0003                  		move.w	#3,d0
002001BE 4840                       		swap	d0
002001C0                            @NoBank:
002001C0 0240 3FFF                    		and.w	#$3FFF,d0
002001C4 0040 4000                    		or.w	#$4000,d0
002001C8 4840                          		swap	d0
002001CA 4E75                       		rts
002001CC                            		
002001CC                            ; --------------------------------------------
002001CC                            ; VDP_LoadMaps
002001CC                            ; 
002001CC                            ; Input:
002001CC                            ; a0 - Pattern data
002001CC                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
002001CC                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
002001CC                            ; d2 | LONG - Value
002001CC                            ; d3 | WORD - VRAM (ASCII start)
002001CC                            ; d4 | WORD - Type:
002001CC                            ;             00 Byte | 01 Word | 02 Long HEX
002001CC                            ;             04 Byte | 05 Word | 06 Long DEC
002001CC                            ;             08 Byte | 09 Word | 0A Long DEC
002001CC                            ; Uses:
002001CC                            ; d4-d6
002001CC                            ; 
002001CC                            ; NOTE: clear d2 FIRST and then set the value
002001CC                            ; --------------------------------------------
002001CC                            
002001CC                            Video_PrintVal:
002001CC 0244 0007                  		and.w	#%111,d4
002001D0 0804 0002                  		btst	#2,d4
002001D4 6700                       		beq.s	@hexy
002001D6 6100 0000                  		bsr	HexToDec
002001DA                            @hexy:
002001DA 3A04                       		move.w	d4,d5
002001DC 6100 FF58                  		bsr	vdpshv_findvdppos
002001E0 3805                       		move.w	d5,d4
002001E2                            		
002001E2 23C0 00C0 0004             		move.l	d0,(vdp_ctrl)
002001E8 0643 0030                  		add.w	#"0",d3
002001EC                            		
002001EC 7A07                          		moveq	#(8)-1,d5
002001EE 0804 0001                  		btst	#1,d4
002001F2 6600                       		bne.s	@setit
002001F4 7A03                          		moveq	#(4)-1,d5
002001F6 4842                        		swap	d2
002001F8 1004                          		move.b	d4,d0
002001FA 0200 0003                     		and.b	#%11,d0
002001FE 4A00                        		tst.b	d0
00200200 6600                        		bne.s	@setit
00200202 7A01                        		moveq	#(2)-1,d5
00200204 E19A                        		rol.l	#8,d2
00200206                            @setit:
00200206 0804 0002                  		btst	#2,d4
0020020A 6700                       		beq.s	@next
0020020C 0804 0001                  		btst	#1,d4
00200210 6600                       		bne.s	@next
00200212 E89A                       		ror.l	#4,d2
00200214 0645 0001                  		add.w	#1,d5
00200218                            @next:
00200218 E99A                        		rol.l	#4,d2
0020021A 3002                       		move.w	d2,d0
0020021C 0240 000F                  		and.w	#$F,d0
00200220 0C40 000A                  		cmp.w	#$A,d0
00200224 6500                       		bcs.s	@lessF
00200226 0640 0007                  		add.w	#7,d0
0020022A                            @lessF
0020022A D043                       		add.w	d3,d0
0020022C 33C0 00C0 0000             		move.w	d0,(vdp_data)
00200232 51CD FFE4                  		dbf	d5,@next
00200236 4E75                       		rts
00200238                            
00200238                            ; --------------------------------------------
00200238                            ; Video_MakeMap
00200238                            ; 
00200238                            ; Input:
00200238                            ; a0 - Pattern data
00200238                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
00200238                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
00200238                            ; d2 | LONG - XSize (WORD) | YSize (WORD)
00200238                            ; d3 | WORD - VRAM
00200238                            ; 
00200238                            ; Uses:
00200238                            ; d4-d6
00200238                            ; --------------------------------------------
00200238                            
00200238                            Video_MakeMap:
00200238                            		;Check plane to use
00200238 6100 FEFC                  		bsr	vdpshv_findvdppos
0020023C                            		
0020023C 283C 0040 0000             		move.l	#$400000,d4
00200242 0839 0000 FFFF ED20        		btst	#0,(RAM_VidRegs+$10)
0020024A 6700                       		beq.s	@JpNot40
0020024C E38C                        		lsl.l	#1,d4
0020024E                            @JpNot40:
0020024E 0839 0001 FFFF ED20        		btst	#1,(RAM_VidRegs+$10)
00200256 6700                       		beq.s	@Y_Loop
00200258 E38C                            		lsl.l	#1,d4
0020025A                                 		
0020025A                            @Y_Loop:
0020025A 23C0 00C0 0004             		move.l	d0,(vdp_ctrl).l		; Set VDP location from d0
00200260 4842                       		swap	d2
00200262 3A02                       		move.w	d2,d5	  		; Move X-pos value to d3
00200264 4842                       		swap	d2
00200266                            @X_Loop:
00200266 3C18                       		move.w	(a0)+,d6
00200268 DC43                                       add.w	d3,d6
0020026A 4845                                       swap	d5
0020026C 1A39 FFFF ED1C                             move.b	(RAM_VidRegs+$C),d5
00200272 0245 0006                                  and.w	#%110,d5
00200276 6700                                       beq.s	@normal
00200278 E24E                                       lsr.w	#1,d6
0020027A                            @normal:
0020027A 4845                                       swap	d5
0020027C 33C6 00C0 0000                             move.w	d6,(vdp_data)		; Put data
00200282 51CD FFE2                  		dbf	d5,@X_Loop		; X-pos loop (from d1 to d3)
00200286 D084                       		add.l	d4,d0                   ; Next line
00200288 51CA FFD0                  		dbf	d2,@Y_Loop		; Y-pos loop
0020028C 4E75                       		rts
0020028E                            
0020028E                            ; --------------------------------------------
0020028E                            ; Video_PrintText
0020028E                            ;
0020028E                            ; Input:
0020028E                            ; a0 - String
0020028E                            ; d0 | WORD - Plane type: 0-FG 1-BG 2-Window
0020028E                            ; d1 | LONG - XPos  (WORD) | YPos  (WORD)
0020028E                            ; d2 | VRAM
0020028E                            ; 
0020028E                            ; Uses:
0020028E                            ; d3-d4
0020028E                            ; --------------------------------------------
0020028E                            
0020028E                            Video_PrintText:
0020028E                            		;Check plane to use
0020028E 3A00                       		move.w	d0,d5
00200290 6100 FEA4                  		bsr	vdpshv_findvdppos
00200294                            		
00200294 283C 0080 0000              		move.l	#$800000,d4
0020029A                            ;  		cmp.w	#2,d5
0020029A                            ;  		bne.s	@NotWindow
0020029A                            ; 		
0020029A                            ;  		tst.b	(RAM_VidRegs+$C)
0020029A                            ;  		beq.s	@Reset
0020029A                            ;  		lsl.l	#1,d4
0020029A                            ; 		bra.s	@Reset
0020029A                            ; 		
0020029A                            ; @NotWindow:
0020029A                            ; 		btst	#0,(RAM_VidRegs+$10)
0020029A                            ; 		beq.s	@JpNot40
0020029A                            ;  		lsl.l	#1,d4
0020029A                            ; @JpNot40:
0020029A                            ; 		btst	#1,(RAM_VidRegs+$10)
0020029A                            ; 		beq.s	@Space
0020029A                            ;      		lsl.l	#1,d4
0020029A                                 		
0020029A                            @Reset:
0020029A 23C0 00C0 0004             		move.l	d0,(vdp_ctrl).l
002002A0                            @Next:
002002A0 7600                       		moveq	#0,d3
002002A2 1618                       		move.b	(a0)+,d3
002002A4 0C03 000A                  		cmp.b	#$A,d3
002002A8 6700                       		beq.s	@Space
002002AA 4A03                       		tst.b	d3
002002AC 6600                       		bne.s	@Char
002002AE 4E75                       		rts
002002B0                            @Char:
002002B0 D642                       		add.w	d2,d3
002002B2 33C3 00C0 0000             		move.w	d3,(vdp_data).l
002002B8 60E6                       		bra.s	@Next
002002BA                            @Space:
002002BA D084                       		add.l	d4,d0                   ; Next line
002002BC 60DC                       		bra.s	@Reset
002002BE                            @Exit:
002002BE 4E75                       		rts
002002C0                            		
002002C0                            ; --------------------------------------------
002002C0                            ; Video_VSync
002002C0                            ; 
002002C0                            ; Wait VBlank
002002C0                            ; --------------------------------------------
002002C0                            
002002C0                            Video_VSync:
002002C0 08F9 0000 0000 0000         		bset	#0,(RAM_IntFlags)
002002C8                            @vint:
002002C8 0839 0000 0000 0000        		btst	#0,(RAM_IntFlags)
002002D0 66F6                       		bne.s	@vint
002002D2 4E75                       		rts
002002D4                            
002002D4                            ; ====================================================================
002002D4                            ; ---------------------------------------------
002002D4                            ; Palette fading
002002D4                            ; ---------------------------------------------
002002D4                            
002002D4                            PalFade_Upd:
002002D4 4DF9 FFFF EAD0             		lea	(RAM_PalFadeSys),a6
002002DA 7C03                        		moveq	#4-1,d6
002002DC                            @NextPalReq:
002002DC 4A96                       		tst.l	(a6)
002002DE 6700                       		beq.s	@Unused
002002E0 4BF9 FFFF E8D0              		lea	(RAM_Palette),a5
002002E6 49F9 FFFF E9D0              		lea	(RAM_PalFade),a4
002002EC 6100 0000                    		bsr	@Active
002002F0                            @Unused:
002002F0 DCFC 0008                   		adda	#8,a6
002002F4 51CE FFE6                   		dbf	d6,@NextPalReq
002002F8                            		
002002F8 7C03                       		moveq	#4-1,d6
002002FA                            @NextHPalReq:
002002FA 4A96                       		tst.l	(a6)
002002FC 6700                       		beq.s	@UnusedH
002002FE 4BF9 FFFF E950             		lea	(RAM_HPalette),a5
00200304 49F9 FFFF EA50             		lea	(RAM_HPalFade),a4
0020030A 6100 0000                  		bsr	@Active
0020030E                            @UnusedH:
0020030E DCFC 0008                  		adda	#8,a6
00200312 51CE FFE6                  		dbf	d6,@NextHPalReq
00200316 4E75                       		rts
00200318                            		
00200318                            ; ---------------------------------
00200318                            ; Active palette
00200318                            ; ---------------------------------
00200318                            
00200318                            @Active:
00200318 7000                       		moveq	#0,d0
0020031A 102E 0000                  		move.b	palFd_mode(a6),d0
0020031E D040                       		add.w	d0,d0
00200320 323B 0000                  		move.w	@list(pc,d0.w),d1
00200324 4EFB 1000                  		jmp	@list(pc,d1.w)
00200328                            		
00200328                            ; ---------------------------------
00200328                            
00200328                            @list:
00200328 0000                       		dc.w fadeSet_Return-@list
0020032A 0000                       		dc.w fadeSet_in_timer-@list
0020032C 0000                       		dc.w fadeSet_out_timer-@list
0020032E 0000                       		dc.w fadeSet_in_single-@list
00200330 0000                        		dc.w fadeSet_out_single-@list		
00200332                            		
00200332                            ; ---------------------------------
00200332                            
00200332                            fadeSet_in_timer:
00200332 046E 0001 0004             		sub.w	#1,palFd_timer(a6)
00200338 6A00 0000                  		bpl	fadeSet_Return
0020033C 7800                       		moveq	#0,d4
0020033E 7A00                       		moveq	#0,d5
00200340 182E 0001                  		move.b 	palFd_delay(a6),d4
00200344 3D44 0004                  		move.w	d4,palFd_timer(a6)
00200348 182E 0003                  		move.b 	palFd_num(a6),d4
0020034C                            @next_in:
0020034C 3015                        		move.w	(a5),d0
0020034E 3214                        		move.w	(a4),d1
00200350 3400                       		move.w	d0,d2
00200352 3601                        		move.w	d1,d3
00200354 0242 000E                   		and.w	#$00E,d2
00200358 0243 000E                   		and.w	#$00E,d3
0020035C B642                        		cmp.w	d2,d3
0020035E 6700                        		beq.s	@goodin_b
00200360 0642 0002                  		add.w	#2,d2
00200364                            @goodin_b:
00200364 0240 0EE0                  		and.w	#$EE0,d0
00200368 8042                        		or.w	d2,d0
0020036A                            		
0020036A 3400                       		move.w	d0,d2
0020036C 3601                        		move.w	d1,d3
0020036E 0242 00E0                   		and.w	#$0E0,d2
00200372 0243 00E0                   		and.w	#$0E0,d3
00200376 B642                        		cmp.w	d2,d3
00200378 6700                        		beq.s	@goodin_g
0020037A 0642 0020                  		add.w	#$020,d2
0020037E                            @goodin_g:
0020037E 0240 0E0E                  		and.w	#$E0E,d0
00200382 8042                        		or.w	d2,d0
00200384                              		
00200384 3400                       		move.w	d0,d2
00200386 3601                        		move.w	d1,d3
00200388 0242 0E00                   		and.w	#$E00,d2
0020038C 0243 0E00                   		and.w	#$E00,d3
00200390 B642                        		cmp.w	d2,d3
00200392 6700                        		beq.s	@goodin_r
00200394 0642 0200                  		add.w	#$200,d2
00200398                            @goodin_r:
00200398 0240 00EE                  		and.w	#$0EE,d0
0020039C 8042                        		or.w	d2,d0
0020039E                             		
0020039E 3AC0                        		move.w	d0,(a5)+
002003A0 B05C                        		cmp.w	(a4)+,d0
002003A2 6600                        		bne.s	@nonz_fdin
002003A4 0645 0001                   		add.w	#1,d5
002003A8                            @nonz_fdin:
002003A8 51CC FFA2                  		dbf	d4,@next_in
002003AC                            		
002003AC 0445 0001                  		sub.w	#1,d5
002003B0 BA2E 0003                  		cmp.b	palFd_num(a6),d5
002003B4 6600                       		bne.s	fadeSet_Return
002003B6 4296                       		clr.l	(a6)
002003B8                            fadeSet_Return:
002003B8 4E75                       		rts
002003BA                            		
002003BA                            ; ---------------------------------
002003BA                            
002003BA                            fadeSet_out_timer:
002003BA 046E 0001 0004             		sub.w	#1,palFd_timer(a6)
002003C0 6AF6                       		bpl.s	fadeSet_Return
002003C2 7400                       		moveq	#0,d2
002003C4 7600                       		moveq	#0,d3
002003C6 142E 0001                  		move.b 	palFd_delay(a6),d2
002003CA 3D42 0004                  		move.w	d2,palFd_timer(a6)
002003CE 142E 0003                  		move.b 	palFd_num(a6),d2
002003D2                            @setcol:
002003D2 3015                       		move.w	(a5),d0
002003D4 3200                       		move.w	d0,d1
002003D6 0241 000E                  		and.w	#$00E,d1
002003DA 6700                       		beq.s	@good_b
002003DC 0441 0002                  		sub.w	#2,d1
002003E0                            @good_b:
002003E0 0240 0EE0                  		and.w	#$EE0,d0
002003E4 8041                       		or.w	d1,d0
002003E6                            		
002003E6 3200                       		move.w	d0,d1
002003E8 0241 00E0                  		and.w	#$0E0,d1
002003EC 6700                       		beq.s	@good_g
002003EE 0441 0020                  		sub.w	#$020,d1
002003F2                            @good_g:
002003F2 0240 0E0E                  		and.w	#$E0E,d0
002003F6 8041                       		or.w	d1,d0
002003F8 3200                       		move.w	d0,d1
002003FA 0241 0E00                  		and.w	#$E00,d1
002003FE 6700                       		beq.s	@good_r
00200400 0441 0200                  		sub.w	#$200,d1
00200404                            @good_r:
00200404 0240 00EE                  		and.w	#$0EE,d0
00200408 8041                       		or.w	d1,d0
0020040A 3AC0                       		move.w	d0,(a5)+
0020040C 4A40                       		tst.w	d0
0020040E 6600                       		bne.s	@nonzero
00200410 0643 0001                  		add.w	#1,d3
00200414                            @nonzero:
00200414 51CA FFBC                  		dbf	d2,@setcol
00200418                            		
00200418 0443 0001                  		sub.w	#1,d3
0020041C B62E 0003                  		cmp.b	palFd_num(a6),d3
00200420 6696                       		bne.s	fadeSet_Return
00200422 4296                       		clr.l	(a6)
00200424 4E75                       		rts
00200426                            		
00200426                            ; ---------------------------------
00200426                            ; fadeSet_in_single
00200426                            ; 
00200426                            ; palFd_delay:
00200426                            ; RGBTTTTT - RGB increment bits
00200426                            ;            TTTTT timer
00200426                            ; ---------------------------------
00200426                            
00200426                            fadeSet_in_single:
00200426 046E 0001 0004             		sub.w	#1,palFd_timer(a6)
0020042C 6A00 FF8A                  		bpl	fadeSet_Return
00200430                            
00200430 7A00                       		moveq	#0,d5
00200432 1A2E 0002                  		move.b	palFd_from(a6),d5
00200436 E34D                       		lsl.w	#1,d5
00200438 DAC5                       		adda	d5,a5
0020043A 162E 0001                  		move.b 	palFd_delay(a6),d3
0020043E 0243 00E0                  		and.w	#$E0,d3
00200442 3D7C 0002 0004             		move.w	#2,palFd_timer(a6)
00200448                            		
00200448 7800                       		moveq	#0,d4
0020044A 182E 0003                  		move.b 	palFd_num(a6),d4
0020044E                            @next_in:
0020044E 3015                        		move.w	(a5),d0
00200450 3400                       		move.w	d0,d2
00200452 0242 000E                   		and.w	#$00E,d2
00200456 0803 0005                  		btst	#5,d3
0020045A 6700                       		beq.s	@goodin_b
0020045C 0C42 000E                   		cmp.w	#$00E,d2
00200460 6C00                        		bge.s	@goodin_b
00200462 0642 0002                  		add.w	#2,d2
00200466                            @goodin_b:
00200466 0240 0EE0                  		and.w	#$EE0,d0
0020046A 8042                        		or.w	d2,d0
0020046C                            
0020046C 3400                       		move.w	d0,d2
0020046E 0242 00E0                   		and.w	#$0E0,d2
00200472 0803 0006                  		btst	#6,d3
00200476 6700                       		beq.s	@goodin_g
00200478 0C42 00E0                   		cmp.w	#$0E0,d2
0020047C 6C00                        		bge.s	@goodin_g
0020047E 0642 0020                  		add.w	#$020,d2
00200482                            @goodin_g:
00200482 0240 0E0E                  		and.w	#$E0E,d0
00200486 8042                        		or.w	d2,d0
00200488                            
00200488 3400                       		move.w	d0,d2
0020048A 0242 0E00                   		and.w	#$E00,d2
0020048E 0803 0007                  		btst	#7,d3
00200492 6700                       		beq.s	@goodin_r
00200494 0C42 0E00                   		cmp.w	#$E00,d2
00200498 6C00                        		bge.s	@goodin_r
0020049A 0642 0200                  		add.w	#$200,d2
0020049E                            @goodin_r:
0020049E 0240 00EE                  		and.w	#$0EE,d0
002004A2 8042                        		or.w	d2,d0
002004A4                            
002004A4 3AC0                        		move.w	d0,(a5)+
002004A6 51CC FFA6                  		dbf	d4,@next_in
002004AA                            		
002004AA 102E 0001                  		move.b	palFd_delay(a6),d0
002004AE 0240 001F                  		and.w	#$1F,d0
002004B2 0440 0001                  		sub.w	#1,d0
002004B6 6A00                       		bpl.s	fadeSet_Return_2
002004B8                            		
002004B8                            ; 		sub.w	#1,d5
002004B8                            ; 		cmp.b	palFd_num(a6),d5
002004B8                            ; 		bne.s	fadeSet_Return
002004B8 4296                       		clr.l	(a6)
002004BA 42AE 0004                  		clr.l	4(a6)
002004BE                            		
002004BE                            fadeSet_Return_2:
002004BE 022E 00E0 0001             		and.b	#$E0,palFd_delay(a6)
002004C4 812E 0001                  		or.b	d0,palFd_delay(a6)
002004C8 4E75                       		rts
002004CA                            		
002004CA                            ; ---------------------------------
002004CA                            ; fadeSet_out_single
002004CA                            ; 
002004CA                            ; palFd_delay:
002004CA                            ; RGBTTTTT - RGB increment bits
002004CA                            ;            TTTTT timer
002004CA                            ; ---------------------------------
002004CA                            
002004CA                            fadeSet_out_single:
002004CA 046E 0001 0004             		sub.w	#1,palFd_timer(a6)
002004D0 6A00 FEE6                  		bpl	fadeSet_Return
002004D4                            
002004D4 7A00                       		moveq	#0,d5
002004D6 1A2E 0002                  		move.b	palFd_from(a6),d5
002004DA E34D                       		lsl.w	#1,d5
002004DC DAC5                       		adda	d5,a5
002004DE 162E 0001                  		move.b 	palFd_delay(a6),d3
002004E2 0243 00E0                  		and.w	#$E0,d3
002004E6 3D7C 0002 0004             		move.w	#2,palFd_timer(a6)
002004EC                            		
002004EC 7800                       		moveq	#0,d4
002004EE 182E 0003                  		move.b 	palFd_num(a6),d4
002004F2                            @next_in:
002004F2 3015                        		move.w	(a5),d0
002004F4 3400                       		move.w	d0,d2
002004F6 0242 000E                   		and.w	#$00E,d2
002004FA 0803 0005                  		btst	#5,d3
002004FE 6700                       		beq.s	@goodin_b
00200500                            ;  		tst.w	d2
00200500                            ;  		beq.s	@goodin_b
00200500 0442 0002                  		sub.w	#2,d2
00200504                            @goodin_b:
00200504 0240 0EE0                  		and.w	#$EE0,d0
00200508 8042                        		or.w	d2,d0
0020050A                            
0020050A 3400                       		move.w	d0,d2
0020050C 0242 00E0                   		and.w	#$0E0,d2
00200510 0803 0006                  		btst	#6,d3
00200514 6700                       		beq.s	@goodin_g
00200516                            ;  		tst.w	d2
00200516                            ;  		beq.s	@goodin_g
00200516 0442 0020                  		sub.w	#$020,d2
0020051A                            @goodin_g:
0020051A 0240 0E0E                  		and.w	#$E0E,d0
0020051E 8042                        		or.w	d2,d0
00200520                            
00200520 3400                       		move.w	d0,d2
00200522 0242 0E00                   		and.w	#$E00,d2
00200526 0803 0007                  		btst	#7,d3
0020052A 6700                       		beq.s	@goodin_r
0020052C                            ;  		tst.w	d2
0020052C                            ;  		beq.s	@goodin_r
0020052C 0442 0200                  		sub.w	#$200,d2
00200530                            @goodin_r:
00200530 0240 00EE                  		and.w	#$0EE,d0
00200534 8042                        		or.w	d2,d0
00200536                            
00200536 3AC0                        		move.w	d0,(a5)+
00200538 51CC FFB8                  		dbf	d4,@next_in
0020053C                            		
0020053C 102E 0001                  		move.b	palFd_delay(a6),d0
00200540 0240 001F                  		and.w	#$1F,d0
00200544 0440 0001                  		sub.w	#1,d0
00200548 6A00                       		bpl.s	@fadeSet_Return_2
0020054A                            		
0020054A                            ; 		sub.w	#1,d5
0020054A                            ; 		cmp.b	palFd_num(a6),d5
0020054A                            ; 		bne.s	fadeSet_Return
0020054A 4296                       		clr.l	(a6)
0020054C 42AE 0004                  		clr.l	4(a6)
00200550                            		
00200550                            @fadeSet_Return_2:
00200550 022E 00E0 0001             		and.b	#$E0,palFd_delay(a6)
00200556 812E 0001                  		or.b	d0,palFd_delay(a6)
0020055A 4E75                       		rts
0020055C                            		
0020055C                            ; --------------------------------------------
0020055C                            ; PalFade_Set
0020055C                            ; --------------------------------------------
0020055C                            
0020055C                            PalFade_Set:
0020055C 4E75                       		rts
0020055E                            		
0020055E                            ; ====================================================================
0020055E                            ; ---------------------------------------------
0020055E                            ; DMA
0020055E                            ; ---------------------------------------------
0020055E                            
0020055E                            ; ROM data
0020055E                            ; Size
0020055E                            ; VRAM Destiantion
0020055E                            
0020055E                            DMA_Read:
0020055E 4DF9 FFFF EB10              		lea	(RAM_DMA_Buffer),a6
00200564                            ;  		move.w	#64,d3
00200564 381E                         		move.w	(a6)+,d4
00200566                            ;   		sub.w	d4,d3
00200566                            ;   		bmi	@FinishList
00200566 4A44                         		tst.w	d4
00200568 6700 0000                    		beq	@FinishList
0020056C 0444 0001                    		sub.w	#1,d4
00200570                            ; 		dma 	on
00200570                            @NextEntry:
00200570 2A1E                       		move.l	(a6)+,d5
00200572 0685 0000 0002              		add.l	#2,d5
00200578                             		
00200578 E28D                         		lsr.l	#1,d5
0020057A 2C3C 9600 9500              		move.l	#$96009500,d6
00200580 1C05                        		move.b	d5,d6
00200582 E08D                        		lsr.l	#8,d5
00200584 4846                        		swap	d6
00200586 1C05                        		move.b	d5,d6
00200588 23C6 00C0 0004              		move.l	d6,(vdp_ctrl)
0020058E 3C3C 9700                   		move.w	#$9700,d6
00200592 E08D                        		lsr.l	#8,d5
00200594 1C05                        		move.b	d5,d6
00200596 33C6 00C0 0004              		move.w	d6,(vdp_ctrl)
0020059C                             		
0020059C 2C3C 9400 9300               		move.l	#$94009300,d6		;Size
002005A2 3A1E                         		move.w	(a6)+,d5
002005A4 1C05                         		move.b	d5,d6
002005A6 4846                        		swap	d6
002005A8 E04D                         		lsr.w	#8,d5
002005AA 1C05                         		move.b	d5,d6
002005AC 23C6 00C0 0004               		move.l	d6,(vdp_ctrl)
002005B2                             		
002005B2 3A1E                        		move.w	(a6)+,d5
002005B4 EB4D                        		lsl.w	#5,d5
002005B6 3C05                        		move.w	d5,d6
002005B8 0245 3FFF                   		and.w	#$3FFF,d5
002005BC 0045 4000                   		or.w	#$4000,d5
002005C0 E04E                        		lsr.w	#8,d6
002005C2 EC4E                        		lsr.w	#6,d6
002005C4 0246 0003                   		and.w	#%11,d6
002005C8 0046 0080                   		or.w	#$80,d6
002005CC 3F06                        		move.w	d6,-(sp)
002005CE 3F05                        		move.w	d5,-(sp)	
002005D0 33DF 00C0 0004              		move.w	(sp)+,(vdp_ctrl)
002005D6 33FC 0100 00A1 1100         		move.w	#$100,($A11100).l
002005DE                            @hold_on:
002005DE 0839 0000 00A1 1100         		btst	#0,($A11100).l
002005E6 66F6                         		bne.s	@hold_on
002005E8                              		
002005E8 33DF 00C0 0004              		move.w	(sp)+,(vdp_ctrl)
002005EE 33FC 0000 00A1 1100          		move.w	#0,($A11100).l
002005F6                               		
002005F6 51CC FF78                   		dbf	d4,@NextEntry
002005FA                             		
002005FA                            @FinishList:
002005FA 4279 FFFF EB10             		clr.w	(RAM_DMA_Buffer)
00200600 4E75                        		rts
00200602                            
00200602                            @ResetAllList:
00200602 4E75                       		rts
00200604                            		
00200604                            ; -----------------------------------
00200604                            ; Set new entry to the list
00200604                            ; 
00200604                            ; Input:
00200604                            ; d0 - ROM Address
00200604                            ; d1 - Size
00200604                            ; d2 - VRAM
00200604                            ; 
00200604                            ; Uses:
00200604                            ; a2/d3
00200604                            ; -----------------------------------
00200604                            
00200604                            DMA_Set:
00200604 45F9 FFFF EB10             		lea	(RAM_DMA_Buffer),a2
0020060A 0C52 0040                  		cmp.w	#64,(a2)
0020060E 6C00                       		bge.s	@Return
00200610 3612                       		move.w	(a2),d3
00200612 E74B                       		lsl.w	#3,d3			;Size: 8
00200614 D4C3                       		adda 	d3,a2
00200616 D4FC 0002                  		adda	#2,a2
0020061A                            		
0020061A 24C0                       		move.l	d0,(a2)+		;ROM Address
0020061C 34C1                       		move.w	d1,(a2)+
0020061E 34C2                       		move.w	d2,(a2)+
00200620 0679 0001 FFFF EB10        		add.w	#1,(RAM_DMA_Buffer)
00200628                            @Return:
00200628 4E75                       		rts
0020062A                            		
0020062A                            ; ====================================================================
0020062A                            ; ---------------------------------------------
0020062A                            ; Sprites system
0020062A                            ; ---------------------------------------------
0020062A                            
0020062A                            ; ---------------------------------------------
0020062A                            ; Sprites_Reset
0020062A                            ; ---------------------------------------------
0020062A                            
0020062A                            Sprites_Clear:
0020062A                            ;  		lea	(RAM_Sprites),a6
0020062A                            ;  		move.w	#$4F,d6
0020062A                            ; @clrit:
0020062A 42B9 FFFF E340               		clr.l	(RAM_Sprites)
00200630 42B9 FFFF E344               		clr.l	(RAM_Sprites+4)
00200636 4E75                       		rts
00200638                            		
00200638                            ; ---------------------------------------------
00200638                            ; Sprites_Reset
00200638                            ; ---------------------------------------------
00200638                            
00200638                            Sprites_Reset:
00200638 4DF9 FFFF E5C0             		lea	(RAM_SprControl),a6
0020063E 2A6E 0000                  		movea.l	sprite_free(a6),a5
00200642 BAFC E340                  		cmpa	#((RAM_Sprites)&$FFFF),a5
00200646 6D00                       		blt.s	@Full
00200648                            @NextEntry:
00200648 BAFC E5C0                   		cmpa	#((RAM_Sprites+$280)&$FFFF),a5
0020064C 6E00                        		bgt.s	@Full
0020064E 429D                        		clr.l	(a5)+
00200650 429D                         		clr.l	(a5)+
00200652 BAFC E5C0                    		cmpa	#((RAM_Sprites+$280)&$FFFF),a5
00200656 6DF0                         		blt.s	@NextEntry
00200658                            @Full:
00200658 2D7C FFFF E340 0000        		move.l	#RAM_Sprites,sprite_free(a6)
00200660 3D7C 0001 0004             		move.w	#1,sprite_link(a6)
00200666                            @Return:
00200666 4E75                       		rts
00200666 4E75                       		rts
00200668                            		include	"system/sound/68k/main.asm"
00200668                            ; ================================================================
00200668                            ; SMEG Karasucia
00200668                            ; Sound and Music Engine for Genesis (also MCD* and 32X**)
00200668                            ;
00200668                            ; (C)2013-2017 GF64
00200668                            ; 
00200668                            ; Reads patterns from a ImpulseTracker file (.it)
00200668                            ;
00200668                            ; Ticks:
00200668                            ; 150 - NTSC
00200668                            ; 120 - PAL
00200668                            ;
00200668                            ; uses assembler settings:
00200668                            ; MCD     - for building to MCD (All the driver must be aligned
00200668                            ;              to WordRAM or PRG-RAM)
00200668                            ; MARS       - for building to 32x (CODE and
00200668                            ;              DATA(Music/Sfx/Voices/Z80 samples) must be aligned to
00200668                            ;              the 32x standards, uses bank 0 only,
00200668                            ;              PWM Samples can be anywhere in ROM)
00200668                            ; SMEG_Z80   - Use Z80, set to 0 while running from PRGRAM
00200668                            ;                 
00200668                            ; Limtations:
00200668                            ; (Driver) - Effects: only volume and panning (Xxx) works
00200668                            ; 
00200668                            ; (MCD) - You cant use Z80 samples if your program is running
00200668                            ;            on PRG-RAM (Z80 cant access RAM), if your program is
00200668                            ;            running on WORD-RAM, set the permission to
00200668                            ;            MainCPU (2M Mode) (not recommended)
00200668                            ;            
00200668                            ; * requires respective SubCPU code
00200668                            ; ** requires respective SH2 code
00200668                            ; ================================================================
00200668                            
00200668                            ;NOTE: Format
00200668                            ; SONGFILE:
00200668                            ; 		dc.b 12,0		; Numof_blocks, loop_block (-1 dont loop)
00200668                            ; 		dc.l @pattern		; Pattern data
00200668                            ;      		dc.l @instruments	; Instrument set
00200668                            ;      		dc.w 8			; Number of channel settings
00200668                            ;       	dc.b FM_6,64,$80,$0F	; Example of one (Channel,Vol,Pan,Extra)		
00200668                            ;		...
00200668                            ;
00200668                            ; Extra:
00200668                            ; FM: %????KEYS KEYS: FM Keys (ignored if not FM)
00200668                            ; PSG: (not yet)
00200668                            ; PCM/PWM: not yet
00200668                            ; 
00200668                            ; @instruments:
00200668                            ; 		dc.w @ymha-@instruments
00200668                            ; 		dc.w @psg-@instruments
00200668                            ; 		dc.w @noise-@instruments
00200668                            ; 		dc.w @psmpl-@instruments
00200668                            ; 		even
00200668                            ; @ymha:
00200668                            ; 		;FM
00200668                            ; 		dc.w INSTNUM,0
00200668                            ; 		dc.l fmVoice_bass_ambient
00200668                            ;    		
00200668                            ;    		;FM3
00200668                            ;    		dc.w $40|INSTNUM,0
00200668                            ;    		dc.l fm_hatopen
00200668                            ;    		dc.w $0511|$2000,$0328|$2000
00200668                            ;    		dc.w $005E|$2000,$0328|$2000
00200668                            ;    		
00200668                            ;    		;Samples
00200668                            ;   		dc.w $80|INSTNUM,12	; NUM,Pitch
00200668                            ;   		dc.l wav_kick		; WAV Start
00200668                            ;  		dc.l wav_kick_e		; WAV End
00200668                            ;  		dc.l -1			; WAV Loop sample (0: start -1: none)
00200668                            ;  		
00200668                            ; 		dc.w -1			; ENDOFLIST
00200668                            ; 		even
00200668                            ; @psmpl:
00200668                            ; 		dc.w -1			; Later
00200668                            ; 		even
00200668                            ; @psg:
00200668                            ; 		dc.w -1			; Later
00200668                            ; 		even
00200668                            ; @noise:
00200668                            ;  		dc.w 3,%101		; INSTNUM, PSG Noise setting
00200668                            ;  		
00200668                            ;  		dc.w 5,%101
00200668                            ;  		dc.w 7,%100
00200668                            ;  		
00200668                            ; 		dc.w -1
00200668                            ; 		even
00200668                            
00200668                            
00200668                            ; GEMS style tick
00200668                            ; 		dc.l fmSfx_Coin
00200668                            ; 		dc.w $00AB|$3800,$0457|$3000
00200668                            ; 		dc.w $0511|$3000,$0336|$2000
00200668                            ;
00200668                            ;    		dc.l fm_hatopen
00200668                            ;    		dc.w $0511|$2000,$0328|$2000
00200668                            ;    		dc.w $005E|$2000,$0328|$2000
00200668                            ;
00200668                            ;    		dc.l fm_hatclosed
00200668                            ;    		dc.w $051C|$2000,$0328|$2000
00200668                            ;    		dc.w $005E|$2000,$0328|$2000
00200668                            ;
00200668                            ;    		dc.l fm_hatclosed
00200668                            ;    		dc.w $051C|$2000,$0328|$2000
00200668                            ;    		dc.w $005E|$2000,$0328|$2000	
00200668                            
00200668                            ; ================================================================
00200668                            
00200668                            			rsreset
00200668 =00000000                  DrvStatus		rs.b 1		;Byte
00200668 =00000001                  snd_flags		rs.b 1		;Byte
00200668 =00000002                  PatternEnd		rs.b 1		;Byte
00200668 =00000003                  PatternLoop		rs.b 1		;Byte
00200668 =00000004                  SongRequest		rs.l 1 		;Long
00200668 =00000008                  SongStart		rs.l 1		;Long
00200668 =0000000C                  SongRead		rs.l 1		;Long
00200668 =00000010                  snd_instr		rs.l 1		;Long
00200668 =00000014                  SongPcmSamp		rs.l 1		;Long
00200668 =00000018                  TicksRequest		rs.w 1		;Word
00200668 =0000001A                  TicksRead		rs.w 1		;Word
00200668 =0000001C                  TicksSet		rs.w 1		;Word
00200668 =0000001E                  TempoRead 		rs.w 1		;Word
00200668 =00000020                  PattSize		rs.w 1		;Word
00200668 =00000022                  pattr_read		rs.w 1		;Word
00200668 =00000024                  CdOnlyFlags		rs.w 1		;Word
00200668 =00000026                  CurrPattern		rs.b 1		;Byte
00200668 =00000027                  PcmChnOnOff		rs.b 1		;Byte
00200668 =00000028                  PsgLast			rs.b 1		;Byte
00200668 =00000029                  snd_flagsBGM		rs.b 1		;Byte
00200668 =0000002A                  LastPattChn		rs.b 1		;Byte
00200668 =0000002B                  Psg_Vibrato		rs.b 1		;Byte
00200668 =0000002C                  Psg_AutoVol		rs.b 1		;Byte
00200668 =0000002E                  sizeof_SndBuff		rs.l 0
00200668                            
00200668                            ; --------------------------------------------
00200668                            ; Channel settings
00200668                            ; --------------------------------------------
00200668                            
00200668                            			rsreset
00200668 =00000000                  Chn_Freq		rs.w 1		;Word
00200668 =00000002                  Chn_Effect		rs.w 1		;Word
00200668 =00000004                  Chn_Portam		rs.w 1		;Word
00200668 =00000006                  Chn_Type		rs.b 1		;Byte
00200668 =00000007                  Chn_ID			rs.b 1		;Byte
00200668 =00000008                  Chn_Inst		rs.b 1		;Byte
00200668 =00000009                  Chn_Vol			rs.b 1		;Byte
00200668 =0000000A                  Chn_MainVol		rs.b 1		;Byte
00200668 =0000000B                  Chn_Note		rs.b 1		;Byte
00200668 =0000000C                  Chn_Pan			rs.b 1		;Byte
00200668 =0000000D                  Chn_FM_Key		rs.b 1		;Byte
00200668 =0000000E                  Chn_PCM_Pitch		rs.b 1		;Byte
00200668                            ; Chn_PSG_Vibrato		rs.b 1		;Byte
00200668 =0000000F                  Chn_Timer		rs.b 1
00200668 =00000010                  sizeof_Chn		rs.l 0
00200668                             
00200668                             
00200668                            			rsreset
00200668 =00000000                  instDYmha		rs.w 1
00200668 =00000002                  instDPsg		rs.w 1
00200668 =00000004                  instDNoise		rs.w 1
00200668 =00000006                  instDpsmpl		rs.w 1
00200668                            
00200668                            ; --------------------------------------------
00200668                            ; Bits
00200668                            ; --------------------------------------------
00200668                            
00200668 =00000000                  bitPriority		equ	0
00200668 =00000001                  bitSfxOn		equ	1
00200668 =00000002                  bitEnabled		equ	2
00200668                            
00200668                            ;Status
00200668 =00000000                  bitFmDac		equ	0
00200668 =00000001                  bitDacNote		equ	1
00200668 =00000002                  bitTone3		equ	2
00200668 =00000003                  bitSpecial3		equ	3
00200668                            
00200668                            ; --------------------------------------------
00200668                            ; Channel IDs
00200668                            ; --------------------------------------------
00200668                            
00200668 =00000000                  FM_1			equ	$00
00200668 =00000001                  FM_2			equ	$01
00200668 =00000002                  FM_3			equ	$02
00200668 =00000004                  FM_4			equ	$04
00200668 =00000005                  FM_5			equ	$05
00200668 =00000006                  FM_6			equ	$06
00200668 =00000080                  PSG_1			equ	$80
00200668 =000000A0                  PSG_2			equ	$A0
00200668 =000000C0                  PSG_3			equ	$C0
00200668 =000000E0                  NOISE			equ	$E0
00200668 =00000010                  PCM_1			equ	$10
00200668 =00000011                  PCM_2			equ	$11
00200668 =00000012                  PCM_3			equ	$12
00200668 =00000013                  PCM_4			equ	$13
00200668 =00000014                  PCM_5			equ	$14
00200668 =00000015                  PCM_6			equ	$15
00200668 =00000016                  PCM_7			equ	$16
00200668 =00000017                  PCM_8			equ	$17
00200668 =00000012                  max_chnl		equ	18
00200668                            
00200668                            ; --------------------------------------------
00200668                            ; .IT request ($80+) format
00200668                            ; --------------------------------------------
00200668                            
00200668 =00000000                  bitNote			equ	0
00200668 =00000001                  bitInst			equ	1
00200668 =00000002                  bitVolume		equ	2
00200668 =00000003                  bitEffect		equ	3
00200668 =00000004                  bitSameNote		equ	4
00200668 =00000005                  bitSameInst		equ	5
00200668 =00000006                  bitSameVol		equ	6
00200668 =00000007                  bitSameEffect		equ	7
00200668                            
00200668                            ; --------------------------------------------
00200668                            ; RAM
00200668                            ; 
00200668                            ; MAX: $400
00200668                            ; --------------------------------------------
00200668                            
00200668                            			rsset RAM_Audio
00200668 =FFFFEF00                  RAM_SMEG_Buffer		rs.b sizeof_SndBuff
00200668 =FFFFEF2E                  RAM_SMEG_SfxBuff	rs.b sizeof_SndBuff
00200668 =FFFFEF5C                  RAM_SMEG_PrioList	rs.b max_chnl
00200668 =FFFFEF6E                  RAM_SMEG_Chnls_BGM	rs.b $10*max_chnl
00200668 =FFFFF08E                  RAM_SMEG_Chnls_SFX	rs.b $10*max_chnl
00200668 =FFFFF1AE                  RAM_SMEG_PcmList	rs.l 64
00200668                            			
00200668 =FFFFF2AE                  sizeof_SMEG		rs.l 0
00200668                            ;      			inform 0,"SMEG Uses: %h",sizeof_SMEG-RAM_Audio
00200668                            			
00200668                            ; ================================================================
00200668                            ; -------------------------------------------
00200668                            ; Macros
00200668                            ; -------------------------------------------
00200668                            
00200668                            ; -----------------------------------------
00200668                            
00200668                            PCM_Entry	macro	cd_side,mars_side,loop,pitch
00200668                            		
00200668                            cdsize_size	= strlen(\cd_side)
00200668                            		if MCD
00200668                            		  if cdsize_size>$C
00200668                            		    inform 2,"(SMEG) CD FILENAME TOO LONG"
00200668                            		  elseif cdsize_size=$C
00200668                            		    dc.b \cd_side
00200668                            		  elseif cdsize_size<$C
00200668                            		    dc.b \cd_side
00200668                            		    rept $C-cdsize_size
00200668                            		      dc.b 0
00200668                            		    endr
00200668                            		  elseif cdsize_size<=0
00200668                            		    inform 2,"(SMEG) YOU FORGOT THE CD FILENAME"
00200668                            		  endif
00200668                            		  
00200668                            		elseif MARS
00200668                            		  dc.l mars_side
00200668                            		endif
00200668                            		
00200668                            		dc.w loop
00200668                            		dc.w pitch
00200668                            		endm
00200668                            
00200668                            ; 		inform 0,"%h",RAM_SMEG_Buffer
00200668                            
00200668                            ; ================================================================
00200668                            ; -------------------------------------------
00200668                            ; External Calls
00200668                            ; -------------------------------------------
00200668                            
00200668                            ;SegaPCM
00200668 =00000020                  CdTask_LoadPcm		equ	$20
00200668 =00000021                  CdTask_SetAddr		equ	$21
00200668 =00000022                  CdTask_SetFreq		equ	$22
00200668 =00000023                  CdTask_SetPan		equ	$23
00200668 =00000024                  CdTask_SetEnv		equ	$24
00200668 =00000025                  CdTask_SetOnOff		equ	$25
00200668 =00000026                  CdTask_ClearAllPcm	equ	$26
00200668                            
00200668                            ;MARS
00200668 =00000001                  marscall_Play		equ	1
00200668 =00000002                  marscall_Stop		equ	2
00200668 =00000003                  marscall_SetSmpl	equ	3
00200668 =00000004                  marscall_SetVol		equ	4
00200668 =00000005                  marscall_SetEntry	equ	5
00200668                            	
00200668                            ; ================================================================
00200668                            ; -------------------------------------------
00200668                            ; Init
00200668                            ; -------------------------------------------
00200668                            
00200668                            Audio_Init:
00200668 41F9 FFFF EF00             		lea	(RAM_SMEG_Buffer),a0
0020066E 303C 02FF                  		move.w	#$2FF,d0
00200672                            @ClrAll:
00200672 4298                       		clr.l	(a0)+
00200674 51C8 FFFC                  		dbf	d0,@ClrAll
00200678                            		
00200678                            ; -------------------------------------------
00200678                            ; Z80
00200678                            ; -------------------------------------------
00200678                            
00200678                            SMEG_Z80_Init:
00200678 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
00200680 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
00200688                            @WaitZ80:
00200688 0839 0000 00A1 1100        		btst	#0,($A11100).l
00200690 66F6                       		bne.s	@WaitZ80
00200692                            
00200692 41F9 00A0 0000             		lea	($A00000).l,a0
00200698 303C 1FFF                  		move.w	#$1FFF,d0
0020069C                            @cleanup:
0020069C 4218                       		clr.b	(a0)+
0020069E 51C8 FFFC                  		dbf	d0,@cleanup
002006A2                            		
002006A2 41FA 0000                  		lea	Z80_Driver(pc),a0
002006A6 43F9 00A0 0000             		lea	($A00000).l,a1
002006AC 323C 0000                  		move.w	#Z80_DriverEnd-Z80_Driver,d1
002006B0                            @ToZ80:
002006B0 12D8                       		move.b	(a0)+,(a1)+
002006B2 51C9 FFFC                  		dbf	d1,@ToZ80
002006B6                            
002006B6                            ; -----------------------------------
002006B6                            
002006B6 33FC 0000 00A1 1200        		move.w	#0,($A11200).l
002006BE 4E71                       		nop
002006C0 4E71                       		nop
002006C2 4E71                       		nop
002006C4 4E71                       		nop
002006C6 33FC 0100 00A1 1200        		move.w	#$100,($A11200).l
002006CE 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
002006D6                            ; 		rts
002006D6                            		
002006D6                            ; -------------------------------------------
002006D6                            ; Stop ALL Sound
002006D6                            ; -------------------------------------------
002006D6                            
002006D6                            SMEG_StopSnd:
002006D6 103C 002B                  		move.b	#$2B,d0
002006DA 123C 0000                  		move.b	#$00,d1
002006DE 6100 0000                  		bsr	SMEG_Z80_Off
002006E2 6100 0000                  		bsr	FM_RegWrite_1
002006E6 6100 0000                  		bsr	SMEG_Z80_On
002006EA 6100 0000                  		bsr	Audio_Sample_Stop
002006EE                            		
002006EE 4DF9 FFFF EF00             		lea	(RAM_SMEG_Buffer),a6
002006F4 0896 0002                  		bclr	#bitEnabled,(a6)
002006F8                            	
002006F8 6100 0000                  		bsr	SMEG_FM_Reset
002006FC 6100 0000                   		bsr	SMEG_PSG_Reset
00200700 6000 0000                  		bra	SMEG_PCM_Reset
00200704                            		
00200704                            ; -------------------------------------------
00200704                            ; Play Song
00200704                            ; -------------------------------------------
00200704                            
00200704                            SMEG_PlaySong:
00200704 4DF9 FFFF EF00             		lea	(RAM_SMEG_Buffer),a6
0020070A 08D6 0002                  		bset	#bitEnabled,(a6)
0020070E 4E75                       		rts
00200710                            		
00200710                            ; -------------------------------------------
00200710                            ; Load Song
00200710                            ;
00200710                            ; d0 - StartOfSong
00200710                            ; d1 - Ticks
00200710                            ; d2 - Type (0 - song, 1 - sfx)
00200710                            ; -------------------------------------------
00200710                            
00200710                            Audio_Track_Play:
00200710 4A42                       		tst.w	d2
00200712 6600                       		bne.s	@Sfx
00200714                            		
00200714 23C0 FFFF EF04             		move.l	d0,(RAM_SMEG_Buffer+SongRequest)
0020071A 33C1 FFFF EF18             		move.w	d1,(RAM_SMEG_Buffer+TicksRequest)
00200720 4E75                       		rts
00200722                            @Sfx:
00200722                            ; 		clr.w	(RAM_SMEG_SfxBuff+pattr_read)
00200722                            ; 		clr.w	(RAM_SMEG_SfxBuff+CurrPattern)
00200722                            ; 		move.l	(RAM_SMEG_SfxBuff+SongStart),(RAM_SMEG_SfxBuff+SongRead)
00200722                            ; 		cmp.l	(RAM_SMEG_SfxBuff+SongRequest),d0
00200722                            ; 		bne.s	@SameSfx
00200722                            		
00200722 23C0 FFFF EF32             		move.l	d0,(RAM_SMEG_SfxBuff+SongRequest)
00200728 33C1 FFFF EF46             		move.w	d1,(RAM_SMEG_SfxBuff+TicksRequest)
0020072E                            @SameSfx:
0020072E 4E75                       		rts
00200730                            		
00200730                            ; ================================================================
00200730                            ; -------------------------------------------
00200730                            ; Run
00200730                            ; -------------------------------------------
00200730                            
00200730                            Audio_Run:
00200730 4DF9 FFFF EF00             		lea	(RAM_SMEG_Buffer),a6
00200736 6100 0000                  		bsr	@RequestSong
0020073A 0896 0000                  		bclr	#bitPriority,(a6)
0020073E 6100 0000                                  bsr	@ReadRow
00200742                            
00200742 4DF9 FFFF EF2E               		lea	(RAM_SMEG_SfxBuff),a6
00200748 6100 0000                   		bsr	@RequestSfx
0020074C 08D6 0000                  		bset	#bitPriority,(a6)
00200750 6100 0000                  		bsr	@ReadRow
00200754                            		
00200754                            ; -------------------------
00200754                            ; MARS ONLY
00200754                            ; Transfer 68k RAM using
00200754                            ; framebuffer (offside)
00200754                            ; -------------------------
00200754                            
00200754                            ; @marsturn:
00200754                            ; 		btst	#7,(marsreg)	
00200754                            ; 		bne.s	@busymars
00200754                            ; 		
00200754                            ; 		bchg	#0,($A1518B)
00200754                            ; @waitfb:	btst	#1,($A1518B)
00200754                            ; 		bne.s	@waitfb
00200754                            ; 		lea	(RAM_SMEG_Chnls_BGM),a0
00200754                            ; 		lea	(framebuffer+$14000),a1
00200754                            ; 		move.w	#$10*max_chnl,d0
00200754                            ; @copytomars:	
00200754                            ; 		move.b	(a0)+,(a1)+
00200754                            ; 		dbf	d0,@copytomars
00200754                            ; 		bchg	#0,($A1518B)
00200754                            ; @busymars:
00200754                            
00200754                            ; -------------------------
00200754                            
00200754                            @Wait:
00200754 4E75                       		rts
00200756                            
00200756                            ; -------------------------------------------
00200756                            ; Request song
00200756                            ; -------------------------------------------
00200756                            	
00200756                            @RequestSong:
00200756 4AAE 0004                  		tst.l	SongRequest(a6)
0020075A 6700                       		beq.s	@Same
0020075C 0896 0002                  		bclr	#bitEnabled,(a6)
00200760 6100 FF74                   		bsr	SMEG_StopSnd			;d0-d1 are gone
00200764 4AAE 0004                   		tst.l	SongRequest(a6)
00200768 6B00                        		bmi.s	@Same
0020076A                             		
0020076A 422E 0026                  		clr.b	CurrPattern(a6)
0020076E 422E 0002                  		clr.b	PatternEnd(a6)
00200772 426E 0020                  		clr.w	PattSize(a6)
00200776 426E 0022                  		clr.w	pattr_read(a6)
0020077A 4BF9 FFFF EF6E             		lea	(RAM_SMEG_Chnls_BGM),a5
00200780 422E 0027                  		clr.b	PcmChnOnOff(a6)
00200784 422E 0000                                  clr.b	DrvStatus(a6)
00200788 6100 0000                  		bsr	SMEG_Load_SetChnls
0020078C 6100 0000                   		bsr	SMEG_Load_SetExtChnls
00200790 08D6 0002                  		bset	#bitEnabled,(a6)
00200794                            
00200794 426E 0018                  		clr.w	TicksRequest(a6)
00200798 42AE 0004                  		clr.l	SongRequest(a6)
0020079C                            @Same:
0020079C 4E75                       		rts
0020079E                            		
0020079E                            ; -------------------------------------------
0020079E                            ; Request sfx
0020079E                            ; -------------------------------------------
0020079E                            
0020079E                            @RequestSfx:
0020079E 4AAE 0004                  		tst.l	SongRequest(a6)
002007A2 67F8                       		beq.s	@Same
002007A4 6BF6                       		bmi.s	@Same
002007A6                            		
002007A6 0896 0002                  		bclr	#bitEnabled,(a6)
002007AA 422E 0026                  		clr.b	CurrPattern(a6)
002007AE 422E 0002                  		clr.b	PatternEnd(a6)
002007B2 426E 0020                  		clr.w	PattSize(a6)
002007B6 426E 0022                  		clr.w	pattr_read(a6)
002007BA                            		
002007BA 422E 0027                  		clr.b	PcmChnOnOff(a6)
002007BE 422E 0000                                  clr.b	DrvStatus(a6)
002007C2                            ;                 bset	#bitSfxOn,(a6)
002007C2 4BF9 FFFF F08E             		lea	(RAM_SMEG_Chnls_SFX),a5
002007C8 6100 0000                  		bsr	SMEG_Load_SetChnls
002007CC 6100 0000                  		bsr	SMEG_Load_FixSfx
002007D0 08D6 0002                  		bset	#bitEnabled,(a6)
002007D4                            		
002007D4 426E 0018                  		clr.w	TicksRequest(a6)
002007D8 42AE 0004                  		clr.l	SongRequest(a6)
002007DC 4E75                       		rts
002007DE                            		
002007DE                            ; -------------------------------------------
002007DE                            ; Read row
002007DE                            ; -------------------------------------------
002007DE                            
002007DE                            @ReadRow:
002007DE 0816 0002                  		btst	#bitEnabled,(a6)
002007E2 6700 FF70                  		beq	@Wait
002007E6                            
002007E6 046E 0001 001A             		sub.w	#1,TicksRead(a6)
002007EC 6A00 FF66                  		bpl	@Wait
002007F0 3D6E 001C 001A              		move.w	TicksSet(a6),TicksRead(a6)
002007F6                            
002007F6                            @NewRow:
002007F6 286E 000C                                  movea.l	SongRead(a6),a4
002007FA                            
002007FA                            ; --------------------------------
002007FA                            ; New pattern
002007FA                            ; --------------------------------
002007FA                            
002007FA                            @Next:
002007FA 7A00                       		moveq	#0,d5
002007FC 7C00                       		moveq	#0,d6
002007FE 3C2E 0020                   		move.w	PattSize(a6),d6
00200802 0446 0001                    		sub.w	#1,d6
00200806 3A2E 0022                    		move.w	pattr_read(a6),d5
0020080A BC85                        		cmp.l	d5,d6
0020080C 6400                        		bcc.s	@NoNextRow
0020080E                             		
0020080E 426E 0022                  		clr.w	pattr_read(a6)
00200812 7A00                       		moveq	#0,d5
00200814 7C00                       		moveq	#0,d6
00200816 1C2E 0002                  		move.b	PatternEnd(a6),d6
0020081A 1A2E 0026                  		move.b	CurrPattern(a6),d5
0020081E BC45                       		cmp.w	d5,d6
00200820 6E00                       		bgt.s	@NotEnd
00200822                            		
00200822 0C2E 00FF 0003             		cmp.b	#-1,PatternLoop(a6)
00200828 6700                       		beq.s	@exit
0020082A                            		
0020082A 286E 0008                  		movea.l	SongStart(a6),a4
0020082E 1D5C 0021                  		move.b	(a4)+,PattSize+1(a6)
00200832 1D5C 0020                   		move.b	(a4)+,PattSize(a6)
00200836 D8FC 0006                   		adda	#6,a4
0020083A 2D4C 000C                  		move.l	a4,SongRead(a6)
0020083E 1D6E 0003 0026             		move.b	PatternLoop(a6),CurrPattern(a6)
00200844 426E 001A                  		clr.w	TicksRead(a6)
00200848 4E75                       		rts
0020084A                            		
0020084A                            @exit:
0020084A 0896 0002                  		bclr	#bitEnabled,(a6)
0020084E 4E75                       		rts
00200850                            
00200850                            ; --------------------------------
00200850                            
00200850                            @NotEnd:
00200850 062E 0001 0026             		add.b	#1,CurrPattern(a6)
00200856 7000                       		moveq	#0,d0
00200858 102E 0026                  		move.b	CurrPattern(a6),d0
0020085C B02E 0003                  		cmp.b	PatternLoop(a6),d0
00200860 6600                       		bne.s	@DontSaveLoop
00200862 2D4C 0008                  		move.l	a4,SongStart(a6)
00200866                            @DontSaveLoop:
00200866 7200                       		moveq	#0,d1
00200868 121C                       		move.b	(a4)+,d1
0020086A 141C                       		move.b	(a4)+,d2
0020086C E14A                       		lsl.w	#8,d2
0020086E 8242                       		or	d2,d1
00200870 3D41 0020                  		move.w	d1,PattSize(a6)
00200874 D8FC 0006                  		adda	#6,a4
00200878                            		
00200878                            ; --------------------------------
00200878                            ; Current pattern
00200878                            ; --------------------------------
00200878                            
00200878                            @NoNextRow:
00200878 7C00                       		moveq	#0,d6
0020087A 7000                       		moveq	#0,d0
0020087C 101C                       		move.b	(a4)+,d0
0020087E                            
0020087E 4A40                       		tst.w	d0
00200880 6600                       		bne.s	@ValidNote
00200882                            
00200882 066E 0001 0022             		add.w	#1,pattr_read(a6)
00200888 2D4C 000C                  		move.l	a4,SongRead(a6)
0020088C 4E75                       		rts
0020088E                            
0020088E                            @ValidNote:
0020088E 4A00                       		tst.b	d0
00200890 6A00                       		bpl.s	@Not80
00200892 066E 0001 0022             		add.w	#1,pattr_read(a6)
00200898 0880 0007                  		bclr	#7,d0
0020089C 1C1C                       		move.b	(a4)+,d6
0020089E                            @Not80:
0020089E 066E 0001 0022             		add.w	#1,pattr_read(a6)
002008A4 0440 0001                  		sub.w	#1,d0
002008A8 1D40 002A                  		move.b	d0,LastPattChn(a6)
002008AC                            
002008AC 4BF9 FFFF EF6E             		lea 	(RAM_SMEG_Chnls_BGM),a5
002008B2 0816 0000                  		btst 	#bitPriority,(a6)
002008B6 6700                       		beq.s	@MusicPrio
002008B8 4BF9 FFFF F08E             		lea 	(RAM_SMEG_Chnls_SFX),a5	
002008BE                            @MusicPrio:
002008BE C0FC 0010                  		mulu.w	#sizeof_Chn,d0
002008C2 DAC0                       		adda	d0,a5
002008C4                            		
002008C4 4A46                       		tst.w	d6
002008C6 6700                       		beq.s	@NotRest
002008C8 1B46 0006                  		move.b	d6,Chn_Type(a5)
002008CC                            @NotRest:
002008CC                            
002008CC                            ; SFX: Mark used channel
002008CC                            
002008CC 0816 0000                  		btst 	#bitPriority,(a6)
002008D0 6700                       		beq.s	@MusicPrio2
002008D2 6100 0000                  		bsr	SMEG_FindPrioSlot
002008D6 16BC 0001                    		move.b	#1,(a3)
002008DA                            @MusicPrio2:
002008DA                             
002008DA                            ; -------------
002008DA                            ; Note
002008DA                            ; -------------
002008DA                            
002008DA 082D 0004 0006             		btst	#bitSameNote,Chn_Type(a5)
002008E0 6600                       		bne.s	@PlayOnly
002008E2 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
002008E8 6700                       		beq.s	@NoNote
002008EA                            
002008EA 426D 0004                  		clr.w	Chn_Portam(a5)
002008EE 1B5C 000B                                  move.b	(a4)+,Chn_Note(a5)
002008F2 066E 0001 0022             		add.w	#1,pattr_read(a6)
002008F8                            
002008F8                            @PlayOnly:
002008F8                            ; 		bsr	SMEG_ChannelRest
002008F8                            
002008F8                            @NoNote:
002008F8                            
002008F8                            ; -------------
002008F8                            ; Instrument
002008F8                            ; -------------
002008F8                            
002008F8 082D 0005 0006              		btst	#bitSameInst,Chn_Type(a5)
002008FE 6600                       		bne.s	@SameInst
00200900 082D 0001 0006             		btst	#bitInst,Chn_Type(a5)
00200906 6700                       		beq.s	@NoInst
00200908                            
00200908 1B5C 0008                  		move.b	(a4)+,Chn_Inst(a5)
0020090C 066E 0001 0022             		add.w	#1,pattr_read(a6)
00200912                            
00200912                            @SameInst:
00200912 6100 0000                  		bsr	SMEG_SetVoice
00200916                            @NoInst:
00200916                            
00200916                            ; -------------
00200916                            ; Volume
00200916                            ; -------------
00200916                            
00200916 082D 0006 0006              		btst	#bitSameVol,Chn_Type(a5)
0020091C 6600                        		bne.s	@SameVol
0020091E 082D 0002 0006             		btst	#bitVolume,Chn_Type(a5)
00200924 6700                       		beq.s	@NoVolume
00200926                            
00200926 7000                       		moveq 	#0,d0
00200928 101C                       		move.b 	(a4)+,d0
0020092A 1B40 0009                  		move.b	d0,chn_vol(a5)
0020092E 066E 0001 0022             		add.w 	#1,pattr_read(a6)
00200934                            @NoVolume:
00200934                            @SameVol:
00200934 6100 0000                   		bsr	@ChnVolume
00200938                             		
00200938                            ; -------------
00200938                            ; Effect
00200938                            ; -------------
00200938                            
00200938 082D 0007 0006              		btst	#bitSameEffect,Chn_Type(a5)
0020093E 6600                        		bne.s	@SameEffect
00200940 082D 0003 0006             		btst	#bitEffect,Chn_Type(a5)
00200946 6700                       		beq.s	@NoEffect
00200948                            
00200948 1B5C 0002                  		move.b	(a4)+,Chn_Effect(a5)
0020094C 066E 0001 0022             		add.w	#1,pattr_read(a6)
00200952 1B5C 0003                  		move.b	(a4)+,Chn_Effect+1(a5)
00200956 066E 0001 0022             		add.w	#1,pattr_read(a6)
0020095C                            @SameEffect:
0020095C 6100 0000                  		bsr	@ChannelEffects
00200960                            @NoEffect:
00200960                            
00200960                            ; --------------
00200960                            ; Play the note
00200960                            ; --------------
00200960                            
00200960 082D 0004 0006              		btst	#bitSameNote,Chn_Type(a5)
00200966 6600                        		bne.s	@SameNote
00200968 082D 0000 0006             		btst	#bitNote,Chn_Type(a5)
0020096E 6700 FE8A                  		beq	@Next
00200972                            @SameNote:
00200972 6100 0000                  		bsr	@ChannelPlay
00200976 6000 FE82                  		bra	@Next
0020097A                            
0020097A                            ; ================================================================
0020097A                            ; -------------------------------
0020097A                            ; PCM Frequencies
0020097A                            ; -------------------------------
0020097A                            
0020097A                            @Notes_PCM:
0020097A 0000 0000 0000 0000 0000+   		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0	;0
00200992 0000 0000 0000 0000 0000+   		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0	;1
002009AA 0000 0000 0000 0000 0000+  		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0	;2
002009C2 00F6 0104 0113 0124 0135+  		dc.w $00F6,$0104,$0113,$0124,$0135,$0148,$015B,$0170,$0186,$019D,$01B5,$01D0	;3
002009DA 01EB 0208 0228 0248 026B+  		dc.w $01EB,$0208,$0228,$0248,$026B,$0291,$02B8,$02E1,$030E,$033C,$036E,$03A3	;4 16000hz
002009F2 03DA 0415 0454 0497 04DD+  		dc.w $03DA,$0415,$0454,$0497,$04DD,$0528,$0578,$05CB,$0625,$0684,$06E8,$0753	;5
00200A0A 07C4 083B 08B0 093D 09C7+  		dc.w $07C4,$083B,$08B0,$093D,$09C7,$0A60,$0AF8,$0BA8,$0C55,$0D10,$0DE2,$0EBE	;6
00200A22 0FA4 107A 1186 1280 1396+  		dc.w $0FA4,$107A,$1186,$1280,$1396,$14CC,$1624,$1746,$18DE,$1A38,$1BE0,$1D94	;7
00200A3A 1F65 20FF 2330 2526 2753+  		dc.w $1F65,$20FF,$2330,$2526,$2753,$29B7,$2C63,$2F63,$31E0,$347B,$377B,$3B41	;8
00200A52 3EE8 4206 4684 4A5A 4EB5+  		dc.w $3EE8,$4206,$4684,$4A5A,$4EB5,$5379,$58E1,$5DE0,$63C0,$68FF,$6EFF,$783C	;9
00200A6A 7FC2 83FC 8D14 9780 9D80+  		dc.w $7FC2,$83FC,$8D14,$9780,$9D80,$AA5D,$B1F9,$BBBA,$CC77,$D751,$E333,$F0B5
00200A82 0000 0000 0000 0000 0000+  		dc.w     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
00200A9A                            		even
00200A9A                            		
00200A9A                            		
00200A9A                            ; ================================================================
00200A9A                            ; -------------------------------
00200A9A                            ; Set Volume
00200A9A                            ; -------------------------------
00200A9A                            
00200A9A                            @ChnVolume:
00200A9A 0C2D 00FF 0007             		cmp.b	#-1,Chn_ID(a5)
00200AA0 6700 0000                  		beq	@Return
00200AA4                            
00200AA4 0816 0000                  		btst	#bitPriority,(a6)
00200AA8 6600                       		bne.s	@SFX_ModeV
00200AAA 6100 0000                  		bsr	SMEG_FindPrioSlot
00200AAE 4A13                         		tst.b	(a3)
00200AB0 6600 0000                    		bne	@Return
00200AB4                            @SFX_ModeV:
00200AB4                            
00200AB4 4A2D 0007                  		tst.b	Chn_ID(a5)
00200AB8 6B00 0000                  		bmi	@ChnVol_PSG
00200ABC 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00200AC2 6C00 0000                  		bge	@ChnVol_PCM
00200AC6                            		
00200AC6 0C2D 0006 0007             		cmp.b	#FM_6,Chn_ID(a5)
00200ACC 6600                       		bne.s	@NotSmplChk
00200ACE 082E 0000 0001             		btst	#bitFmDac,snd_flags(a6)
00200AD4 6600 0000                  		bne	@Return
00200AD8                            @NotSmplChk:
00200AD8                            
00200AD8                            ; -------------------------------
00200AD8                            ; FM Volume
00200AD8                            ; -------------------------------
00200AD8                            
00200AD8 6100 0000                  		bsr	ChnlFM_srchIns
00200ADC 223C 7F7F 7F7F             		move.l	#$7F7F7F7F,d1
00200AE2 0C42 FFFF                  		cmp.w	#-1,d2
00200AE6 6700 0000                  		beq	@ForceOff
00200AEA 0802 0007                   		btst	#7,d2
00200AEE 6600 0000                   		bne	@ForceOff
00200AF2                             		
00200AF2                            ;  		cmp.b	#64,chn_vol(a5)
00200AF2                            ;  		bge	@Return
00200AF2                            	
00200AF2 D6FC 0004                   		adda.w	#4,a3
00200AF6 2653                       		movea.l	(a3),a3
00200AF8 D6FC 0015                    		adda	#$15,a3
00200AFC                            		
00200AFC 203C 4C44 4840             		move.l	#$4C444840,d0
00200B02 7200                        		moveq	#0,d1
00200B04 7400                        		moveq	#0,d2
00200B06 7600                        		moveq	#0,d3
00200B08 162D 0007                   		move.b	chn_id(a5),d3
00200B0C 0243 0003                   		and.w	#%11,d3
00200B10                            
00200B10                             		;TODO: checar bien los TL
00200B10 122B 0003                   		move.b	3(a3),d1
00200B14 142D 0009                   		move.b	chn_vol(a5),d2
00200B18 0402 0040                   		sub.b	#64,d2
00200B1C 9202                        		sub.b	d2,d1
00200B1E E189                        		lsl.l	#8,d1
00200B20                             		
00200B20 122B 0002                   		move.b	2(a3),d1
00200B24 142D 0009                   		move.b	chn_vol(a5),d2
00200B28 0402 0040                   		sub.b	#64,d2
00200B2C 9202                        		sub.b	d2,d1
00200B2E E189                         		lsl.l	#8,d1
00200B30                              		
00200B30 122B 0001                   		move.b	1(a3),d1
00200B34 142D 0009                   		move.b	chn_vol(a5),d2
00200B38 0402 0040                   		sub.b	#64,d2
00200B3C 9202                        		sub.b	d2,d1
00200B3E E189                         		lsl.l	#8,d1
00200B40                              		
00200B40 1213                        		move.b	(a3),d1
00200B42 142D 0009                   		move.b	chn_vol(a5),d2
00200B46 0402 0040                   		sub.b	#64,d2
00200B4A 9202                        		sub.b	d2,d1
00200B4C                            
00200B4C                            @ForceOff:
00200B4C 6100 0000                   		bsr	SMEG_Z80_OFF
00200B50                            ;  		or.b	d3,d0
00200B50                            ;  		bsr	SMEG_FM_FindWrite	;oops.
00200B50 E088                        		lsr.l	#8,d0
00200B52 E089                        		lsr.l	#8,d1
00200B54 8003                        		or.b	d3,d0
00200B56 6100 0000                    		bsr	SMEG_FM_FindWrite
00200B5A E088                        		lsr.l	#8,d0
00200B5C E089                        		lsr.l	#8,d1
00200B5E                            ;  		or.b	d3,d0
00200B5E                            ;   		bsr	SMEG_FM_FindWrite
00200B5E E088                        		lsr.l	#8,d0
00200B60 E089                        		lsr.l	#8,d1
00200B62 8003                        		or.b	d3,d0
00200B64 6100 0000                   		bsr	SMEG_FM_FindWrite
00200B68 6000 0000                   		bra	SMEG_Z80_On
00200B6C                             	
00200B6C                            ; -------------------------------
00200B6C                            ; PSG Volume
00200B6C                            ; -------------------------------
00200B6C                            
00200B6C                            @ChnVol_PSG:
00200B6C 162D 0007                  		move.b	Chn_ID(a5),d3
00200B70 0043 001F                  		or.w	#$1F,d3
00200B74 102D 000B                  		move.b	chn_note(a5),d0
00200B78 0C00 00FE                  		cmp.b	#-2,d0
00200B7C 6700 0000                  		beq	ChnPsg_Rest
00200B80 0C00 00FF                  		cmp.b	#-1,d0
00200B84 6700 0000                  		beq	ChnPsg_Rest
00200B88 6000 0000                  		bra	ChnPsg_SetVol
00200B8C                            @Return:
00200B8C 4E75                       		rts
00200B8E                            
00200B8E                            ; -------------------------------
00200B8E                            ; PCM Volume
00200B8E                            ; -------------------------------
00200B8E                            
00200B8E                            @ChnVol_PCM:
00200B8E                            		
00200B8E 7400                        		moveq	#0,d2
00200B90 7200                        		moveq	#0,d1
00200B92 143C 00FF                   		move.b	#$FF,d2				;$xx00
00200B96                            ;     		move.b	Chn_MainVol(a5),d1
00200B96                            ;       	lsr.w	#4,d1
00200B96                            ;      		lsl.w	#4,d1
00200B96                            ;    		sub.b	d1,d2
00200B96 122D 0009                      		move.b	Chn_Vol(a5),d1
00200B9A E849                             		lsr.w	#4,d1
00200B9C E949                            		lsl.w	#4,d1
00200B9E 9401                           		sub.b	d1,d2
00200BA0                               		
00200BA0 7200                        		moveq	#0,d1
00200BA2 122D 0007                   		move.b	Chn_ID(a5),d1
00200BA6 0241 000F                   		and.w	#$F,d1
00200BAA 13C1 00A1 2010              		move.b	d1,($A12000+CommDataM)
00200BB0 13C2 00A1 2011              		move.b	d2,($A12000+CommDataM+1)
00200BB6 7024                        		moveq	#CdTask_SetEnv,d0
00200BB8 6100 0000                   		bsr	SMEG_CD_Call
00200BBC                            
00200BBC 4E75                       		rts
00200BBE                            		
00200BBE                            ; ================================================================
00200BBE                            ; -------------------------------
00200BBE                            ; Channel effect
00200BBE                            ; -------------------------------
00200BBE                            
00200BBE                            @ChannelEffects:
00200BBE 0C2D 00FF 0007             		cmp.b	#-1,Chn_ID(a5)
00200BC4 6700 0000                  		beq	@Null
00200BC8                            ; 		btst 	#bitPriority,(a6)
00200BC8                            ; 		bne.s	@SFX_Eff
00200BC8                            ; 		bsr	SMEG_FindPrioSlot
00200BC8                            ;   		tst.b	(a3)
00200BC8                            ;   		bne	@Return
00200BC8                            ; @SFX_Eff:
00200BC8                            
00200BC8 7000                       		moveq	#0,d0
00200BCA 102D 0002                  		move.b	Chn_Effect(a5),d0
00200BCE D040                       		add.w	d0,d0
00200BD0 323B 0000                  		move.w	@EffectList(pc,d0.w),d1
00200BD4 4EFB 1000                  		jmp	@EffectList(pc,d1.w)
00200BD8                            		
00200BD8                            ; -------------------------------
00200BD8                            
00200BD8 0000                       @EffectList:	dc.w	@Null-@EffectList
00200BDA 0000                       		dc.w	@Flag_A-@EffectList
00200BDC 0000                       		dc.w	@Null-@EffectList
00200BDE 0000                       		dc.w	@Null-@EffectList
00200BE0 0000                       		dc.w	@Flag_D-@EffectList
00200BE2 0000                       		dc.w	@Flag_E-@EffectList
00200BE4 0000                       		dc.w	@Flag_F-@EffectList
00200BE6 0000                       		dc.w	@Null-@EffectList
00200BE8 0000                       		dc.w	@Null-@EffectList
00200BEA 0000                       		dc.w	@Null-@EffectList
00200BEC 0000                       		dc.w	@Null-@EffectList
00200BEE 0000                       		dc.w	@Null-@EffectList
00200BF0 0000                       		dc.w	@Null-@EffectList
00200BF2 0000                       		dc.w	@Flag_M-@EffectList
00200BF4 0000                       		dc.w	@Null-@EffectList
00200BF6 0000                       		dc.w	@Null-@EffectList
00200BF8 0000                       		dc.w	@Null-@EffectList
00200BFA 0000                       		dc.w	@Null-@EffectList
00200BFC 0000                       		dc.w	@Null-@EffectList
00200BFE 0000                       		dc.w	@Null-@EffectList
00200C00 0000                       		dc.w	@Null-@EffectList
00200C02 0000                       		dc.w	@Null-@EffectList
00200C04 0000                       		dc.w	@Null-@EffectList
00200C06 0000                       		dc.w	@Null-@EffectList
00200C08 0000                       		dc.w	@Flag_X-@EffectList
00200C0A 0000                       		dc.w	@Null-@EffectList
00200C0C 0000                       		dc.w	@Flag_Z-@EffectList
00200C0E                            		even
00200C0E                            
00200C0E                            ; -------------------------------
00200C0E                            ; Null effect
00200C0E                            ; -------------------------------
00200C0E                            
00200C0E                            @Null:
00200C0E 4E75                       		rts
00200C10                            
00200C10                            ; -------------------------------
00200C10                            ; Flag A - Set Tick rate
00200C10                            ; -------------------------------
00200C10                            
00200C10                            @Flag_A:
00200C10 7000                       		moveq	#0,d0
00200C12 426E 001C                  		clr.w	TicksSet(a6)
00200C16 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00200C1A 0440 0001                  		sub.w	#1,d0
00200C1E 1D40 001D                  		move.b	d0,TicksSet+1(a6)
00200C22 4E75                       		rts
00200C24                            
00200C24                            ; -------------------------------
00200C24                            ; Flag D - Volume slide
00200C24                            ; -------------------------------
00200C24                            
00200C24                            @Flag_D:
00200C24 4E75                        rts
00200C26                            ; 		moveq	#0,d0
00200C26                            ; 		moveq	#0,d1
00200C26                            ; 		move.b	Chn_Effect+1(a5),d0
00200C26                            ; 		tst.b	Chn_ID(a5)
00200C26                            ; 		bpl	@NotPSG
00200C26                            ; 		lsl.w	#4,d0
00200C26                            ; @NotPSG:
00200C26                            ; 		move.b	Chn_Vol(a5),d1
00200C26                            ; 		add.b	d0,d1
00200C26                            ; 		move.b	d1,Chn_Vol(a5)
00200C26                            ; 		bra	@ChnVolume
00200C26                            
00200C26                            ; -------------------------------
00200C26                            ; Flag E - Portametro down
00200C26                            ; -------------------------------
00200C26                            
00200C26                            @Flag_E:
00200C26 7000                       		moveq	#0,d0
00200C28 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00200C2C 0640 0001                  		add.w	#1,d0
00200C30 4440                       		neg.w	d0
00200C32 6000                       		bra.s	@DoPortam
00200C34                            
00200C34                            ; -------------------------------
00200C34                            ; Flag F - Portametro up
00200C34                            ; -------------------------------
00200C34                            
00200C34                            @Flag_F:
00200C34 7000                       		moveq	#0,d0
00200C36 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00200C3A 0640 0001                  		add.w	#1,d0
00200C3E                            		
00200C3E                            ; ---------------------
00200C3E                            
00200C3E                            @DoPortam:
00200C3E 382D 0004                  		move.w	Chn_Portam(a5),d4
00200C42 4A44                       		tst.w	d4
00200C44 6700 FF46                  		beq	@return
00200C48                            		
00200C48 4A2D 0007                  		tst.b	Chn_ID(a5)
00200C4C 6B00                       		bmi.s	@psg_mode
00200C4E 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00200C54 6C00                       		bge.s	@pcm_mode
00200C56                            		
00200C56 E548                       		lsl.w	#2,d0
00200C58 D840                       		add.w	d0,d4
00200C5A 3B44 0004                  		move.w	d4,Chn_Portam(a5)
00200C5E 6000 0000                  		bra	SMEG_SetFreqFM
00200C62                            		
00200C62                            @psg_mode:
00200C62 D040                       		add.w	d0,d0
00200C64 9840                       		sub.w	d0,d4
00200C66 3B44 0004                  		move.w	d4,Chn_Portam(a5)
00200C6A 3004                       		move.w	d4,d0
00200C6C 122D 0007                  		move.b	Chn_ID(a5),d1
00200C70 6000 0000                  		bra	ChnPsg_NoteFreq
00200C74                            		
00200C74                            @pcm_mode:
00200C74 4E75                       		rts
00200C76                            		
00200C76                            ; -------------------------------
00200C76                            ; Flag M - Set Channel Volume
00200C76                            ; -------------------------------
00200C76                            
00200C76                            @Flag_M:
00200C76 4E75                        rts
00200C78                             
00200C78                            ; 		moveq	#0,d0
00200C78                            ; 		move.b	Chn_Effect+1(a5),d0
00200C78                            ; 	;	tst.b	Chn_ID(a5)
00200C78                            ; 	;	bpl	@NotPSG_H
00200C78                            ; 
00200C78                            ; 		neg.w	d0
00200C78                            ; 		sub.w	#$D0,d0
00200C78                            ; ;@NotPSG_H:
00200C78                            ; 		move.b	d0,Chn_MainVol(a5)
00200C78                            ; 		bra	@ChnVolume
00200C78                            
00200C78                            ; -------------------------------
00200C78                            ; Flag X - Stereo
00200C78                            ; -------------------------------
00200C78                            
00200C78                            @Flag_X:
00200C78                            ; 		tst.b	Chn_ID(a5)
00200C78                            ; 		bmi	@Null
00200C78                            ; 		cmp.b	#PCM_1,Chn_ID(a5)
00200C78                            ; 		bge	@PCM_Pan
00200C78                            		
00200C78 1B6D 0003 000C             		move.b	Chn_Effect+1(a5),Chn_Pan(a5)
00200C7E 4E75                       		rts
00200C80                            		
00200C80                            ; 		moveq	#0,d0
00200C80                            ; 		move.w	#$C0,d0
00200C80                            ;                 cmp.b	#$80,Chn_Effect+1(a5)
00200C80                            ;                 beq.s	@SetPan
00200C80                            ; 		tst.b	Chn_Effect+1(a5)
00200C80                            ; 		bmi.s	@Right
00200C80                            ; 		bpl.s	@Left
00200C80                            ; @SetPan:
00200C80                            ; 		move.b	d0,Chn_Pan(a5)
00200C80                            ; 		rts
00200C80                            ; @Left:
00200C80                            ; 		move.w	#$80,d0
00200C80                            ; 		bra.s	@SetPan
00200C80                            ; @Right:
00200C80                            ; 		move.w	#$40,d0
00200C80                            ; 		bra.s	@SetPan
00200C80                            
00200C80                            ; ; -------------------------------
00200C80                            ; ; PCM Panning
00200C80                            ; ; -------------------------------
00200C80                            ; 
00200C80                            ; @PCM_Pan:
00200C80                            ; 		if MCD
00200C80                            ; 		
00200C80                            ; 		moveq	#0,d0
00200C80                            ; 		move.b	#%11001100,d0				;TODO: dejarlo así
00200C80                            ; 		cmp.b	#$80,Chn_Effect+1(a5)
00200C80                            ; 		beq.s	@Return2
00200C80                            ;                  
00200C80                            ;  		tst.b	Chn_Effect+1(a5)
00200C80                            ;  		bmi.s	@Right2
00200C80                            ; 		bpl.s	@Left2
00200C80                            ; 		bra	@Return2
00200C80                            ; @Right2:
00200C80                            ;  		move.b	#%10000000,d0
00200C80                            ;  		bra	@Return2
00200C80                            ; @Left2:
00200C80                            ; 		move.b	#%00001000,d0
00200C80                            ; @Return2:
00200C80                            ; 		move.b	d0,Chn_Pan(a5)
00200C80                            ; 
00200C80                            ; ; -------------------------------------------------
00200C80                            ; 
00200C80                            ;  		elseif MARS
00200C80                            ;  
00200C80                            ; 		move.w	#%11000000,d0
00200C80                            ; 		cmp.b	#$80,Chn_Effect+1(a5)
00200C80                            ; 		beq	@Cont
00200C80                            ;  		tst.b	Chn_Effect+1(a5)
00200C80                            ;  		bmi.s	@pwmRight
00200C80                            ; 		bpl.s	@pwmLeft
00200C80                            ; 		bra	@Cont
00200C80                            ;  		
00200C80                            ; @pwmRight:
00200C80                            ;  		move.w	#%01000000,d0
00200C80                            ;  		bra.s	@Cont
00200C80                            ; @pwmLeft:
00200C80                            ; 		move.w	#%10000000,d0
00200C80                            ; 
00200C80                            ; @Cont:
00200C80                            ; 		move.b	d0,Chn_Pan(a5)   		
00200C80                            ; 		endif
00200C80                            ; 		rts
00200C80                            
00200C80                            ; ======================================================
00200C80                            ; -------------------------------
00200C80                            ; Flag Z
00200C80                            ; -------------------------------
00200C80                            
00200C80                            @Flag_Z:
00200C80 7000                       		moveq	#0,d0
00200C82 102D 0003                  		move.b	Chn_Effect+1(a5),d0
00200C86 E848                       		lsr.w	#4,d0
00200C88 D040                       		add.w	d0,d0
00200C8A 323B 0000                  		move.w	@HashList(pc,d0.w),d1
00200C8E 102D 0003                  		move.b	Chn_Effect+1(a5),d0		;d0 - $0-$F argument
00200C92 0200 000F                  		and.b	#$F,d0
00200C96 4EFB 1000                  		jmp	@HashList(pc,d1.w)
00200C9A                            
00200C9A FF74                       @HashList:	dc.w	@Null-@HashList		;$00
00200C9C 0000                       		dc.w	@FM_Key-@HashList		;$10 - FM Keys ON/OFF
00200C9E FF74                       		dc.w	@Null-@HashList			;$20
00200CA0 FF74                       		dc.w	@Null-@HashList			;$30
00200CA2 0000                       		dc.w	@PSG-@HashList			;$40 - PSG Settings
00200CA4 FF74                       		dc.w	@Null-@HashList			;$50
00200CA6 FF74                       		dc.w	@Null-@HashList			;$60
00200CA8 FF74                       		dc.w	@Null-@HashList			;$70
00200CAA FF74                       		dc.w	@Null-@HashList			;$80
00200CAC FF74                       		dc.w	@Null-@HashList			;$90
00200CAE FF74                       		dc.w	@Null-@HashList			;$A0
00200CB0 FF74                       		dc.w	@Null-@HashList			;$B0
00200CB2 FF74                       		dc.w	@Null-@HashList			;$C0
00200CB4 FF74                       		dc.w	@Null-@HashList			;$D0
00200CB6 FF74                       		dc.w	@Null-@HashList			;$E0
00200CB8 0000                       		dc.w	@FixSfx-@HashList		;$F0 - Finish SFX flag (SFX only)
00200CBA                            		even
00200CBA                            
00200CBA                            ; -------------------------------
00200CBA                            
00200CBA                            @DacStatus:
00200CBA 4E75                        rts
00200CBC                            
00200CBC                            ; -------------------------------
00200CBC                            
00200CBC                            @FM_Key:
00200CBC 0240 000F                  		and.w	#$F,d0
00200CC0 E948                       		lsl.w	#4,d0
00200CC2 1B40 000D                  		move.b	d0,Chn_FM_Key(a5)
00200CC6 4E75                       		rts
00200CC8                            
00200CC8                            ; -------------------------------
00200CC8                            
00200CC8                            @PSG:
00200CC8 4E75                        rts
00200CCA                            
00200CCA                            ; -------------------------------
00200CCA                            
00200CCA                            @FixSfx:
00200CCA                            ;    		btst	#bitPriority,(a6)
00200CCA                            ;   		bne	@Return
00200CCA                            		
00200CCA                            ;  		lea	(RAM_SMEG_Buffer),a3
00200CCA                            ;  		move.b	snd_flagsBGM(a3),snd_flags(a3)
00200CCA                            ; 		moveq 	#0,d0
00200CCA                            ;  		move.b	PsgLast(a3),d0
00200CCA                            ; 		add.w	#$E0,d0
00200CCA                            ; 		bsr	@PutPSG
00200CCA                            
00200CCA                            ;  		moveq	#0,d0
00200CCA                            ;  		move.b	LastPattChn(a6),d0
00200CCA                            ; 		bsr	SMEG_FindPrioSlot
00200CCA                            ;   		bclr	#0,(a3)
00200CCA                             		
00200CCA                            ;   		bclr	#bitSfxOn,(a6)				;SFX finished playing
00200CCA 4E75                       		rts
00200CCC                            		
00200CCC                            ; ================================================================
00200CCC                            ; -------------------------------
00200CCC                            ; Channel play
00200CCC                            ; -------------------------------
00200CCC                            
00200CCC                            @ChannelPlay:	
00200CCC 0C2D 00FF 0007             		cmp.b	#-1,Chn_ID(a5)
00200CD2 6700 0000                  		beq	@Disabled
00200CD6                            		
00200CD6                            ;                 moveq	#0,d0
00200CD6                            ; 		move.b	Chn_Note(a5),d0
00200CD6                            ; 		sub.w	#1,Chn_Portam(a5)
00200CD6                            ; 		tst.b	Chn_Portam(a5)
00200CD6                            ; 		beq.s	@NoUp
00200CD6                            ; 		add.b	Chn_Portam(a5),d0
00200CD6                            ; 		bra.s	@NoDown
00200CD6                            ; @NoUp:
00200CD6                            ; 		tst.b	Chn_Portam+1(a5)
00200CD6                            ; 		beq.s	@NoDown
00200CD6                            ; 		sub.b	Chn_Portam+1(a5),d0
00200CD6                            ; @NoDown:
00200CD6                            
00200CD6                            ; --------------------------------
00200CD6                            
00200CD6                            ; BGM: Block channel
00200CD6                            
00200CD6 0816 0000                  		btst 	#bitPriority,(a6)
00200CDA 6600                       		bne.s	@SFX_Check
00200CDC 6100 0000                  		bsr	SMEG_FindPrioSlot
00200CE0 4A13                         		tst.b	(a3)
00200CE2 6600 FEA8                    		bne	@Return
00200CE6                              		
00200CE6                            ; --------------------------------
00200CE6                            
00200CE6                            ; SFX: Check NoteOff/NoteCut
00200CE6                            ; then clear flag
00200CE6                            
00200CE6                            @SFX_Check:
00200CE6 0816 0000                  		btst 	#bitPriority,(a6)
00200CEA 6700                       		beq.s	@NotSFX
00200CEC                            ; 		cmp.b	#-1,chn_note(a5)
00200CEC                            ; 		beq	@DoIt
00200CEC 0C2D 00FE 000B             		cmp.b	#-2,chn_note(a5)
00200CF2 6600 0000                  		bne	@NotSFX
00200CF6                            @DoIt:
00200CF6 6100 0000                  		bsr	SMEG_FindPrioSlot
00200CFA 4213                         		clr.b	(a3)
00200CFC                            @NotSFX:
00200CFC                            
00200CFC                            ; --------------------------------
00200CFC                            
00200CFC 4A2D 0007                  		tst.b	Chn_ID(a5)
00200D00 6B00 0000                  		bmi	Chnl_PSG
00200D04 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00200D0A 6C00 0000                  		bge	@ChannelPlay_PCM
00200D0E 0C2D 0002 0007             		cmp.b	#FM_3,Chn_ID(a5)
00200D14 6700 0000                  		beq	@Chn3_ChkSpecial
00200D18 0C2D 0006 0007             		cmp.b	#FM_6,Chn_ID(a5)
00200D1E 6700 0000                  		beq	@Chn6_ChkSmpl
00200D22 6000 0000                  		bra	@ChnPlay_FM
00200D26                            		
00200D26                            ; -------------------------------
00200D26                            ; Play FM6 or DAC sample
00200D26                            ; -------------------------------
00200D26                            
00200D26                            @Chn6_ChkSmpl:
00200D26 082E 0000 0001             		btst	#bitFmDac,snd_flags(a6)
00200D2C 6700 0000                  		beq	@ChnPlay_FM6
00200D30 0C2D 00FF 000B             		cmp.b	#-1,chn_note(a5)
00200D36 6700 0000                  		beq	@StopSmpl
00200D3A 0C2D 00FE 000B             		cmp.b	#-2,chn_note(a5)
00200D40 6700 0000                  		beq	@StopSmpl
00200D44                            		
00200D44 7028                       		moveq	#$28,d0
00200D46 7206                       		moveq	#6,d1
00200D48 6100 0000                   		bsr	SMEG_Z80_Off
00200D4C 6100 0000                  		bsr	FM_RegWrite_1
00200D50 6100 0000                  		bsr	SMEG_FM_SetPan
00200D54 6100 0000                  		bsr	SMEG_Z80_On
00200D58                            		
00200D58                            ; 		btst 	#bitPriority,(a6)
00200D58                            ; 		beq.s	@MusicPrio3
00200D58                            ; 		bsr	SMEG_FindPrioSlot
00200D58                            ;   		btst	#0,(a3)
00200D58                            ;   		bne	@return
00200D58                            ; @MusicPrio3:
00200D58 6000 0000                  		bra	Audio_Sample_Play
00200D5C                            
00200D5C                            ; Stop
00200D5C                            
00200D5C                            @StopSmpl:
00200D5C                            ; 		btst 	#bitPriority,(a6)
00200D5C                            ; 		bne.s	@NotSfxDAC
00200D5C                            ; 		bsr	SMEG_FindPrioSlot
00200D5C                            ;   		bclr	#0,(a3)
00200D5C                            ; @NotSfxDAC:
00200D5C 6000 0000                  		bra	Audio_Sample_Stop
00200D60                            		
00200D60                            ; -------------------------------
00200D60                            ; Play FM6 Normally
00200D60                            ; -------------------------------
00200D60                            
00200D60                            @ChnPlay_FM6:
00200D60 103C 002B                  		move.b	#$2B,d0
00200D64 123C 0000                  		move.b	#$00,d1
00200D68 6100 0000                  		bsr	SMEG_Z80_Off
00200D6C 6100 0000                  		bsr	FM_RegWrite_1
00200D70 6100 0000                  		bsr	SMEG_Z80_On
00200D74 6100 0000                  		bsr	Audio_Sample_Stop
00200D78 6000 0000                  		bra	@ChnPlay_FM
00200D7C                            		
00200D7C                            ; -------------------------------
00200D7C                            ; Play FM3 Normally
00200D7C                            ; -------------------------------
00200D7C                            
00200D7C                            @Chn3_ChkSpecial:
00200D7C 6100 0000                  		bsr	SMEG_Z80_Off
00200D80 6100 0000                  		bsr	SMEG_FM_SetPan
00200D84 6100 0000                  		bsr	SMEG_Z80_On
00200D88                            		
00200D88 082E 0003 0001             		btst	#bitSpecial3,snd_flags(a6)
00200D8E 6700 0000                  		beq	@NoSpecial3
00200D92                            		
00200D92 6100 0000                  		bsr	ChnlFM_srchIns
00200D96 0C42 FFFF                  		cmp.w	#-1,d2
00200D9A 6700 0000                  		beq	@NoSpecial3
00200D9E 0802 0006                   		btst	#6,d2
00200DA2 6700 0000                   		beq	@NoSpecial3
00200DA6                            		
00200DA6                            ;   		moveq	#$22,d0
00200DA6                            ;  		move.w	#%00001011,d1
00200DA6                            ; 		bsr	FM_RegWrite_1
00200DA6                            		
00200DA6 7027                         		moveq	#$27,d0		;CH3 enable
00200DA8 323C 0040                   		move.w	#%01000000,d1
00200DAC 6100 0000                   		bsr	SMEG_Z80_Off
00200DB0 6100 0000                  		bsr	FM_RegWrite_1
00200DB4 6100 0000                  		bsr	SMEG_Z80_On
00200DB8                            		
00200DB8 203C A9AD AAAE              		move.l	#$A9ADAAAE,d0
00200DBE 322B 000E                   		move.w	$E(a3),d1
00200DC2 E059                        		ror.w	#8,d1
00200DC4 6100 0000                   		bsr	SMEG_Z80_Off
00200DC8 6100 0000                  		bsr	FM_RegWrite_1
00200DCC E088                       		lsr.l	#8,d0
00200DCE E089                       		lsr.l	#8,d1
00200DD0 6100 0000                  		bsr	FM_RegWrite_1
00200DD4 E088                       		lsr.l	#8,d0
00200DD6 322B 000C                   		move.w	$C(a3),d1
00200DDA E059                        		ror.w	#8,d1
00200DDC 6100 0000                  		bsr	FM_RegWrite_1
00200DE0 E088                       		lsr.l	#8,d0
00200DE2 E089                       		lsr.l	#8,d1
00200DE4 6100 0000                  		bsr	FM_RegWrite_1	
00200DE8 6100 0000                    		bsr	SMEG_Z80_On
00200DEC                              		
00200DEC 203C A2A6 A8AC              		move.l	#$A2A6A8AC,d0
00200DF2 322B 000A                   		move.w	$A(a3),d1
00200DF6 E059                        		ror.w	#8,d1
00200DF8 6100 0000                   		bsr	SMEG_Z80_Off
00200DFC 6100 0000                  		bsr	FM_RegWrite_1
00200E00 E088                       		lsr.l	#8,d0
00200E02 E089                       		lsr.l	#8,d1
00200E04 6100 0000                  		bsr	FM_RegWrite_1
00200E08 E088                       		lsr.l	#8,d0
00200E0A 322B 0008                   		move.w	8(a3),d1
00200E0E E059                        		ror.w	#8,d1
00200E10 6100 0000                  		bsr	FM_RegWrite_1
00200E14 E088                       		lsr.l	#8,d0
00200E16 E089                       		lsr.l	#8,d1
00200E18 6100 0000                  		bsr	FM_RegWrite_1
00200E1C 6100 0000                  		bsr	SMEG_Z80_On
00200E20                            		
00200E20 7028                       		moveq	#$28,d0
00200E22 7200                       		moveq	#0,d1
00200E24 122D 000D                  		move.b	Chn_FM_Key(a5),d1
00200E28 822D 0007                  		or.b	Chn_ID(a5),d1
00200E2C 6100 0000                  		bsr	SMEG_Z80_Off
00200E30 6100 0000                  		bsr	FM_RegWrite_1
00200E34 6000 0000                   		bra	SMEG_Z80_On
00200E38                             		
00200E38                            @NoSpecial3:
00200E38 7200                       		moveq	#0,d1
00200E3A 7027                         		moveq	#$27,d0
00200E3C 6100 0000                   		bsr	SMEG_Z80_Off
00200E40 6100 0000                  		bsr	FM_RegWrite_1
00200E44 6100 0000                   		bsr	SMEG_Z80_On
00200E48                            		
00200E48                            ; -------------------------------
00200E48                            ; Play FM1-FM5 normally
00200E48                            ; -------------------------------
00200E48                            
00200E48                            @ChnPlay_FM:
00200E48 6100 0000                  		bsr	SMEG_Z80_Off
00200E4C 6100 0000                  		bsr	SMEG_FM_SetPan
00200E50 6100 0000                  		bsr	SMEG_Z80_On
00200E54                            		
00200E54 7000                        		moveq	#0,d0
00200E56 102D 000B                  		move.b	chn_note(a5),d0
00200E5A 0C00 00FF                  		cmp.b	#-1,d0
00200E5E 6700 0000                  		beq	SMEG_FM_KeysOff
00200E62 0C00 00FE                  		cmp.b	#-2,d0
00200E66 6700 0000                  		beq	SMEG_FM_TotLvlOff
00200E6A                            		
00200E6A 6100 0000                  		bsr	SMEG_FM_KeysOff
00200E6E                            		
00200E6E 7000                       		moveq	#0,d0
00200E70 7200                       		moveq	#0,d1
00200E72 102D 000B                  		move.b	chn_note(a5),d0
00200E76 D040                       		add.w	d0,d0
00200E78 45F9 0000 0000              		lea	(FreqList_FM),a2
00200E7E 3832 0000                  		move.w	(a2,d0.w),d4
00200E82 3B44 0004                  		move.w	d4,Chn_Portam(a5)
00200E86 6000 0000                  		bra	SMEG_SetFreqFM
00200E8A                            @Disabled:
00200E8A 4E75                       		rts
00200E8C                            
00200E8C                            ; -------------------------------
00200E8C                            ; Play PCM
00200E8C                            ; -------------------------------
00200E8C                            
00200E8C                            @ChannelPlay_PCM:	
00200E8C                            ; 		if MCD
00200E8C                            ; 		
00200E8C                            ; 		tst.l	SongPcmSamp(a6)
00200E8C                            ; 		beq.s	@ReturnPCM
00200E8C                            ; 		bmi.s	@ReturnPCM
00200E8C                            ; 		
00200E8C                            ;  		moveq	#0,d1
00200E8C                            ;  		move.b	Chn_ID(a5),d1
00200E8C                            ;    		and.w	#$F,d1
00200E8C                            ;  		move.b	d1,($A12000+CommDataM)
00200E8C                            ;  		move.b	Chn_Pan(a5),d1
00200E8C                            ;  		move.b	d1,($A12000+CommDataM+1)
00200E8C                            ;  		moveq	#CdTask_SetPan,d0
00200E8C                            ;  		bsr	SMEG_CD_Call
00200E8C                            ;  		
00200E8C                            ; 		moveq	#0,d1
00200E8C                            ; 		move.b	Chn_ID(a5),d1
00200E8C                            ; 		and.b	#$F,d1
00200E8C                            ; 		move.b	d1,($A12000+CommDataM)
00200E8C                            ; 		move.w	Chn_Freq(a5),($A12000+CommDataM+2)
00200E8C                            ; 		moveq	#CdTask_SetFreq,d0
00200E8C                            ; 		bsr	SMEG_CD_Call
00200E8C                            ; 		bset	d1,PcmChnOnOff(a6)
00200E8C                            ; 		move.b	PcmChnOnOff(a6),($A12000+CommDataM)
00200E8C                            ; 		moveq	#CdTask_SetOnOff,d0
00200E8C                            ; 		bsr	SMEG_CD_Call
00200E8C                            ; 		
00200E8C                            ; @ReturnPCM:
00200E8C                            ;  		elseif MARS
00200E8C                            ; 
00200E8C                            ; 		tst.l	SongPcmSamp(a6)
00200E8C                            ; 		beq.s	@ReturnPCM
00200E8C                            ; 		bmi.s	@ReturnPCM
00200E8C                            ; 		
00200E8C                            ;   		moveq	#0,d1
00200E8C                            ;   		moveq	#0,d2
00200E8C                            ;        		move.b	Chn_ID(a5),d1
00200E8C                            ;      		and.w	#$F,d1
00200E8C                            ;       		or.b	Chn_Pan(a5),d1
00200E8C                            ;       		move.b	Chn_Note(a5),d2
00200E8C                            ;   		move.b	d1,(marsreg+comm2)			; Pan+Channel set
00200E8C                            ;   		move.b	d2,(marsreg+comm2+1)			; Note
00200E8C                            ;   		moveq 	#marscall_Play,d0
00200E8C                            ;   		bsr	SMEG_MARS_Call
00200E8C                            ; @ReturnPCM:
00200E8C                            ;  		endif
00200E8C                             		
00200E8C 4E75                       		rts
00200E8E                            
00200E8E                            ; --------------------------
00200E8E                            ; Set FM Frequency
00200E8E                            ; autodetected channel
00200E8E                            ; 
00200E8E                            ; d4 - Freq
00200E8E                            ; --------------------------
00200E8E                            
00200E8E                            SMEG_SetFreqFM:
00200E8E 7A00                       		moveq	#0,d5
00200E90 1A2D 0007                  		move.b	Chn_ID(a5),d5
00200E94 0C05 0004                  		cmp.b	#4,d5
00200E98 6D00                       		blt.s	@FirstFM
00200E9A 0405 0004                  		sub.b	#4,d5
00200E9E                            @FirstFM:
00200E9E 303C 00A4                  		move.w	#$A4,d0
00200EA2 D005                       		add.b	d5,d0
00200EA4 7200                       		moveq	#0,d1
00200EA6 E15C                       		rol.w	#8,d4
00200EA8 1204                       		move.b	d4,d1
00200EAA                            		
00200EAA 6100 0000                  		bsr	SMEG_Z80_Off
00200EAE 6100 0000                  		bsr	SMEG_FM_FindWrite
00200EB2 303C 00A0                  		move.w	#$A0,d0
00200EB6 D005                       		add.b	d5,d0
00200EB8 7200                       		moveq	#0,d1
00200EBA E15C                       		rol.w	#8,d4
00200EBC 1204                       		move.b	d4,d1
00200EBE 6100 0000                  		bsr	SMEG_FM_FindWrite
00200EC2                            
00200EC2 7028                       		moveq	#$28,d0
00200EC4 7200                       		moveq	#0,d1
00200EC6 122D 000D                  		move.b	Chn_FM_Key(a5),d1
00200ECA 822D 0007                  		or.b	Chn_ID(a5),d1
00200ECE 6100 0000                  		bsr	FM_RegWrite_1
00200ED2 6000 0000                  		bra	SMEG_Z80_On
00200ED6                            		
00200ED6                            ; Turn Total Level (the volume) off 
00200ED6                            
00200ED6                            SMEG_FM_TotLvlOff:
00200ED6 162D 0007                   		move.b	chn_id(a5),d3
00200EDA 0243 0003                   		and.w	#%11,d3
00200EDE 203C 4C44 4840             		move.l	#$4C444840,d0
00200EE4 323C 007F                  		move.w	#$7F,d1
00200EE8 6100 0000                   		bsr	SMEG_Z80_OFF
00200EEC 8003                        		or.b	d3,d0
00200EEE 6100 0000                   		bsr	SMEG_FM_FindWrite	;oops.
00200EF2 E088                        		lsr.l	#8,d0
00200EF4 8003                        		or.b	d3,d0
00200EF6 6100 0000                    		bsr	SMEG_FM_FindWrite
00200EFA E088                        		lsr.l	#8,d0
00200EFC 8003                        		or.b	d3,d0
00200EFE 6100 0000                    		bsr	SMEG_FM_FindWrite
00200F02 E088                        		lsr.l	#8,d0
00200F04 8003                        		or.b	d3,d0
00200F06 6100 0000                   		bsr	SMEG_FM_FindWrite
00200F0A 6100 0000                   		bsr	SMEG_Z80_On
00200F0E                             		
00200F0E                            ; Turn FM Keys off
00200F0E                            
00200F0E                            SMEG_FM_KeysOff:
00200F0E 7028                       		moveq	#$28,d0
00200F10 7200                       		moveq	#0,d1
00200F12 D22D 0007                  		add.b	Chn_ID(a5),d1
00200F16 6100 0000                   		bsr	SMEG_Z80_Off
00200F1A 6100 0000                  		bsr	FM_RegWrite_1
00200F1E 6000 0000                  		bra	SMEG_Z80_On
00200F22                            		
00200F22                            ; ----------------------------
00200F22                            ; PSG Channels
00200F22                            ; ----------------------------
00200F22                            
00200F22                            Chnl_PSG:
00200F22 122D 0007                  		move.b	Chn_ID(a5),d1
00200F26 0C2D 00E0 0007             		cmp.b	#NOISE,Chn_ID(a5)
00200F2C 6700                       		beq.s	Chnl_Noise
00200F2E                            
00200F2E 3601                       		move.w	d1,d3
00200F30 0043 001F                  		or.w	#$1F,d3
00200F34 102D 000B                  		move.b	chn_note(a5),d0
00200F38 0C00 00FE                  		cmp.b	#-2,d0
00200F3C 6700                       		beq.s	ChnPsg_Rest
00200F3E 0C00 00FF                  		cmp.b	#-1,d0
00200F42 6700                       		beq.s	ChnPsg_Rest
00200F44                            		
00200F44 45F9 0000 0000             		lea	(FreqList_PSG),a2
00200F4A D040                       		add.w	d0,d0
00200F4C 3032 0000                  		move.w	(a2,d0.w),d0
00200F50 3B40 0004                  		move.w	d0,Chn_Portam(a5)
00200F54 6100 0000                  		bsr	ChnPsg_NoteFreq
00200F58                            		
00200F58                            ChnPsg_SetVol:
00200F58 0043 0010                  		or.w	#$10,d3
00200F5C 0043 000F                  		or.w	#$F,d3
00200F60 4A2D 0009                  		tst.b	chn_vol(a5)
00200F64 6700                       		beq.s	ChnPsg_DoVol
00200F66 0243 00F0                  		and.w	#$F0,d3
00200F6A 0C2D 0040 0009             		cmp.b	#64,chn_vol(a5)
00200F70 6C00                         		bge.s	ChnPsg_DoVol
00200F72 7000                         		moveq	#0,d0
00200F74 102D 0009                     		move.b	chn_vol(a5),d0
00200F78 4440                        		neg.w	d0
00200F7A E448                          		lsr.w	#2,d0
00200F7C 0240 000F                    		and.w	#%1111,d0
00200F80 8640                         		or.w	d0,d3
00200F82                            
00200F82                            
00200F82                            ChnPsg_DoVol:
00200F82 13C3 00C0 0011              		move.b	d3,(sound_psg)
00200F88                            Chnl_Return:
00200F88 4E75                       		rts
00200F8A                            		
00200F8A                            ChnPsg_Rest:
00200F8A 61F6                        		bsr.s	ChnPsg_DoVol
00200F8C                            ; 		btst 	#bitPriority,(a6)
00200F8C                            ; 		bne.s	Chnl_Return
00200F8C                            ; 		bsr	SMEG_FindPrioSlot
00200F8C                            ;   		bclr	#0,(a3)
00200F8C 4E75                         		rts
00200F8E                              		
00200F8E                            ; ----------------------------
00200F8E                            ; PSG Noise channel
00200F8E                            ; ----------------------------
00200F8E                            
00200F8E                            Chnl_NOISE:
00200F8E 246E 0010                  		movea.l	snd_instr(a6),a2
00200F92 302A 0004                  		move.w	instDNoise(a2),d0
00200F96 D4C0                       		adda	d0,a2
00200F98                            		
00200F98 303C 0000                   		move.w	#%000,d0
00200F9C                            @next:
00200F9C 4A52                       		tst.w	(a2)
00200F9E 6B00                       		bmi.s	@default
00200FA0 7400                       		moveq	#0,d2
00200FA2 142D 0008                  		move.b	chn_inst(a5),d2
00200FA6 B452                       		cmp.w	(a2),d2
00200FA8 6700                       		beq.s	@found
00200FAA D4FC 0004                  		adda	#4,a2
00200FAE 60EC                       		bra.s	@next
00200FB0                            @found:
00200FB0 302A 0002                   		move.w	2(a2),d0
00200FB4                            
00200FB4                            @default:
00200FB4 323C 00E0                  		move.w	#$E0,d1
00200FB8 3601                       		move.w	d1,d3
00200FBA 0043 001F                  		or.w	#$1F,d3
00200FBE                            
00200FBE 142D 000B                  		move.b	chn_note(a5),d2
00200FC2 0C02 00FF                  		cmp.b	#-1,d2
00200FC6 67C2                       		beq.s	ChnPsg_Rest
00200FC8 0C02 00FE                  		cmp.b	#-2,d2
00200FCC 67BC                       		beq.s	ChnPsg_Rest
00200FCE                            		
00200FCE 08AE 0002 0001             		bclr	#bitTone3,snd_flags(a6)
00200FD4 0C40 0003                  		cmp.w	#%011,d0
00200FD8 6700                       		beq.s	@valdnoise
00200FDA 0C40 0007                  		cmp.w	#%111,d0
00200FDE 6600                       		bne.s	@deftone
00200FE0                            @valdnoise:
00200FE0 08EE 0002 0001             		bset	#bitTone3,snd_flags(a6)
00200FE6 13FC 00DF 00C0 0011        		move.b	#$C0|$1F,(sound_psg)
00200FEE 8240                       		or.w	d0,d1
00200FF0 13C1 00C0 0011             		move.b	d1,(sound_psg)
00200FF6                            		
00200FF6 102D 000B                  		move.b	chn_note(a5),d0
00200FFA 0C00 00FF                  		cmp.b	#-1,d0
00200FFE 6700 FF8A                  		beq	ChnPsg_Rest
00201002 0C00 00FE                  		cmp.b	#-2,d0
00201006 6700 FF82                  		beq	ChnPsg_Rest
0020100A 0640 000C                  		add.w	#12,d0		; TODO: checar
0020100E 323C 00C0                  		move.w	#$C0,d1		; PSG3 freq
00201012                            		
00201012 45F9 0000 0000             		lea	(FreqList_PSG),a2
00201018 D040                       		add.w	d0,d0
0020101A 3032 0000                  		move.w	(a2,d0.w),d0
0020101E 3B40 0004                  		move.w	d0,Chn_Portam(a5)
00201022 6000 0000                  		bra	ChnPsg_NoteFreq
00201026                            		
00201026                            ; 		move.w	#$E0,d3		; NOISE volume
00201026                            ; 		bra	ChnPsg_SetVol
00201026                            		
00201026                            @deftone:
00201026 3601                       		move.w	d1,d3
00201028 3400                       		move.w	d0,d2
0020102A 0242 0007                  		and.w	#%111,d2
0020102E 8242                       		or.w	d2,d1
00201030 13C1 00C0 0011             		move.b	d1,(sound_psg)
00201036 4E75                       		rts
00201038                            		
00201038                            ; 		move.w	#$E0,d3
00201038                            ; 		bra	ChnPsg_SetVol
00201038                            		
00201038                            ; ----------------------------
00201038                            ; PSG Noise channel Tone 3
00201038                            ; 
00201038                            ; input:
00201038                            ; d0 - freq
00201038                            ; d1 - channel
00201038                            ; 
00201038                            ; returns:
00201038                            ; d3 - last psg freq | channel
00201038                            ; ----------------------------
00201038                            
00201038                            ChnPsg_NoteFreq:
00201038 3601                       		move.w	d1,d3
0020103A 3400                       		move.w	d0,d2
0020103C 0242 000F                  		and.w	#%1111,d2
00201040 8242                       		or.w	d2,d1
00201042 13C1 00C0 0011             		move.b	d1,(sound_psg)
00201048 E848                       		lsr.w	#4,d0
0020104A 0240 003F                  		and.w	#%00111111,d0
0020104E 13C0 00C0 0011             		move.b	d0,(sound_psg)
00201054 4E75                       		rts
00201056                            
00201056                            ; -------------------------------
00201056                            ; PSG Frequencies
00201056                            ; -------------------------------
00201056                            
00201056                            FreqList_PSG:
00201056 0000                       		dc.w 0		;C-0 $0
00201058 0000                       		dc.w 0
0020105A 0000                       		dc.w 0
0020105C 0000                       		dc.w 0
0020105E 0000                       		dc.w 0
00201060 0000                       		dc.w 0
00201062 0000                       		dc.w 0
00201064 0000                       		dc.w 0
00201066 0000                       		dc.w 0
00201068 0000                       		dc.w 0
0020106A 0000                       		dc.w 0
0020106C 0000                       		dc.w 0
0020106E                            		
0020106E 0000                       		dc.w 0		;C-1 $C
00201070 0000                       		dc.w 0
00201072 0000                       		dc.w 0
00201074 0000                       		dc.w 0
00201076 0000                       		dc.w 0
00201078 0000                       		dc.w 0
0020107A 0000                       		dc.w 0
0020107C 0000                       		dc.w 0
0020107E 0000                       		dc.w 0
00201080 0000                       		dc.w 0
00201082 0000                       		dc.w 0
00201084 0000                       		dc.w 0
00201086                            		
00201086 0000                       		dc.w 0		;C-2 $18
00201088 0000                       		dc.w 0
0020108A 0000                       		dc.w 0
0020108C 0000                       		dc.w 0
0020108E 0000                       		dc.w 0
00201090 0000                       		dc.w 0
00201092 0000                       		dc.w 0
00201094 0000                       		dc.w 0
00201096 0000                       		dc.w 0
00201098 0000                       		dc.w 0
0020109A 0000                       		dc.w 0
0020109C 0000                       		dc.w 0
0020109E                            
0020109E 0000                       		dc.w 0		;C-3 $24
002010A0 0000                       		dc.w 0
002010A2 0000                       		dc.w 0
002010A4 0000                       		dc.w 0
002010A6 0000                       		dc.w 0
002010A8 0000                       		dc.w 0
002010AA 0000                       		dc.w 0
002010AC 0000                       		dc.w 0
002010AE 0000                       		dc.w 0
002010B0 03F8                       		dc.w $3F8
002010B2 03BF                                       dc.w $3BF
002010B4 0389                                       dc.w $389
002010B6                                            
002010B6 0356                       		dc.w $356	;C-4 $30
002010B8 0326                                       dc.w $326
002010BA 02F9                                       dc.w $2F9
002010BC 02CE                                       dc.w $2CE
002010BE 02A5                                       dc.w $2A5
002010C0 0280                                       dc.w $280
002010C2 025C                                       dc.w $25C
002010C4 023A                                       dc.w $23A
002010C6 021A                                       dc.w $21A
002010C8 01FB                       		dc.w $1FB
002010CA 01DF                                       dc.w $1DF
002010CC 01C4                                       dc.w $1C4
002010CE                                            
002010CE 01AB                                       dc.w $1AB	;C-5 $3C
002010D0 0193                                       dc.w $193
002010D2 017D                                       dc.w $17D
002010D4 0167                                       dc.w $167
002010D6 0153                                       dc.w $153
002010D8 0140                                       dc.w $140
002010DA 012E                       		dc.w $12E
002010DC 011D                                       dc.w $11D
002010DE 010D                                       dc.w $10D
002010E0 00FE                                       dc.w $FE
002010E2 00EF                                       dc.w $EF
002010E4 00E2                                       dc.w $E2
002010E6                                            
002010E6 00D6                                       dc.w $D6	;C-6 $48
002010E8 00C9                                       dc.w $C9
002010EA 00BE                                       dc.w $BE
002010EC 00B4                                       dc.w $B4
002010EE 00A9                       		dc.w $A9
002010F0 00A0                                       dc.w $A0
002010F2 0097                                       dc.w $97
002010F4 008F                                       dc.w $8F
002010F6 0087                                       dc.w $87
002010F8 007F                                       dc.w $7F
002010FA 0078                                       dc.w $78
002010FC 0071                                       dc.w $71
002010FE                                            
002010FE 006B                                       dc.w $6B	;C-7 $54
00201100 0065                                       dc.w $65
00201102 005F                       		dc.w $5F
00201104 005A                                       dc.w $5A
00201106 0055                                       dc.w $55
00201108 0050                                       dc.w $50
0020110A 004B                                       dc.w $4B
0020110C 0047                                       dc.w $47
0020110E 0043                                       dc.w $43
00201110 0040                                       dc.w $40
00201112 003C                                       dc.w $3C
00201114 0039                                       dc.w $39
00201116                                            
00201116 0036                       		dc.w $36	;C-8 $60
00201118 0033                                       dc.w $33
0020111A 0030                                       dc.w $30
0020111C 002D                                       dc.w $2D
0020111E 002B                                       dc.w $2B
00201120 0028                                       dc.w $28
00201122 0026                                       dc.w $26
00201124 0024                                       dc.w $24
00201126 0022                                       dc.w $22
00201128 0020                                       dc.w $20
0020112A 001F                       		dc.w $1F
0020112C 001D                                       dc.w $1D
0020112E                                            
0020112E 001B                                       dc.w $1B	;C-9 $6C
00201130 001A                                       dc.w $1A
00201132 0018                                       dc.w $18
00201134 0017                                       dc.w $17
00201136 0016                                       dc.w $16
00201138 0015                                       dc.w $15
0020113A 0013                                       dc.w $13
0020113C 0012                                       dc.w $12
0020113E 0011                       		dc.w $11
00201140 0010                        		dc.w $10 ;Custom...
00201142 0009                        		dc.w $9
00201144 0008                        		dc.w $8
00201146                            
00201146                            		even
00201146                            		
00201146                            ; -------------------------------
00201146                            ; FM Frequencies
00201146                            ; -------------------------------
00201146                            
00201146                            FreqList_FM:
00201146                            ; 		dc.w $269	;NULL
00201146 028D                       		dc.w $28d	;C-0 $00
00201148 02B4                       		dc.w $2b4
0020114A 02DD                       		dc.w $2dd
0020114C 0309                       		dc.w $309
0020114E 0337                       		dc.w $337
00201150 0368                       		dc.w $368
00201152 039C                       		dc.w $39c
00201154 03D3                       		dc.w $3d3
00201156 040D                       		dc.w $40d
00201158 044B                       		dc.w $44b
0020115A 048C                       		dc.w $48c
0020115C 0269                       		dc.w $269
0020115E 028D                       		dc.w $28d	;C-1 $0C
00201160 02B4                       		dc.w $2b4
00201162 02DD                       		dc.w $2dd
00201164 0309                       		dc.w $309
00201166 0337                       		dc.w $337
00201168 0368                       		dc.w $368
0020116A 039C                       		dc.w $39c
0020116C 03D3                       		dc.w $3d3
0020116E 040D                       		dc.w $40d
00201170 044B                       		dc.w $44b
00201172 048C                       		dc.w $48c
00201174 0A69                       		dc.w $a69
00201176 0A8D                       		dc.w $a8d	;C-2 $18
00201178 0AB4                       		dc.w $ab4
0020117A 0ADD                       		dc.w $add
0020117C 0B09                       		dc.w $b09
0020117E 0B37                       		dc.w $b37
00201180 0B68                       		dc.w $b68
00201182 0B9C                       		dc.w $b9c
00201184 0BD3                       		dc.w $bd3
00201186 0C0D                       		dc.w $c0d
00201188 0C4B                       		dc.w $c4b
0020118A 0C8C                       		dc.w $c8c
0020118C 1269                       		dc.w $1269
0020118E 128D                       		dc.w $128d	;C-3 $24
00201190 12B4                       		dc.w $12b4
00201192 12DD                       		dc.w $12dd
00201194 1309                       		dc.w $1309
00201196 1337                       		dc.w $1337
00201198 1368                       		dc.w $1368
0020119A 139C                       		dc.w $139c
0020119C 13D3                       		dc.w $13d3
0020119E 140D                       		dc.w $140d
002011A0 144B                       		dc.w $144b
002011A2 148C                       		dc.w $148c
002011A4 1A69                       		dc.w $1a69
002011A6 1A8D                       		dc.w $1a8d	;C-4 $30
002011A8 1AB4                       		dc.w $1ab4
002011AA 1ADD                       		dc.w $1add
002011AC 1B09                       		dc.w $1b09
002011AE 1B37                       		dc.w $1b37
002011B0 1B68                       		dc.w $1b68
002011B2 1B9C                       		dc.w $1b9c
002011B4 1BD3                       		dc.w $1bd3
002011B6 1C0D                       		dc.w $1c0d
002011B8 1C4B                       		dc.w $1c4b
002011BA 1C8C                       		dc.w $1c8c
002011BC 2269                       		dc.w $2269
002011BE 228D                       		dc.w $228d	;C-5 $3C
002011C0 22B4                       		dc.w $22b4
002011C2 22DD                       		dc.w $22dd
002011C4 2309                       		dc.w $2309
002011C6 2337                       		dc.w $2337
002011C8 2368                       		dc.w $2368
002011CA 239C                       		dc.w $239c
002011CC 23D3                       		dc.w $23d3
002011CE 240D                       		dc.w $240d
002011D0 244B                       		dc.w $244b
002011D2 248C                       		dc.w $248c
002011D4 2A69                       		dc.w $2a69
002011D6 2A8D                       		dc.w $2a8d	;C-6 $48
002011D8 2AB4                       		dc.w $2ab4
002011DA 2ADD                       		dc.w $2add
002011DC 2B09                       		dc.w $2b09
002011DE 2B37                       		dc.w $2b37
002011E0 2B68                       		dc.w $2b68
002011E2 2B9C                       		dc.w $2b9c
002011E4 2BD3                       		dc.w $2bd3
002011E6 2C0D                       		dc.w $2c0d
002011E8 2C4B                       		dc.w $2c4b
002011EA 2C8C                       		dc.w $2c8c
002011EC 3269                       		dc.w $3269	;C-7 $54
002011EE 328D                       		dc.w $328d
002011F0 32B4                       		dc.w $32b4
002011F2 32DD                       		dc.w $32dd
002011F4 3309                       		dc.w $3309
002011F6 3337                       		dc.w $3337
002011F8 3368                       		dc.w $3368
002011FA 339C                       		dc.w $339c
002011FC 33D3                       		dc.w $33d3
002011FE 340D                       		dc.w $340d
00201200 344B                       		dc.w $344b
00201202 348C                       		dc.w $348c
00201204                            		even
00201204                            		
00201204                            ; ; -------------------------------
00201204                            ; ; Mute/Rest channel
00201204                            ; ; -------------------------------
00201204                            ; 
00201204                            ; SMEG_ChannelRest:
00201204                            ; 		cmp.b	#$FF,Chn_ID(a5)
00201204                            ; 		beq	@Return
00201204                            ; 		
00201204                            ; ; 		btst	#bitPriority,(a6)
00201204                            ; ; 		beq.s	@SFX_Mode
00201204                            ; ; 		btst	#bitSfxOn,(RAM_SMEG_SfxBuff)
00201204                            ; ; 		beq.s	@SFX_Mode
00201204                            ; ;  		lea	(RAM_SMEG_PrioList),a3
00201204                            ; ;  		moveq	#0,d1
00201204                            ; ;  		move.b	LastPattChn(a6),d1
00201204                            ; ; 		btst	#0,(a3,d1.w)
00201204                            ; ; 		bne	@Return
00201204                            ; ; @SFX_Mode:
00201204                            ; 
00201204                            ; 		tst.b	Chn_ID(a5)
00201204                            ; 		bmi.s	@PSG_Rest
00201204                            ; 
00201204                            ;                 cmp.b	#6,Chn_ID(a5)
00201204                            ;                 bne.s	@NoChk6
00201204                            ; 		btst	#bitFmDac,snd_flags(a6)
00201204                            ; 		bne.s	@DAC_Rest
00201204                            ; 
00201204                            ; @NoChk6:
00201204                            ; 		cmp.b	#PCM_1,Chn_ID(a5)
00201204                            ; 		bge	@PCM_Rest
00201204                            ; 		
00201204                            ; 		moveq	#$28,d0
00201204                            ;                 moveq	#0,d1
00201204                            ; 		move.b	Chn_ID(a5),d1
00201204                            ; 		bsr	SMEG_Z80_Off
00201204                            ; 		bsr	FM_RegWrite_1
00201204                            ; 		bsr	SMEG_Z80_On
00201204                            ; 
00201204                            ; @Return:
00201204                            ; 		rts
00201204                            ; 
00201204                            ; ; -------------------------------
00201204                            ; ; PSG Rest
00201204                            ; ; -------------------------------
00201204                            ; 
00201204                            ; @PSG_Rest:
00201204                            ; 		moveq	#0,d0
00201204                            ; 		move.b	Chn_ID(a5),d0
00201204                            ; 		add.b	#$1F,d0
00201204                            ; 		move.b	d0,($C00011)
00201204                            ; 
00201204                            ; @Disabled:
00201204                            ; 		rts
00201204                            ; 
00201204                            ; ; -------------------------------
00201204                            ; ; DAC Rest
00201204                            ; ; -------------------------------
00201204                            ; 
00201204                            ; @DAC_Rest:
00201204                            ;   		bsr	SMEG_Z80_Off
00201204                            ; 		moveq	#$2B,d0
00201204                            ;                 moveq	#0,d1
00201204                            ;   		bsr	FM_RegWrite_1
00201204                            ; 
00201204                            ; 		moveq	#0,d0
00201204                            ; 		move.b	d0,($A001E0+$D)
00201204                            ; 		bsr	SMEG_Z80_On
00201204                            ; 		rts
00201204                            ; 
00201204                            ; ; -------------------------------
00201204                            ; ; PCM Rest
00201204                            ; ; -------------------------------
00201204                            ; 
00201204                            ; @PCM_Rest:
00201204                            ;  		if MCD
00201204                            ;  		
00201204                            ; 		tst.l	SongPcmSamp(a6)
00201204                            ; 		beq.s	@ReturnPCM
00201204                            ; 		bmi.s	@ReturnPCM
00201204                            ; 		
00201204                            ; 		moveq	#0,d1
00201204                            ; 		move.b	Chn_ID(a5),d1
00201204                            ; 		and.b	#$F,d1
00201204                            ; 		bclr	d1,PcmChnOnOff(a6)
00201204                            ; 		move.b	PcmChnOnOff(a6),($A12000+CommDataM)
00201204                            ; 		moveq	#CdTask_SetOnOff,d0
00201204                            ; 		bsr	SMEG_CD_Call
00201204                            ; 		
00201204                            ;  		elseif MARS
00201204                            ;  		
00201204                            ; 		tst.l	SongPcmSamp(a6)
00201204                            ; 		beq.s	@ReturnPCM
00201204                            ; 		bmi.s	@ReturnPCM
00201204                            ; 		
00201204                            ;   		moveq	#0,d0
00201204                            ;   		move.b	Chn_ID(a5),d0
00201204                            ;   		and.w	#$F,d0
00201204                            ;   		move.b	d0,(marsreg+comm2)
00201204                            ;   		moveq	#marscall_Stop,d0
00201204                            ;   		bsr	SMEG_MARS_Call
00201204                            ;     		
00201204                            ; 		endif
00201204                            ; @ReturnPCM:
00201204                            ; 		rts
00201204                            		
00201204                            ; ================================================================
00201204                            ; Subs
00201204                            ; ================================================================
00201204                            
00201204                            ; -------------------------------------------
00201204                            ; Extra channels communication
00201204                            ; -------------------------------------------
00201204                            
00201204                            SMEG_CD_Call:
00201204                            ; 		bra	SubCpu_Task_Wait
00201204 4E75                       		rts
00201206                            
00201206                            SMEG_MARS_Call:
00201206 4E75                        		rts
00201208                             		
00201208                            ; -------------------------------------------
00201208                            ; Set instrument
00201208                            ; -------------------------------------------
00201208                            
00201208                            SMEG_SetVoice:
00201208 0C2D 00FF 0007             		cmp.b	#-1,Chn_ID(a5)
0020120E 6700 0000                  		beq	@Return
00201212                            		
00201212 0816 0000                  		btst	#bitPriority,(a6)
00201216 6600                       		bne.s	@SFX_ModeV
00201218 6100 0000                  		bsr	SMEG_FindPrioSlot
0020121C 4A13                         		tst.b	(a3)
0020121E 6600 0000                    		bne	@Return
00201222                            @SFX_ModeV:
00201222                            
00201222                            
00201222 4AAE 0010                  		tst.l	snd_instr(a6)
00201226 6700 0000                  		beq	@Return
0020122A                            		
0020122A 4A2D 0007                  		tst.b	Chn_ID(a5)
0020122E 6B00                       		bmi.s	@Return
00201230 0C2D 0010 0007             		cmp.b	#PCM_1,Chn_ID(a5)
00201236 6C00 0000                  		bge	SMEG_SetVoice_PCM
0020123A 0C2D 0006 0007             		cmp.b	#FM_6,Chn_ID(a5)
00201240 6700 0000                  		beq	SMEG_SetVoice_DAC
00201244                            		
00201244 6000 0000                   		bra	SetVoice_FM
00201248                            @Return:
00201248 4E75                        		rts
0020124A                            		
0020124A                            ; -------------------------------------------
0020124A                            ; Send DAC
0020124A                            ; -------------------------------------------
0020124A                            
0020124A                            SMEG_SetVoice_DAC:
0020124A 6100 0000                  		bsr	ChnlFM_srchIns
0020124E 0C42 FFFF                  		cmp.w	#-1,d2
00201252 6700                       		beq.s	@Return
00201254                            		
00201254 0802 0007                   		btst	#7,d2
00201258 6600                        		bne.s	@Sample_Mode
0020125A 08AE 0000 0001             		bclr	#bitFmDac,snd_flags(a6)
00201260 6000 0000                  		bra	SetVoice_FM
00201264                             		
00201264                            @Sample_Mode:
00201264 08EE 0000 0001             		bset	#bitFmDac,snd_flags(a6)
0020126A 202B 0004                  		move.l	4(a3),d0
0020126E 222B 0008                  		move.l	8(a3),d1
00201272 0481 0000 0001             		sub.l	#1,d1
00201278 242B 000C                  		move.l	$C(a3),d2
0020127C 7600                       		moveq	#0,d3
0020127E 162D 000B                  		move.b	chn_note(a5),d3
00201282 D66B 0002                   		add.w	2(a3),d3
00201286 6000 0000                   		bra	Audio_Sample_Set
0020128A                            @Return:
0020128A 4E75                       		rts
0020128C                            		
0020128C                            ; -------------------------------------------
0020128C                            ; Send FM
0020128C                            ; -------------------------------------------
0020128C                            
0020128C                            SetVoice_FM:
0020128C 6100 0000                  		bsr	ChnlFM_srchIns
00201290 08AE 0003 0001             		bclr	#bitSpecial3,snd_flags(a6)
00201296 0C42 FFFF                  		cmp.w	#-1,d2
0020129A 6700 0000                  		beq	@Return
0020129E 0802 0007                   		btst	#7,d2
002012A2 6600 0000                   		bne	@Return
002012A6 0802 0006                   		btst	#6,d2
002012AA 6700                        		beq.s	@notFM3
002012AC 08EE 0003 0001              		bset	#bitSpecial3,snd_flags(a6)
002012B2                            @notFM3:
002012B2                            
002012B2                            ;  		adda.w	#4,a3
002012B2 266B 0004                  		movea.l	4(a3),a3
002012B6 7000                       		moveq	#0,d0
002012B8 102D 0007                  		move.b	Chn_ID(a5),d0
002012BC 0C00 0004                  		cmp.b	#4,d0
002012C0 6D00                       		blt.s	@Low3
002012C2 0400 0004                  		sub.b	#4,d0
002012C6                            @Low3:
002012C6                            
002012C6 4840                       		swap	d0
002012C8 303C 0028                  		move.w	#$28,d0
002012CC 7200                       		moveq	#0,d1
002012CE 122D 0007                  		move.b	Chn_ID(a5),d1
002012D2 6100 0000                  		bsr	SMEG_Z80_Off
002012D6 6100 0000                  		bsr	FM_RegWrite_1
002012DA 4840                       		swap	d0
002012DC                            
002012DC 45FA 0000                  		lea	SMEG_FM_RegList(pc),a2
002012E0 3C00                       		move.w	d0,d6
002012E2 7818                       		moveq	#$18,d4
002012E4                            @Next:
002012E4 3A06                       		move.w	d6,d5
002012E6 101A                       		move.b	(a2)+,d0
002012E8 3600                       		move.w	d0,d3
002012EA D045                       		add.w	d5,d0
002012EC 121B                       		move.b	(a3)+,d1
002012EE                            
002012EE 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
002012F4 6C00                       		bge.s	@Chn456
002012F6 6100 0000                  		bsr	FM_RegWrite_1
002012FA 51CC FFE8                  		dbf	d4,@Next
002012FE 6000                       		bra.s	@BackZ80
00201300                            
00201300                            @Chn456:
00201300 6100 0000                  		bsr	FM_RegWrite_2
00201304 51CC FFDE                  		dbf	d4,@Next
00201308                            @BackZ80:
00201308 6100 0000                  		bsr	SMEG_Z80_On
0020130C                            @Return:
0020130C 4E75                       		rts
0020130E                            
0020130E                            ; -------------------------------------------
0020130E                            ; Set FM panning
0020130E                            ; -------------------------------------------
0020130E                            
0020130E                            SMEG_FM_SetPan:
0020130E 4A2D 0007                  		tst.b	Chn_ID(a5)
00201312 6B00 0000                  		bmi	@Return
00201316                            		
00201316 7200                       		moveq	#0,d1
00201318 122D 000C                    		move.b	chn_pan(a5),d1
0020131C EC49                         		lsr.w	#6,d1
0020131E 0241 0003                    		and.w	#%11,d1
00201322 123B 1000                    		move.b	@list(pc,d1.w),d1
00201326 0241 00C0                    		and.w	#%11000000,d1
0020132A 303C 00B4                    		move.w	#$B4,d0
0020132E 142D 0007                    		move.b	chn_id(a5),d2
00201332 0242 0003                    		and.w	#%11,d2
00201336 8042                         		or.w	d2,d0
00201338 6000 0000                   		bra	SMEG_FM_FindWrite
0020133C                            		
0020133C 8080 C040                  @list:		dc.b $80,$80,$C0,$40
00201340                            		even
00201340                            		
00201340                            		
00201340 303C 00B4                  		move.w	#$B4,d0
00201344 7400                       		moveq	#0,d2
00201346 142D 0007                  		move.b	Chn_ID(a5),d2
0020134A 7200                       		moveq	#0,d1
0020134C 122D 000C                  		move.b	Chn_Pan(a5),d1
00201350                            
00201350 6100 0000                  		bsr	SMEG_Z80_Off
00201354 0C02 0003                  		cmp.b	#3,d2
00201358 6E00                       		bgt.s	@SecondFM
0020135A D042                       		add.w	d2,d0
0020135C 6100 0000                  		bsr	FM_RegWrite_1
00201360 6000                       		bra.s	@BackZ80
00201362                            @SecondFM:
00201362 0442 0004                  		sub.w	#4,d2
00201366 D042                       		add.w	d2,d0
00201368 6100 0000                  		bsr	FM_RegWrite_2
0020136C                            @BackZ80:
0020136C 6100 0000                  		bsr	SMEG_Z80_On
00201370                            @Return:
00201370 4E75                       		rts
00201372                            
00201372                            ; ---------------------
00201372                            
00201372                            ChnlFM_srchIns:
00201372 266E 0010                  		movea.l	snd_instr(a6),a3
00201376 302B 0000                   		move.w	instDYmha(a3),d0
0020137A D6C0                        		adda	d0,a3
0020137C                            @next:
0020137C 4841                       		swap	d1
0020137E 4A53                       		tst.w	(a3)
00201380 6B00 0000                   		bmi	@NoteOff
00201384 7000                        		moveq	#0,d0
00201386 102D 0008                  		move.b	chn_inst(a5),d0
0020138A 3213                       		move.w	(a3),d1
0020138C 3401                       		move.w	d1,d2
0020138E 0241 003F                  		and.w	#$3F,d1
00201392 B041                       		cmp.w	d1,d0
00201394 6700                       		beq.s	@found
00201396 D6FC 0008                  		adda	#8,a3		;inst,oct,firstlong
0020139A 0802 0007                  		btst	#7,d2
0020139E 6600                       		bne.s	@doit
002013A0 0802 0006                  		btst	#6,d2
002013A4 67D6                       		beq.s	@next
002013A6                            @doit:
002013A6 D6FC 0008                  		adda	#8,a3		;scndlong,thrdlong
002013AA 60D0                       		bra.s	@next
002013AC                            @NoteOff:
002013AC 4841                       		swap	d1
002013AE 74FF                       		moveq	#-1,d2
002013B0                            @found:
002013B0 4E75                       		rts
002013B2                            		
002013B2                            ; --------------------------------------------
002013B2                            ; Play a sample
002013B2                            ;
002013B2                            ; Input:
002013B2                            ; d0 | LONG - Start
002013B2                            ; d1 | LONG - End
002013B2                            ; d2 | LONG - Loop point
002013B2                            ;              0 = From start
002013B2                            ;             -1 = No loop
002013B2                            ; d3 | WORD - Note ($3C - default)
002013B2                            ; --------------------------------------------
002013B2                            
002013B2                            Audio_Sample_Set:
002013B2 6100 0000                  		bsr	SMEG_Z80_Off
002013B6                            		
002013B6 41F9 00A0 0180             		lea	($A00180),a0
002013BC E198                       		rol.l	#8,d0
002013BE 10C0                       		move.b	d0,(a0)+
002013C0 E198                       		rol.l	#8,d0
002013C2 10C0                       		move.b	d0,(a0)+		
002013C4 E198                       		rol.l	#8,d0
002013C6 10C0                       		move.b	d0,(a0)+
002013C8 E198                       		rol.l	#8,d0
002013CA 10C0                       		move.b	d0,(a0)+
002013CC                            		
002013CC 0481 0000 0001              		sub.l	#1,d1
002013D2 E199                       		rol.l	#8,d1
002013D4 10C1                       		move.b	d1,(a0)+
002013D6 E199                       		rol.l	#8,d1
002013D8 10C1                       		move.b	d1,(a0)+		
002013DA E199                       		rol.l	#8,d1
002013DC 10C1                       		move.b	d1,(a0)+
002013DE E199                       		rol.l	#8,d1
002013E0 10C1                       		move.b	d1,(a0)+
002013E2                            		
002013E2 7200                       		moveq	#0,d1
002013E4 2800                       		move.l	d0,d4
002013E6 0C82 FFFF FFFF             		cmp.l	#-1,d2
002013EC 6700                       		beq.s	@no_loop
002013EE 7202                       		moveq	#2,d1
002013F0 2800                       		move.l	d0,d4
002013F2 D882                       		add.l	d2,d4
002013F4                            @no_loop:
002013F4 E19C                       		rol.l	#8,d4
002013F6 10C4                       		move.b	d4,(a0)+
002013F8 E19C                       		rol.l	#8,d4
002013FA 10C4                       		move.b	d4,(a0)+		
002013FC E19C                       		rol.l	#8,d4
002013FE 10C4                       		move.b	d4,(a0)+
00201400 E19C                       		rol.l	#8,d4
00201402 10C4                       		move.b	d4,(a0)+
00201404                            
00201404 1081                       		move.b	d1,(a0)
00201406                            		
00201406 3003                       		move.w	d3,d0
00201408 6000 0000                  		bra	AudioSmplNote_go
0020140C                            
0020140C                            ; --------------------------------------------
0020140C                            ; Stop the current sample
0020140C                            ; --------------------------------------------
0020140C                            
0020140C                            Audio_Sample_Play:
0020140C 6100 0000                  		bsr	SMEG_Z80_Off
00201410                            		
00201410 1039 00A0 018C             		move.b	($A0018C).l,d0
00201416 08C0 0000                  		bset	#0,d0
0020141A 13C0 00A0 018C             		move.b	d0,($A0018C).l
00201420                             		
00201420 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00201428 4E75                       		rts
0020142A                            		
0020142A                            ; --------------------------------------------
0020142A                            ; Stop the current sample
0020142A                            ; --------------------------------------------
0020142A                            
0020142A                            Audio_Sample_Stop:
0020142A 6100 0000                  		bsr	SMEG_Z80_Off
0020142E                            		
0020142E 13FC 0040 00A0 018C        		move.b	#$40,($A0018C).l
00201436                             		
00201436 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
0020143E 4E75                       		rts
00201440                            		
00201440                            ; --------------------------------------------
00201440                            ; Modify sample note
00201440                            ;
00201440                            ; d3 | WORD - Note
00201440                            ; --------------------------------------------
00201440                            
00201440                            Audio_Sample_Note:
00201440 6100 0000                  		bsr	SMEG_Z80_Off
00201444                            		
00201444                            AudioSmplNote_go:
00201444                            ; 		sub.w	#24,d0			; skip 2 octaves
00201444 ED48                       		lsl.w	#6,d0
00201446 0640 01C0                   		add.w	#$1C0,d0
0020144A 13C0 00A0 00DC             		move.b	d0,($A000DC)		; ld bc,(NEW ADDRESS)
00201450 E048                       		lsr.w	#8,d0			;
00201452 13C0 00A0 00DD              		move.b	d0,($A000DD)		;
00201458                             		
00201458 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
00201460 4E75                       		rts
00201462                            
00201462                            ; -------------------------------------------
00201462                            ; Send PCM/PWM
00201462                            ; -------------------------------------------
00201462                            
00201462                            SMEG_SetVoice_PCM:
00201462                               		
00201462 7200                       		moveq	#0,d1
00201464 7400                          		moveq	#0,d2
00201466 4AAE 0014                  		tst.l	SongPcmSamp(a6)
0020146A 6700                       		beq.s	@FinishList
0020146C 6B00                       		bmi.s	@FinishList
0020146E 266E 0014                  		movea.l	SongPcmSamp(a6),a3
00201472 122D 0008                  		move.b	Chn_Inst(a5),d1
00201476                            @NextPcm:
00201476 4A53                       		tst.w	(a3)
00201478 6B00                       		bmi.s	@GiveUp
0020147A 1413                       		move.b	(a3),d2
0020147C B401                       		cmp.b	d1,d2
0020147E 6700                       		beq.s	@FoundPcm
00201480 D6FC 0002                  		adda	#2,a3
00201484 60F0                       		bra.s	@NextPcm
00201486                            @FoundPcm:
00201486 7200                       		moveq	#0,d1
00201488 122B 0001                  		move.b	1(a3),d1
0020148C                            @GiveUp:
0020148C 0441 0001                  		sub.w	#1,d1
00201490 E549                       		lsl.w	#2,d1
00201492 47F9 FFFF F1AE             		lea	(RAM_SMEG_PcmList),a3
00201498 D6C1                       		adda	d1,a3
0020149A                               		
0020149A 1B6B 0001 000E             		move.b	1(a3),Chn_PCM_Pitch(a5)
002014A0 13ED 0007 00A1 2010        		move.b	Chn_ID(a5),($A12000+CommDataM)
002014A8 13D3 00A1 2011             		move.b	(a3),($A12000+CommDataM+1)
002014AE 33EB 0002 00A1 2012        		move.w	2(a3),($A12000+CommDataM+2)
002014B6 7021                       		moveq	#CdTask_SetAddr,d0
002014B8 6100 FD4A                  		bsr	SMEG_CD_Call
002014BC                            
002014BC                            ; ---------------------------------
002014BC                            
002014BC                            @FinishList:
002014BC 4E75                       		rts
002014BE                            		
002014BE                            ; -------------------------------------------
002014BE                            ; Reset FM
002014BE                            ; -------------------------------------------
002014BE                            
002014BE                            SMEG_FM_Reset:
002014BE 6100 0000                  		bsr	SMEG_Z80_Off
002014C2                            
002014C2 7028                       		moveq	#$28,d0
002014C4 7200                       		moveq	#0,d1
002014C6 6100 0000                  		bsr	FM_RegWrite_1
002014CA 7028                       		moveq	#$28,d0
002014CC 7201                       		moveq	#1,d1
002014CE 6100 0000                  		bsr	FM_RegWrite_1
002014D2 7028                       		moveq	#$28,d0
002014D4 7202                       		moveq	#2,d1
002014D6 6100 0000                  		bsr	FM_RegWrite_1
002014DA 7028                       		moveq	#$28,d0
002014DC 7204                       		moveq	#4,d1
002014DE 6100 0000                  		bsr	FM_RegWrite_1
002014E2 7028                       		moveq	#$28,d0
002014E4 7205                       		moveq	#5,d1
002014E6 6100 0000                  		bsr	FM_RegWrite_1
002014EA 7028                       		moveq	#$28,d0
002014EC 7206                       		moveq	#6,d1
002014EE 6100 0000                  		bsr	FM_RegWrite_1
002014F2                            
002014F2 6000 0000                  		bra	SMEG_Z80_On
002014F6                            
002014F6                            ; -------------------------------------------
002014F6                            ; Find FM
002014F6                            ; -------------------------------------------
002014F6                            
002014F6                            SMEG_FM_FindWrite:
002014F6 0C2D 0004 0007             		cmp.b	#4,Chn_ID(a5)
002014FC 6C00                       		bge.s	@Second
002014FE 6000 0000                  		bra	FM_RegWrite_1
00201502                            @Second:
00201502 6000 0000                  		bra	FM_RegWrite_2
00201506                            
00201506                            ; -------------------------------------------
00201506                            ; Write to FM register
00201506                            ; -------------------------------------------
00201506                            
00201506                            FM_RegWrite_1:
00201506 1439 00A0 4000             		move.b	($A04000).l,d2
0020150C 0802 0007                  		btst	#7,d2
00201510 66F4                       		bne.s	FM_RegWrite_1
00201512 13C0 00A0 4000             		move.b	d0,($A04000).l
00201518                            @Loop:
00201518 1439 00A0 4000             		move.b	($A04000).l,d2
0020151E 0802 0007                  		btst	#7,d2
00201522 66F4                       		bne.s	@Loop
00201524 13C1 00A0 4001             		move.b	d1,($A04001).l
0020152A 4E75                       		rts
0020152C                            
0020152C                            FM_RegWrite_2:
0020152C 1439 00A0 4000             		move.b	($A04000).l,d2
00201532 0802 0007                  		btst	#7,d2
00201536 66F4                       		bne.s	FM_RegWrite_2
00201538 13C0 00A0 4002             		move.b	d0,($A04002).l
0020153E                            @Loop:
0020153E 1439 00A0 4000             		move.b	($A04000).l,d2
00201544 0802 0007                  		btst	#7,d2
00201548 66F4                       		bne.s	@Loop
0020154A 13C1 00A0 4003             		move.b	d1,($A04003).l
00201550 4E75                       		rts
00201552                            		
00201552                            SMEG_Z80_Off:
00201552 33FC 0100 00A1 1100        		move.w	#$100,($A11100).l
0020155A                            @WaitZ80;\@:
0020155A 0839 0000 00A1 1100        		btst	#0,($A11100).l
00201562 66F6                       		bne.s	@WaitZ80;\@
00201564 4E75                       		rts
00201566                            		
00201566                            ; USES d2
00201566                            
00201566                            SMEG_Z80_On:
00201566 1439 00A0 018C             		move.b	($A0018C),d2
0020156C 0802 0007                  		btst	#7,d2
00201570 6700                       		beq.s	@stopped;\@
00201572                            @busywait;\@:
00201572 1439 00A0 4000             		move.b	($A04000).l,d2
00201578 0802 0007                  		btst	#7,d2
0020157C 66F4                       		bne.s	@busywait;\@
0020157E 13FC 002A 00A0 4000        		move.b	#$2A,(sound_ym_1)
00201586 1439 00A0 018F             		move.b	($A0018F),d2
0020158C 13C2 00A0 4001             		move.b	d2,(sound_ym_2)
00201592                            @stopped;\@:
00201592 33FC 0000 00A1 1100        		move.w	#0,($A11100).l
0020159A 4E75                       		rts
0020159C                            		
0020159C                            ; -----------------------
0020159C                            ; Setup channels
0020159C                            ; -----------------------
0020159C                            
0020159C                            SMEG_Load_SetChnls:
0020159C 286E 0004                  		movea.l	SongRequest(a6),a4				;a4 - Music data
002015A0 3D6E 0018 001C             		move.w	TicksRequest(a6),TicksSet(a6)
002015A6                            
002015A6                            ; -----------------------
002015A6                            ; Get the
002015A6                            ; PatternEnd/PatternLoop
002015A6                            ; numbers
002015A6                            ; -----------------------
002015A6                            
002015A6 1D5C 0002                  		move.b	(a4)+,PatternEnd(a6)
002015AA 1D5C 0003                  		move.b	(a4)+,PatternLoop(a6)
002015AE                            		
002015AE                            ; -----------------------
002015AE                            ; Get instruments
002015AE                            ; -----------------------
002015AE                            
002015AE 2D5C 0008                  		move.l	(a4)+,SongStart(a6)
002015B2 2D5C 0010                  		move.l	(a4)+,snd_instr(a6)
002015B6                            
002015B6                            ; -----------------------
002015B6                            ; Setup the channel IDs
002015B6                            ; -----------------------
002015B6                            
002015B6 303C 0011                  		move.w	#max_chnl-1,d0
002015BA 341C                       		move.w	(a4)+,d2
002015BC 0442 0001                  		sub.w	#1,d2
002015C0                            @SetId:
002015C0 1B7C 0001 0006             		move.b	#1,Chn_Type(a5)
002015C6 1B7C 00FF 0007             		move.b	#-1,Chn_ID(a5)
002015CC 4A42                       		tst.w	d2
002015CE 6B00                       		bmi.s	@Disabled
002015D0 0442 0001                  		sub.w	#1,d2
002015D4 1B5C 0007                  		move.b	(a4)+,Chn_ID(a5)
002015D8 1B5C 0009                   		move.b	(a4)+,Chn_Vol(a5)
002015DC 1B5C 000C                   		move.b	(a4)+,Chn_Pan(a5)
002015E0 161C                        		move.b	(a4)+,d3
002015E2 4A2D 0007                   		tst.b	chn_id(a5)
002015E6 6B00                        		bmi.s	@is_psg
002015E8 0C2D 0010 0007              		cmp.b	#PCM_1,chn_id(a5)
002015EE 6C00                        		bge.s	@is_pcm
002015F0                             		
002015F0 E94B                        		lsl.w	#4,d3
002015F2 1B43 000D                   		move.b	d3,Chn_FM_Key(a5)
002015F6 6000                       		bra.s	@Disabled
002015F8                            @is_pcm:
002015F8 4E71                       		nop 
002015FA 6000                       		bra.s	@Disabled
002015FC                            		
002015FC                            @is_psg:
002015FC 122D 0007                  		move.b	Chn_ID(a5),d1
00201600 0001 001F                  		or.b	#$1F,d1
00201604 13C1 00C0 0011             		move.b	d1,(sound_psg)
0020160A                             		
0020160A                            @Disabled:
0020160A DAFC 0010                  		adda 	#sizeof_Chn,a5
0020160E 51C8 FFB0                  		dbf	d0,@SetId
00201612                             		
00201612                            ; ; -----------------------
00201612                            ; ; Master volumes
00201612                            ; ; -----------------------
00201612                            ; 
00201612                            ; 		moveq	#(max_chnl)-1,d0
00201612                            ; @SetVol:
00201612                            ; 		move.b	(a4)+,Chn_MainVol(a5)
00201612                            ; 		adda 	#sizeof_Chn,a5
00201612                            ; 		dbf	d0,@SetVol
00201612                            
00201612                            ; -----------------------
00201612                            ; last steps
00201612                            ; -----------------------
00201612                            
00201612 286E 0008                  		movea.l	SongStart(a6),a4
00201616 1D5C 0021                  		move.b	(a4)+,PattSize+1(a6)
0020161A 1D5C 0020                  		move.b	(a4)+,PattSize(a6)
0020161E 426E 0022                  		clr.w	pattr_read(a6)
00201622 D8FC 0006                  		adda	#6,a4
00201626 2D4C 000C                  		move.l	a4,SongRead(a6)
0020162A 4E75                       		rts
0020162C                            		
0020162C                            ; -----------------------
0020162C                            ; Search used slot
0020162C                            ; 
0020162C                            ; Uses d3
0020162C                            ; -----------------------
0020162C                            
0020162C                            SMEG_FindPrioSlot:
0020162C 47F9 FFFF EF5C              		lea	(RAM_SMEG_PrioList),a3
00201632                            ;  		inform 0,"%h",RAM_SMEG_PrioList
00201632                             		
00201632 7600                        		moveq	#0,d3
00201634 162D 0007                   		move.b	Chn_ID(a5),d3
00201638 0803 0007                   		btst	#7,d3
0020163C 6600                        		bne.s	@PSG_slots
0020163E 0C03 0010                   		cmp.b	#PCM_1,d3
00201642 6C00                        		bge.s	@PCM_Slots
00201644 0C03 0004                   		cmp.b	#4,d3
00201648 6D00                        		blt.s	@leftFM
0020164A 0443 0001                   		sub.w	#1,d3
0020164E                            @leftFM:
0020164E 6000                       		bra.s	@set_slot
00201650                            
00201650                            @PSG_slots:
00201650 EA4B                       		lsr.w	#5,d3
00201652 0243 0003                  		and.w	#%11,d3
00201656 0643 0006                  		add.w	#6,d3
0020165A 6000                       		bra.s	@set_slot
0020165C                            
0020165C                            @PCM_Slots:
0020165C 0443 0010                  		sub.w	#PCM_1,d3
00201660                            @set_slot:
00201660 D6C3                       		add.w	d3,a3
00201662 4E75                       		rts
00201664                            		
00201664                            ; -----------------------
00201664                            ; Turn off the unused
00201664                            ; channels
00201664                            ; -----------------------
00201664                            
00201664                            SMEG_Load_FixSfx:
00201664 47F9 FFFF EF5C              		lea	(RAM_SMEG_PrioList),a3
0020166A                             		
0020166A                            ; FM Check
0020166A                            
0020166A 7605                        		moveq	#6-1,d3
0020166C 7028                        		moveq	#$28,d0
0020166E 7200                        		moveq	#0,d1
00201670                            @chknextfm1:
00201670 4A13                       		tst.b	(a3)
00201672 6700                       		beq.s	@off_fm
00201674 4213                       		clr.b	(a3)
00201676                            		
00201676 0C01 0006                  		cmp.b	#6,d1
0020167A 6600                       		bne.s	@notdac
0020167C 082E 0000 0001             		btst	#bitFmDac,snd_flags(a6)
00201682 6700                       		beq.s	@notdac
00201684                            		
00201684 6100 FDA4                  		bsr	Audio_Sample_Stop
00201688 6000                       		bra.s	@off_fm
0020168A                            		
0020168A                            @notdac:
0020168A 6100 FEC6                  		bsr	SMEG_Z80_Off
0020168E 6100 FE76                  		bsr	FM_RegWrite_1
00201692 6100 FED2                  		bsr	SMEG_Z80_On
00201696                            @off_fm:
00201696 D6FC 0001                  		adda 	#1,a3
0020169A                            
0020169A 0641 0001                  		add.w	#1,d1
0020169E 0C41 0003                  		cmp.w	#3,d1
002016A2 6600                       		bne.s	@nope
002016A4 0641 0001                  		add.w	#1,d1
002016A8                            @nope:
002016A8 51CB FFC6                  		dbf	d3,@chknextfm1
002016AC                            		
002016AC                            ; PSG check
002016AC                            
002016AC 323C 009F                  		move.w	#$9F,d1
002016B0 303C 0003                  		move.w	#4-1,d0
002016B4                            @chknextpsg:
002016B4 4A13                       		tst.b	(a3)
002016B6 6700                       		beq.s	@off_psg
002016B8 4213                       		clr.b	(a3)
002016BA 13C1 00C0 0011             		move.b	d1,(sound_psg)
002016C0                            @off_psg:
002016C0 D6FC 0001                  		adda	#1,a3
002016C4 0641 0020                  		add.w	#$20,d1
002016C8 51C8 FFEA                  		dbf	d0,@chknextpsg
002016CC                            		
002016CC                            ; TODO: PCM check
002016CC                            
002016CC                            ; 		lea	(RAM_SMEG_Chnls_BGM),a5
002016CC                            ; 		moveq	#(max_chnl)-1,d4
002016CC                            ; @SetId:
002016CC                            ; 		move.b	#$80,Chn_Pan(a5)
002016CC                            ; 
002016CC                            ; 		tst.b	Chn_ID(a5)
002016CC                            ; 		bmi.s	@NotFM
002016CC                            ; 		cmp.b	#PCM_1,Chn_ID(a5)
002016CC                            ; 		bge.s	@NotFM
002016CC                            ; 
002016CC                            ; 		clr.b	Chn_FM_Key(a5)
002016CC                            ; 		move.b	#%00001111,Chn_FM_Key(a5)
002016CC                            ; 		move.b	#$C0,Chn_Pan(a5)
002016CC                            ; 		bsr	SMEG_FM_SetPan
002016CC                            ; @NotFM:
002016CC                            ; 		adda 	#sizeof_Chn,a5
002016CC                            ; 		dbf	d4,@SetId
002016CC                            		
002016CC                            ; 		bsr	SMEG_Z80_Off
002016CC                            ; 		moveq	#$2B,d0
002016CC                            ;                 moveq	#0,d1
002016CC                            ;   		bsr	FM_RegWrite_1
002016CC                            ;   		
002016CC                            ; 		moveq	#0,d0
002016CC                            ; 		move.b	d0,($A001E0+$D)
002016CC                            ; 		bsr	SMEG_Z80_On
002016CC                            		
002016CC 4E75                       		rts
002016CE                            		
002016CE                            ; -----------------------
002016CE                            ; Exclusive features
002016CE                            ;
002016CE                            ; TODO: creo que es
002016CE                            ; mala idea hacer esperar
002016CE                            ; al VBlank ya que moví
002016CE                            ; la rutina esta
002016CE                            ; -----------------------
002016CE                            
002016CE                            SMEG_Load_SetExtChnls:
002016CE                            
002016CE 7026                        		moveq	#CdTask_ClearAllPcm,d0
002016D0 6100 FB32                   		bsr	SMEG_CD_Call
002016D4                            		
002016D4 4DF9 FFFF EF00              		lea	(RAM_SMEG_Buffer),a6
002016DA 4AAE 0014                   		tst.l	SongPcmSamp(a6)
002016DE 6700 0000                   		beq	@Return
002016E2 6B00 0000                   		bmi	@Return
002016E6                             		
002016E6 2A6E 0014                   		movea.l	SongPcmSamp(a6),a5
002016EA 7200                        		moveq	#0,d1
002016EC 47F9 FFFF F1AE              		lea	(RAM_SMEG_PcmList),a3
002016F2                            @NextSamp:
002016F2 4A55                        		tst.w	(a5)
002016F4 6B00                        		bmi.s	@Finish
002016F6 1681                        		move.b	d1,(a3)				;ST Address
002016F8                            
002016F8 302D 000E                   		move.w	$E(a5),d0
002016FC 0240 00FF                   		and.w	#$FF,d0
00201700 1740 0001                   		move.b	d0,1(a3)
00201704 23D5 00A1 2010              		move.l	(a5),($A12000+CommDataM)	;\
0020170A 23ED 0004 00A1 2014         		move.l	4(a5),($A12000+CommDataM+4)	; > Filename
00201712 23ED 0008 00A1 2018         		move.l	8(a5),($A12000+CommDataM+8)	;/
0020171A 33FC 0000 00A1 201C          		move.w	#0,($A12000+CommDataM+$C)
00201722 13C1 00A1 201D              		move.b	d1,($A12000+CommDataM+$D)	;Bank to use
00201728 7020                        		moveq	#CdTask_LoadPcm,d0
0020172A 6100 FAD8                    		bsr	SMEG_CD_Call
0020172E                              		
0020172E 7400                         		moveq	#0,d2
00201730 7600                         		moveq	#0,d3
00201732 3439 00A1 2022              		move.w	($A12000+CommDataS+2),d2
00201738 0C6D FFFF 000C              		cmp.w	#$FFFF,$C(a5)
0020173E 6700                        		beq.s	@NotLoop
00201740 342D 000C                   		move.w	$C(a5),d2
00201744                            @NotLoop:
00201744                            ; 		move.b	d1,d3
00201744                            ; 		and.w	#$7F,d3
00201744                            ; 		lsl.w	#8,d3
00201744                            ; 		lsl.w	#4,d3
00201744                            ; 		add.w 	d3,d2
00201744                            		
00201744 3742 0002                   		move.w	d2,2(a3)			;Loop address
00201748 1239 00A1 2020              		move.b	($A12000+CommDataS),d1		;Next ST
0020174E                             		
0020174E DAFC 0010                   		adda	#$10,a5
00201752 D6FC 0004                   		adda	#4,a3
00201756 609A                        		bra.s	@NextSamp
00201758                            @Finish:
00201758 DAFC 0002                   		adda	#2,a5
0020175C 2D4D 0014                   		move.l	a5,SongPcmSamp(a6)		;Second list
00201760                            		
00201760                            ; -----------------------
00201760                            
00201760                            		
00201760                            @Return:
00201760 4E75                       		rts
00201762                            		
00201762                            ; -------------------------------------------
00201762                            ; Reset PSG
00201762                            ; -------------------------------------------
00201762                            
00201762                            SMEG_PSG_Reset:
00201762 13FC 009F 00C0 0011        		move.b	#$9F,($C00011).l
0020176A 13FC 00BF 00C0 0011        		move.b	#$BF,($C00011).l
00201772 13FC 00DF 00C0 0011        		move.b	#$DF,($C00011).l
0020177A 13FC 00FF 00C0 0011        		move.b	#$FF,($C00011).l
00201782 4E75                       		rts
00201784                            
00201784                            ; -------------------------------------------
00201784                            ; Reset PCM
00201784                            ; -------------------------------------------
00201784                            
00201784                            SMEG_PCM_Reset:
00201784 4AAE 0014                  		tst.l	SongPcmSamp(a6)
00201788 6700                       		beq.s	@NoResetPCM
0020178A 6B00 0000                  		bmi	@NoResetPCM
0020178E                            		
0020178E                            		
0020178E 422E 0027                  		clr.b	PcmChnOnOff(a6)
00201792 13EE 0027 00A1 2010        		move.b	PcmChnOnOff(a6),($A12000+CommDataM)
0020179A 7025                       		moveq	#CdTask_SetOnOff,d0
0020179C 6000 FA66                  		bra	SMEG_CD_Call
002017A0                            		
002017A0                            
002017A0                            @NoResetPCM:
002017A0 4E75                       		rts
002017A2                            
002017A2                            ; ================================================================
002017A2                            ; -------------------------------------------------
002017A2                            ; Data
002017A2                            ; -------------------------------------------------
002017A2                            
002017A2                            ; -------------------------------
002017A2                            ; FM Register list
002017A2                            ; -------------------------------
002017A2                            
002017A2                            SMEG_FM_RegList:
002017A2 B0                         		dc.b $B0
002017A3 3038 343C                  		dc.b $30,$38,$34,$3C
002017A7 5058 545C                  		dc.b $50,$58,$54,$5C
002017AB 6068 646C                  		dc.b $60,$68,$64,$6C
002017AF 7078 747C                  		dc.b $70,$78,$74,$7C
002017B3 8088 848C                  		dc.b $80,$88,$84,$8C
002017B7 4048 444C                  		dc.b $40,$48,$44,$4C
002017BC 00                         		even
002017BC                            	
002017BC                            ; -------------------------------
002017BC                            ; Z80 Driver
002017BC                            ; -------------------------------
002017BC                            
002017BC                            Z80_Driver:	incbin	"system/sound/z80/main.bin"
002028BC                            Z80_DriverEnd:
002028BC                            		even
002028BC                            		
002028BC                            ; ---------------------------------------------------
002028BC                            ; ---------------------------------------------------
002028BC                            		include	"system/misc.asm"
002028BC                            ; ====================================================================
002028BC                            ; System
002028BC                            ; ====================================================================
002028BC                            
002028BC                            ; ====================================================================
002028BC                            ; -------------------------------------------------
002028BC                            ; RAM
002028BC                            ; -------------------------------------------------
002028BC                            
002028BC                                            rsset	RAM_System
002028BC =FFFFDE00                  RAM_HintJumpTo	rs.w	1				; DONT
002028BC =FFFFDE02                  RAM_HintAddr	rs.l	1				; SEPARATE
002028BC =FFFFDE06                  RAM_VIntJumpTo	rs.w	1				; THESE
002028BC =FFFFDE08                  RAM_VintAddr	rs.l	1				; ONES
002028BC =FFFFDE0C                  RAM_VIntRegs	rs.l	16
002028BC =FFFFDE4C                  RAM_ModeReset	rs.w	1
002028BC =FFFFDE4E                  RAM_IntFlags	rs.b	1
002028BC =FFFFDE4F                  RAM_GameMode	rs.b	1
002028BC                            
002028BC =FFFFDE50                  sizeof_sys	rs.l	0
002028BC                            ; 		inform 0,"system ram: %h",(sizeof_sys-RAM_System)
002028BC                             				
002028BC                            ; ====================================================================
002028BC                            ; -------------------------------------------------
002028BC                            ; Variables
002028BC                            ; -------------------------------------------------
002028BC                            
002028BC                            ; --------------------------------------------
002028BC                            				
002028BC                            ; ====================================================================
002028BC                            ; -------------------------------------------------
002028BC                            ; Macros
002028BC                            ; -------------------------------------------------
002028BC                            
002028BC                            ; --------------------------------------------
002028BC                            
002028BC                            ; ====================================================================
002028BC                            ; -------------------------------------------------
002028BC                            ; Subs
002028BC                            ; -------------------------------------------------
002028BC                            
002028BC                            System_init:
002028BC 41F9 FFFF BC00             		lea	(RAM_ModeBuffer),a0
002028C2 303C 0BFF                  		move.w	#($1800/2)-1,d0
002028C6                            @clear_buff:
002028C6 4258                       		clr.w	(a0)+
002028C8 51C8 FFFC                  		dbf	d0,@clear_buff
002028CC                            		
002028CC 23FC 0000 0000 FFFF DE08   		move.l	#MD_Vint,(RAM_VIntAddr)
002028D6 23FC 0000 0000 FFFF DE02   		move.l	#MD_Hint,(RAM_HIntAddr)
002028E0 303C 4EF9                  		move.w	#$4EF9,d0
002028E4 33C0 FFFF DE06              		move.w	d0,(RAM_VIntJumpTo)
002028EA 33C0 FFFF DE00             		move.w	d0,(RAM_HIntJumpTo)
002028F0                            		
002028F0 4239 FFFF DE4F              		clr.b	(RAM_GameMode)
002028F6 4E75                       		rts
002028F8                            		
002028F8                            ; ---------------------------------------------
002028F8                            ; SRAM
002028F8                            ; ---------------------------------------------
002028F8                            
002028F8                            SRAM_Init:
002028F8 13FC 0003 00A1 30F1        		move.b	#%11,($A130F1)		;read+write
00202900 41F9 0020 0000             		lea	($200000),a0
00202906 0108 0001                  		movep.w	1(a0),d0
0020290A 0C80 0000 4745             		cmp.l	#"GE",d0
00202910 6700                       		beq.s	@exit
00202912 43FA 0000                  		lea	@SramHead(pc),a1
00202916 7006                       		moveq	#7-1,d0
00202918                            @header:
00202918 1019                       		move.b	(a1)+,d0
0020291A 1140 0001                  		move.b	d0,1(a0)
0020291E D0FC 0002                  		adda	#2,a0
00202922 51C8 FFF4                  		dbf	d0,@header
00202926                            @exit:
00202926 13FC 0000 00A1 30F1        		move.b	#0,($A130F1)
0020292E 4E75                       		rts
00202930                            
00202930                            ; ---------------------------------------------
00202930                            
00202930 4745 4E59 5341 5645 00     @SramHead:	dc.b "GENYSAVE",0
0020293A 00                         		even
0020293A                            		
0020293A                            ; ---------------------------------------------
0020293A                            ; CalcSine
0020293A                            ;
0020293A                            ; Input:
0020293A                            ; d0 | WORD
0020293A                            ;
0020293A                            ; Output:
0020293A                            ; d0 | WORD
0020293A                            ; d1 | WORD
0020293A                            ; ---------------------------------------------
0020293A                            
0020293A                            CalcSine:
0020293A 0240 00FF                  		and.w	#$FF,d0
0020293E D040                       		add.w	d0,d0
00202940 0640 0080                  		add.w	#$80,d0
00202944 323B 0000                  		move.w	Sine_Data(pc,d0.w),d1
00202948 0440 0080                  		sub.w	#$80,d0
0020294C 303B 0000                  		move.w	Sine_Data(pc,d0.w),d0
00202950 4E75                       		rts	
00202952                            
00202952                            Sine_Data:
00202952 0000 0006 000C 0012 0019+  		dc.w 0,	6, $C, $12, $19, $1F, $25, $2B,	$31, $38, $3E
00202968 0044 004A 0050 0056 005C+  		dc.w $44, $4A, $50, $56, $5C, $61, $67,	$6D, $73, $78
0020297C 007E 0083 0088 008E 0093+  		dc.w $7E, $83, $88, $8E, $93, $98, $9D,	$A2, $A7, $AB
00202990 00B0 00B5 00B9 00BD 00C1+  		dc.w $B0, $B5, $B9, $BD, $C1, $C5, $C9,	$CD, $D1, $D4
002029A4 00D8 00DB 00DE 00E1 00E4+  		dc.w $D8, $DB, $DE, $E1, $E4, $E7, $EA,	$EC, $EE, $F1
002029B8 00F3 00F4 00F6 00F8 00F9+  		dc.w $F3, $F4, $F6, $F8, $F9, $FB, $FC,	$FD, $FE, $FE
002029CC 00FF 00FF 00FF 0100 00FF+  		dc.w $FF, $FF, $FF, $100, $FF, $FF, $FF, $FE, $FE, $FD
002029E0 00FC 00FB 00F9 00F8 00F6+  		dc.w $FC, $FB, $F9, $F8, $F6, $F4, $F3,	$F1, $EE, $EC
002029F4 00EA 00E7 00E4 00E1 00DE+  		dc.w $EA, $E7, $E4, $E1, $DE, $DB, $D8,	$D4, $D1, $CD
00202A08 00C9 00C5 00C1 00BD 00B9+  		dc.w $C9, $C5, $C1, $BD, $B9, $B5, $B0,	$AB, $A7, $A2
00202A1C 009D 0098 0093 008E 0088+  		dc.w $9D, $98, $93, $8E, $88, $83, $7E,	$78, $73, $6D
00202A30 0067 0061 005C 0056 0050+  		dc.w $67, $61, $5C, $56, $50, $4A, $44,	$3E, $38, $31
00202A44 002B 0025 001F 0019 0012+  		dc.w $2B, $25, $1F, $19, $12, $C, 6, 0,	-6, -$C, -$12
00202A5A FFE7 FFE1 FFDB FFD5 FFCF+  		dc.w -$19, -$1F, -$25, -$2B, -$31, -$38, -$3E, -$44, -$4A
00202A6C FFB0 FFAA FFA4 FF9F FF99+  		dc.w -$50, -$56, -$5C, -$61, -$67, -$6D, -$75, -$78, -$7E
00202A7E FF7D FF78 FF72 FF6D FF68+  		dc.w -$83, -$88, -$8E, -$93, -$98, -$9D, -$A2, -$A7, -$AB
00202A90 FF50 FF4B FF47 FF43 FF3F+  		dc.w -$B0, -$B5, -$B9, -$BD, -$C1, -$C5, -$C9, -$CD, -$D1
00202AA2 FF2C FF28 FF25 FF22 FF1F+  		dc.w -$D4, -$D8, -$DB, -$DE, -$E1, -$E4, -$E7, -$EA, -$EC
00202AB4 FF12 FF0F FF0D FF0C FF0A+  		dc.w -$EE, -$F1, -$F3, -$F4, -$F6, -$F8, -$F9, -$FB, -$FC
00202AC6 FF03 FF02 FF02 FF01 FF01+  		dc.w -$FD, -$FE, -$FE, -$FF, -$FF, -$FF, -$100,	-$FF, -$FF
00202AD8 FF01 FF02 FF02 FF03 FF04+  		dc.w -$FF, -$FE, -$FE, -$FD, -$FC, -$FB, -$F9, -$F8, -$F6
00202AEA FF0C FF0D FF0F FF12 FF14+  		dc.w -$F4, -$F3, -$F1, -$EE, -$EC, -$EA, -$E7, -$E4, -$E1
00202AFC FF22 FF25 FF28 FF2C FF2F+  		dc.w -$DE, -$DB, -$D8, -$D4, -$D1, -$CD, -$C9, -$C5, -$C1
00202B0E FF43 FF47 FF4B FF50 FF55+  		dc.w -$BD, -$B9, -$B5, -$B0, -$AB, -$A7, -$A2, -$9D, -$98
00202B20 FF6D FF72 FF78 FF7D FF82+  		dc.w -$93, -$8E, -$88, -$83, -$7E, -$78, -$75, -$6D, -$67
00202B32 FF9F FFA4 FFAA FFB0 FFB6+  		dc.w -$61, -$5C, -$56, -$50, -$4A, -$44, -$3E, -$38, -$31
00202B44 FFD5 FFDB FFE1 FFE7 FFEE+  		dc.w -$2B, -$25, -$1F, -$19, -$12, -$C,	-6, 0, 6, $C, $12
00202B5A 0019 001F 0025 002B 0031+  		dc.w $19, $1F, $25, $2B, $31, $38, $3E,	$44, $4A, $50
00202B6E 0056 005C 0061 0067 006D+  		dc.w $56, $5C, $61, $67, $6D, $73, $78,	$7E, $83, $88
00202B82 008E 0093 0098 009D 00A2+  		dc.w $8E, $93, $98, $9D, $A2, $A7, $AB,	$B0, $B5, $B9
00202B96 00BD 00C1 00C5 00C9 00CD+  		dc.w $BD, $C1, $C5, $C9, $CD, $D1, $D4,	$D8, $DB, $DE
00202BAA 00E1 00E4 00E7 00EA 00EC+  		dc.w $E1, $E4, $E7, $EA, $EC, $EE, $F1,	$F3, $F4, $F6
00202BBE 00F8 00F9 00FB 00FC 00FD+  		dc.w $F8, $F9, $FB, $FC, $FD, $FE, $FE,	$FF, $FF, $FF
00202BD2                            		even
00202BD2                            	
00202BD2                            ; ---------------------------------------------
00202BD2                            ; HexToByte_Byte
00202BD2                            ; 
00202BD2                            ; Uses:
00202BD2                            ; d4-d5
00202BD2                            ; ---------------------------------------------
00202BD2                            
00202BD2                            ; HexToDec_Byte:
00202BD2                            ; 		move.w	d0,d4
00202BD2                            ; 		and.w	#$FF,d4
00202BD2                            ; 		clr.w	d0
00202BD2                            ; @hexloop:
00202BD2                            ; 		sub.w	#1,d4
00202BD2                            ; 		bcs.s	@finish
00202BD2                            ; 		add.w	#1,d0
00202BD2                            ; 		move.w	d0,d5
00202BD2                            ;  		and.w	#$F,d5
00202BD2                            ; 		cmp.w	#$A,d5
00202BD2                            ; 		bcs.s	@lowbyte1
00202BD2                            ; 		add.w	#6,d0
00202BD2                            ; @lowbyte1:
00202BD2                            ; 		move.w	d0,d5
00202BD2                            ;  		and.w	#$F0,d5
00202BD2                            ; 		cmp.w	#$A0,d5
00202BD2                            ; 		bcs.s	@lowbyte2
00202BD2                            ; 		add.w	#$60,d0
00202BD2                            ; @lowbyte2:
00202BD2                            ; 		bra.s	@hexloop
00202BD2                            ; @finish:
00202BD2                            ; 		rts
00202BD2                            
00202BD2                            ; ---------------------------
00202BD2                            ; Convert HEX to DEC
00202BD2                            ; MAX: 65535 ($FFFF)
00202BD2                            ; 
00202BD2                            ; input:
00202BD2                            ; d2
00202BD2                            ; 
00202BD2                            ; output:
00202BD2                            ; d2
00202BD2                            ; Uses:
00202BD2                            ; d4 WORD (swapped)
00202BD2                            ; d5 LONG
00202BD2                            ; ---------------------------
00202BD2                            
00202BD2                            HexToDec:
00202BD2 7A00                       		moveq	#0,d5
00202BD4 4844                       		swap	d4
00202BD6                            
00202BD6 4842                       		swap	d2
00202BD8 3802                       		move.w	d2,d4
00202BDA 4842                       		swap	d2
00202BDC 4A44                       		tst.w	d4
00202BDE 6700 0000                  		beq	@jumpy
00202BE2                            		
00202BE2 3802                       		move.w	d2,d4
00202BE4 E04C                       		lsr.w	#8,d4
00202BE6 0244 000F                  		and.w	#$F,d4
00202BEA D844                       		add.w	d4,d4
00202BEC 3A3B 4000                  		move.w	@grab256(pc,d4.w),d5
00202BF0 3802                       		move.w	d2,d4
00202BF2 E04C                       		lsr.w	#8,d4
00202BF4 E44C                       		lsr.w	#2,d4
00202BF6 0244 003C                  		and.w	#%111100,d4
00202BFA DABB 4000                  		add.l	@grab4096(pc,d4.w),d5
00202BFE 6100 0000                  		bsr	@fixhexdec
00202C02 4842                       		swap	d2
00202C04 3802                       		move.w	d2,d4
00202C06 4842                       		swap	d2
00202C08 E54C                       		lsl.w	#2,d4
00202C0A 0244 003C                  		and.w	#%111100,d4
00202C0E DABB 4000                  		add.l	@grab65536(pc,d4.w),d5
00202C12 6100 0000                  		bsr	@fixhexdec
00202C16 6000 0000                  		bra	@jumpy
00202C1A                            ; --------------------------------
00202C1A 0000                       @grab256:	dc.w 0
00202C1C 0256                       		dc.w $256
00202C1E 0512                       		dc.w $512
00202C20 0768                       		dc.w $768
00202C22 1024                       		dc.w $1024
00202C24 1280                       		dc.w $1280
00202C26 1536                       		dc.w $1536
00202C28 1792                       		dc.w $1792
00202C2A 2048                       		dc.w $2048
00202C2C 2304                       		dc.w $2304
00202C2E 2560                       		dc.w $2560
00202C30 2816                       		dc.w $2816
00202C32 3072                       		dc.w $3072
00202C34 3328                       		dc.w $3328
00202C36 3584                       		dc.w $3584
00202C38 3840                       		dc.w $3840
00202C3A                            		even
00202C3A 0000 0000                  @grab4096:	dc.l 0
00202C3E 0000 4096                  		dc.l $4096
00202C42 0000 8192                  		dc.l $8192
00202C46 0001 2288                  		dc.l $12288
00202C4A 0001 6384                  		dc.l $16384
00202C4E 0002 0480                  		dc.l $20480
00202C52 0002 4576                  		dc.l $24576
00202C56 0002 8672                  		dc.l $28672
00202C5A 0003 2768                  		dc.l $32768
00202C5E 0003 6864                  		dc.l $36864
00202C62 0004 0960                  		dc.l $40960
00202C66 0004 5056                  		dc.l $45056
00202C6A 0004 9152                  		dc.l $49152
00202C6E 0005 3248                  		dc.l $53248
00202C72 0005 7344                  		dc.l $57344
00202C76 0006 1440                  		dc.l $61440
00202C7A                            		even
00202C7A 0000 0000                  @grab65536: 	dc.l 0
00202C7E 0006 5536                  		dc.l $65536
00202C82 0013 1072                  		dc.l $131072
00202C86 0019 6608                  		dc.l $196608
00202C8A 0026 2144                  		dc.l $262144
00202C8E 0032 7680                  		dc.l $327680
00202C92 0039 3216                  		dc.l $393216
00202C96 0045 8752                  		dc.l $458752
00202C9A 0052 4288                  		dc.l $524288
00202C9E 0058 9824                  		dc.l $589824
00202CA2 0065 5360                  		dc.l $655360
00202CA6 0072 0896                  		dc.l $720896
00202CAA 0078 6432                  		dc.l $786432
00202CAE 0085 1968                  		dc.l $851968
00202CB2 0091 7504                  		dc.l $917504
00202CB6 0098 3040                  		dc.l $983040
00202CBA                            		even
00202CBA                            ; --------------------------------
00202CBA                            
00202CBA                            @jumpy:
00202CBA 0802 0007                  		btst	#7,d2
00202CBE 6700                       		beq.s	@not80
00202CC0 0685 0000 0128             		add.l	#$128,d5
00202CC6 6100 0000                  		bsr	@fixhexdec
00202CCA                            @not80:
00202CCA 0282 0000 007F             		and.l	#$7F,d2
00202CD0 4A82                       		tst.l	d2
00202CD2 6700                       		beq.s	@lowrend
00202CD4 0442 0001                  		sub.w	#1,d2
00202CD8                            @lelno:
00202CD8 0685 0000 0001             		add.l	#1,d5
00202CDE 6100 0000                  		bsr	@fixhexdec
00202CE2 51CA FFF4                  		dbf	d2,@lelno
00202CE6                            @lowrend:
00202CE6 2405                       		move.l	d5,d2
00202CE8 4844                       		swap	d4
00202CEA 4E75                       		rts
00202CEC                            
00202CEC                            ; --------------------------------
00202CEC                            
00202CEC                            @fixhexdec:
00202CEC 3805                       		move.w	d5,d4
00202CEE 0244 000F                  		and.w	#$F,d4
00202CF2 0C44 000A                  		cmp.w	#$A,d4
00202CF6 6D00                       		blt.s	@lowr1
00202CF8 0685 0000 0006             		add.l	#6,d5
00202CFE                            @lowr1:
00202CFE 3805                       		move.w	d5,d4
00202D00 0244 00F0                  		and.w	#$F0,d4
00202D04 0C44 00A0                  		cmp.w	#$A0,d4
00202D08 6D00                       		blt.s	@lowr2
00202D0A 0685 0000 0060             		add.l	#$60,d5
00202D10                            @lowr2:
00202D10 3805                       		move.w	d5,d4
00202D12 0244 0F00                  		and.w	#$F00,d4
00202D16 0C44 0A00                  		cmp.w	#$A00,d4
00202D1A 6D00                       		blt.s	@lowr3
00202D1C 0685 0000 0600             		add.l	#$600,d5
00202D22                            @lowr3:
00202D22 3805                       		move.w	d5,d4
00202D24 0244 F000                  		and.w	#$F000,d4
00202D28 0C44 A000                  		cmp.w	#$A000,d4
00202D2C 6500                       		bcs.s	@lowr4
00202D2E 0685 0000 6000             		add.l	#$6000,d5
00202D34                            @lowr4:
00202D34 4845                       		swap	d5
00202D36 3805                       		move.w	d5,d4
00202D38 0244 000F                  		and.w	#$F,d4
00202D3C 0C44 000A                  		cmp.w	#$A,d4
00202D40 6500                       		bcs.s	@lowr5
00202D42 0685 0000 0006             		add.l	#$6,d5
00202D48                            @lowr5:
00202D48 3805                       		move.w	d5,d4
00202D4A 0244 00F0                  		and.w	#$F0,d4
00202D4E 0C44 00A0                  		cmp.w	#$A0,d4
00202D52 6500                       		bcs.s	@lowr6
00202D54 0685 0000 0060             		add.l	#$60,d5
00202D5A                            @lowr6:
00202D5A 3805                       		move.w	d5,d4
00202D5C 0244 0F00                  		and.w	#$F00,d4
00202D60 0C44 0A00                  		cmp.w	#$A00,d4
00202D64 6500                       		bcs.s	@lowr7
00202D66 0685 0000 0600             		add.l	#$600,d5
00202D6C                            @lowr7:
00202D6C 4845                       		swap	d5
00202D6E 4E75                       		rts
00202D6E 4E75                       		rts
00202D70                            		include	"system/input/map.asm"
00202D70                            ; ====================================================================
00202D70                            ; Input
00202D70                            ; ====================================================================
00202D70                            
00202D70                            ; ====================================================================
00202D70                            ; -------------------------------------------------
00202D70                            ; Variables
00202D70                            ; -------------------------------------------------
00202D70                            
00202D70 =00000001                  JoyUp		equ	%00000001
00202D70 =00000002                  JoyDown		equ	%00000010
00202D70 =00000004                  JoyLeft		equ	%00000100
00202D70 =00000008                  JoyRight	equ	%00001000
00202D70 =00000010                  JoyB		equ	%00010000
00202D70 =00000020                  JoyC		equ	%00100000
00202D70 =00000040                  JoyA		equ	%01000000
00202D70 =00000080                  JoyStart	equ	%10000000
00202D70 =00000000                  bitJoyUp	equ	0
00202D70 =00000001                  bitJoyDown	equ	1
00202D70 =00000002                  bitJoyLeft	equ	2
00202D70 =00000003                  bitJoyRight	equ	3
00202D70 =00000004                  bitJoyB		equ	4
00202D70 =00000005                  bitJoyC		equ	5
00202D70 =00000006                  bitJoyA		equ	6
00202D70 =00000007                  bitJoyStart	equ	7
00202D70                            
00202D70 =00000001                  JoyZ		equ	%00000001
00202D70 =00000002                  JoyY		equ	%00000010
00202D70 =00000004                  JoyX		equ	%00000100
00202D70 =00000008                  JoyMode		equ	%00001000
00202D70 =00000000                  bitJoyZ		equ	0
00202D70 =00000001                  bitJoyY		equ	1
00202D70 =00000002                  bitJoyX		equ	2
00202D70 =00000003                  bitJoyMode	equ	3
00202D70                            
00202D70                            ; --------------------------------------------
00202D70                            
00202D70                            		rsreset
00202D70 =00000000                  CtrlID		rs.b	1
00202D70 =00000001                  PadType		rs.b	1		;only TRUE $01 or FALSE $00
00202D70 =00000002                  ExOnHold	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
00202D70 =00000003                  OnHold		rs.b	1		;SACBRLDU
00202D70 =00000004                  ExOnPress	rs.b	1		;MYXZ		DONT SEPARATE (so this can be read as a word)
00202D70 =00000005                  OnPress		rs.b	1		;SACBRLDU
00202D70 =00000006                  MouseX		rs.w	1		;TODO
00202D70 =00000008                  MouseY		rs.w	1
00202D70 =0000000A                  sizeof_control	rs.l	0
00202D70                            
00202D70                            ; ====================================================================
00202D70                            ; -------------------------------------------------
00202D70                            ; RAM
00202D70                            ; -------------------------------------------------
00202D70                            
00202D70                                            rsset	RAM_Input
00202D70 =FFFFDE80                  RAM_Control_1	rs.b sizeof_control
00202D70 =FFFFDE8A                  RAM_Control_2	rs.b sizeof_control
00202D70                            
00202D70                            ; --------------------------------------------
00202D70                            
00202D70 =FFFFDE94                  sizeof_input	rs.l	0
00202D70                            ; 		inform 0,"input ram: %h",(sizeof_input-RAM_Input)
00202D70                             				
00202D70                            ; ====================================================================
00202D70                            ; -------------------------------------------------
00202D70                            ; Macros
00202D70                            ; -------------------------------------------------
00202D70                            
00202D70                            ; --------------------------------------------
00202D70                            ; --------------------------------------------
00202D70                            		include	"system/hardware/mcd/m68k/comm/calls.asm"
00202D70                            ; =====================================================================
00202D70                            ; -------------------------------------------
00202D70                            ; Calls
00202D70                            ; -------------------------------------------
00202D70                            
00202D70                            			rsset $FFFF9800
00202D70 =FFFF9800                  MD_Hint			rs.w 3
00202D70 =FFFF9806                  MD_VInt			rs.w 3
00202D70 =FFFF980C                  SubCpu_Task_Wait	rs.w 3
00202D70 =FFFF9812                  SubCpu_Task		rs.w 3
00202D70 =FFFF9818                  SubCpu_Wait		rs.w 3
00202D70 =FFFF981E                  SubCpu_Wait_Flag	rs.w 3
00202D70 =FFFF9824                  Input_Read		rs.w 3
00202D70                            
00202D70                            
00202D70                            
00202D70                            		
00202D70                            ; ====================================================================
00202D70                            ; --------------------------------------------
00202D70                            ; Code
00202D70                            ; --------------------------------------------
00202D70                            
00202D70                            MD_Main:
00202D70                            		include	"engine/modes/title/md.asm"
00202D70                            ; ====================================================================
00202D70                            ; -------------------------------------------------
00202D70                            ; Title
00202D70                            ; -------------------------------------------------
00202D70                            
00202D70                            ; ====================================================================
00202D70                            ; --------------------------------------------
00202D70                            ; RAM
00202D70                            ; --------------------------------------------
00202D70                            
00202D70                            		rsset RAM_ModeBuffer
00202D70                            ; this_counter	rs.l 1
00202D70 =FFFFBC00                  model_buff	rs.b $20
00202D70 =FFFFBC20                  test_val	rs.l 1
00202D70                            
00202D70                            ; ====================================================================
00202D70                            ; --------------------------------------------
00202D70                            ; Init
00202D70                            ; --------------------------------------------
00202D70                            
00202D70                            mode_Title:
00202D82 46FC 2700                  		move.w	#$2700,sr
00202D86 6100 D2DA                  		bsr	Video_ClearAll
00202D8A 6100 D94A                    		bsr	SMEG_StopSnd
00202D8E                              		
00202D8E 23FC 5000 0003 00C0 0004   		move.l	#$50000003,(vdp_ctrl)
00202D98 41F9 0000 0000             		lea	(Art_DebugFont),a0
00202D9E 303C 0000                  		move.w	#((Art_DebugFont_e-Art_DebugFont)/4)-1,d0
00202DA2                            @dbg_loop:
00202DA2 23D8 00C0 0000             		move.l	(a0)+,(vdp_data)
00202DA8 51C8 FFF8                  		dbf	d0,@dbg_loop
00202DAC 43F9 FFFF E9D0              		lea	(RAM_PalFade),a1
00202DB2 41F9 0000 0000             		lea	(Pal_Title),a0
00202DB8 303C 000F                  		move.w	#16-1,d0
00202DBC                            @pal_loop2:
00202DBC 32D8                       		move.w	(a0)+,(a1)+
00202DBE 51C8 FFFC                  		dbf	d0,@pal_loop2
00202DC2 337C 0644 001C             		move.w	#$644,$1C(a1)
00202DC8 337C 0EEE 001E             		move.w	#$EEE,$1E(a1)
00202DCE                            		
00202DCE                            ; MARS: Model viewer
00202DCE                            		
00202DCE                            ; 		if MARS
00202DCE                            ; 		
00202DCE                            ; 		lea	(Asc_MarsMdl),a0
00202DCE                            ; 		moveq	#0,d0
00202DCE                            ; 		move.l	#$00010001,d1
00202DCE                            ; 		move.w	#$580|$2000,d2
00202DCE                            ; 		bsr	Video_PrintText
00202DCE                            ; 		bsr	MarsMdl_Init
00202DCE                            ; 
00202DCE                            ; ; Else: Text
00202DCE                            ; 
00202DCE                            ;    		else
00202DCE                               		
00202DCE 41F9 0000 0000             		lea	(Asc_Karasucia),a0
00202DD4 7000                       		moveq	#0,d0
00202DD6 223C 0001 0001             		move.l	#$00010001,d1
00202DDC 343C 2680                  		move.w	#$680|$2000,d2
00202DE0 6100 D4AC                  		bsr	Video_PrintText
00202DE4                            		
00202DE4                            ; 		lea	(Map_Title),a0
00202DE4                            ;  		moveq	#0,d0
00202DE4                            ;  		move.l	#$00000000,d1
00202DE4                            ;    		move.l	#$0027001B,d2
00202DE4                            ;    		moveq	#1,d3
00202DE4                            ;    		bsr	Video_MakeMap
00202DE4                            ; 		move.l	#$40200000,(vdp_ctrl)
00202DE4                            ; 		lea	(Art_Title),a0
00202DE4                            ; 		move.w	#(Art_Title_End-Art_Title)/4,d0
00202DE4                            ; @art_loop:
00202DE4                            ; 		move.l	(a0)+,(vdp_data)
00202DE4                            ; 		dbf	d0,@art_loop
00202DE4                            		
00202DE4                            ;     		endif
00202DE4                               		
00202DE4 13FC 0007 FFFF ED1B          		move.b	#%111,(RAM_VidRegs+$B)
00202DEC 6100 D2FA                    		bsr	Video_Update
00202DF0                               		
00202DF0                            ;    		if MCD=0
00202DF0                            ;  		move.l	#TEST_IT,d0
00202DF0                            ;  		moveq 	#2,d1
00202DF0                            ;  		moveq	#0,d2
00202DF0                            ;   		bsr	Audio_Track_play
00202DF0                            ;   		endif
00202DF0                            ;   		move.l	#TEST_IT_2,d0
00202DF0                            ;   		move.w 	#2,d1
00202DF0                            ;   		moveq	#0,d2
00202DF0                            ;   		bsr	Audio_Track_play
00202DF0                            		
00202DF0                            ;  		if MCD=0
00202DF0                            ; 		move.l	#TEST_WAV,d0
00202DF0                            ; 		move.l	#TEST_WAV_end,d1
00202DF0                            ; 		moveq	#0,d2
00202DF0                            ; 		move.w	#12*4,d3
00202DF0                            ; 		bsr	Audio_Sample_Set
00202DF0                            ; 		bsr	Audio_Sample_Play
00202DF0                            ;  		endif
00202DF0                            		
00202DF0 46FC 2000                   		move.w	#$2000,sr
00202E06                            		
00202E06                            ; --------------------------------------------
00202E06                            ; Loop
00202E06                            ; --------------------------------------------
00202E06                            
00202E06                            ; 		move.l	#$300000,(test_val)
00202E06                            @loop:
00202E06 6100 D4B8                   		bsr	Video_vsync
00202E0A                            		
00202E0A                            ;  		moveq	#0,d0
00202E0A                            ; 		move.l	#$00080008,d1
00202E0A                            ; 		move.l	(test_val),d2
00202E0A                            ; 		move.w	#$680|$2000,d3
00202E0A                            ; 		moveq	#6,d4
00202E0A                            ; 		bsr	Video_PrintVal
00202E0A                            ; 
00202E0A                            ;  		moveq	#0,d0
00202E0A                            ; 		move.l	#$00080009,d1
00202E0A                            ; 		move.l	(test_val),d2
00202E0A                            ; 		move.w	#$680|$2000,d3
00202E0A                            ; 		moveq	#2,d4
00202E0A                            ; 		bsr	Video_PrintVal
00202E0A                            		
00202E0A                            ; 		add.l	#1,(test_val)
00202E0A                            
00202E0A                            ; 		if MARS
00202E0A                            ; 		bsr	MarsMdl_Upd
00202E0A                            ; 		endif
00202E0A                            
00202E0A                            ; ------------
00202E0A                            ; TESTING SFX
00202E0A                            ; ------------
00202E0A                            
00202E0A                            ; 		if MARS|MCD=0
00202E0A                            ; 		btst	#bitJoyA,(RAM_Control_1+OnPress)
00202E0A                            ;  		beq.s	@nope
00202E0A                            ;   		move.l	#SndSfx_OneUp,d0
00202E0A                            ;   		moveq 	#0,d1
00202E0A                            ;   		moveq	#1,d2
00202E0A                            ;   		bsr	Audio_Track_play
00202E0A                            ; @nope:
00202E0A                            ; 		endif
00202E0A                            		
00202E0A                            ; ------------
00202E0A                            
00202E0A 0839 0007 FFFF DE85        		btst	#bitJoyStart,(RAM_Control_1+OnPress)
00202E12 6700 FFF2                   		beq	@loop
00202E16 4279 FFFF DC06              		clr.w	(RAM_CurrLevel)
00202E1C 13FC 0001 FFFF DE4F        		move.b	#1,(RAM_GameMode)
00202E24 4E75                       		rts
00202E26                            		
00202E26                            ; ====================================================================
00202E26                            ; --------------------------------------------
00202E26                            ; Subs
00202E26                            ; --------------------------------------------
00202E26                            
00202E26                            BG_DEFORM:
00202E26 41F9 FFFF DF00             		lea	(RAM_ScrlHor),a0
00202E2C 3606                       		move.w	d6,d3
00202E2E 343C 00DF                  		move.w	#224-1,d2
00202E32                            @loop_hor:
00202E32 3003                       		move.w	d3,d0
00202E34 6100 FB04                  		bsr	CalcSine
00202E38 E848                       		lsr.w	#4,d0
00202E3A 3080                       		move.w	d0,(a0)
00202E3C D0FC 0004                  		adda	#4,a0
00202E40 0643 0001                  		add.w	#1,d3
00202E44 51CA FFEC                  		dbf	d2,@loop_hor
00202E48                            		
00202E48 41F9 FFFF E2C0             		lea	(RAM_ScrlVer),a0
00202E4E 3606                       		move.w	d6,d3
00202E50 343C 0013                  		move.w	#(320/16)-1,d2
00202E54                            @loop_ver:
00202E54 3003                       		move.w	d3,d0
00202E56 6100 FAE2                  		bsr	CalcSine
00202E5A E848                       		lsr.w	#4,d0
00202E5C 3080                       		move.w	d0,(a0)
00202E5E D0FC 0004                  		adda	#4,a0
00202E62 0643 0002                  		add.w	#2,d3
00202E66 51CA FFEC                  		dbf	d2,@loop_ver
00202E6A                            		
00202E6A 0646 0001                  		add.w	#1,d6
00202E6E 4E75                       		rts
00202E70                            	
00202E70                            ; ; --------------------------------------------
00202E70                            ; ; MARS ONLY
00202E70                            ; ; 
00202E70                            ; ; 3d test
00202E70                            ; ; --------------------------------------------
00202E70                            ; 
00202E70                            ; 		if MARS
00202E70                            ; MarsMdl_Init:
00202E70                            ; 		clr.w	(model_buff+$10)
00202E70                            ; 		bsr	MarsMdl_Set
00202E70                            ; 
00202E70                            ; ; ------------------
00202E70                            ; ; Loop
00202E70                            ; ; ------------------
00202E70                            ; 
00202E70                            ; MarsMdl_Upd:
00202E70                            ; 		move.b	(RAM_Control_1+ExOnHold),d4
00202E70                            ; 		btst	#bitJoyX,d4
00202E70                            ;  		beq.s	@not_X
00202E70                            ;  		add.w	#1,(model_buff+4)
00202E70                            ; @not_X:
00202E70                            ; 		btst	#bitJoyY,d4
00202E70                            ;  		beq.s	@not_Y
00202E70                            ;  		sub.w	#1,(model_buff+4)
00202E70                            ; @not_Y:
00202E70                            ; 		move.b	(RAM_Control_1+OnHold),d4
00202E70                            ; 		btst	#bitJoyRight,d4
00202E70                            ;  		beq.s	@not_right
00202E70                            ;  		sub.w	#1,(model_buff)
00202E70                            ; @not_right:
00202E70                            ; 		btst	#bitJoyLeft,d4
00202E70                            ;  		beq.s	@not_left
00202E70                            ;  		add.w	#1,(model_buff)
00202E70                            ; @not_left:
00202E70                            ; 		btst	#bitJoyDown,d4
00202E70                            ;  		beq.s	@not_down
00202E70                            ;  		sub.w	#1,(model_buff+2)
00202E70                            ; @not_down:
00202E70                            ; 		btst	#bitJoyUp,d4
00202E70                            ;  		beq.s	@not_up
00202E70                            ;  		add.w	#1,(model_buff+2)
00202E70                            ; @not_up:
00202E70                            ; 
00202E70                            ; 
00202E70                            ; 		move.b	(RAM_Control_1+OnPress),d4
00202E70                            ; 		btst	#bitJoyB,d4
00202E70                            ;  		beq.s	@not_B
00202E70                            ;  		add.w	#1,(model_buff+$10)
00202E70                            ;  		bsr	MarsMdl_Set
00202E70                            ; @not_B:
00202E70                            ; 		btst	#bitJoyA,d4
00202E70                            ;  		beq.s	@not_A
00202E70                            ;  		sub.w	#1,(model_buff+$10)
00202E70                            ;  		bsr	MarsMdl_Set
00202E70                            ; @not_A:
00202E70                            ; 		btst	#bitJoyC,d4
00202E70                            ;  		beq.s	@not_C
00202E70                            ;  		clr.w	(model_buff)
00202E70                            ;  		clr.w	(model_buff+2)
00202E70                            ;  		move.w	#0,(model_buff+4)
00202E70                            ;  		clr.w	(model_buff+6)
00202E70                            ;  		clr.w	(model_buff+8)
00202E70                            ;  		clr.w	(model_buff+$A)
00202E70                            ; @not_C:
00202E70                            ; 
00202E70                            ; ; Contoller 2
00202E70                            ; 
00202E70                            ; 		move.b	(RAM_Control_2+OnHold),d4
00202E70                            ; 		btst	#bitJoyRight,d4
00202E70                            ;  		beq.s	@not_right2
00202E70                            ;  		add.w	#1,(model_buff+8)
00202E70                            ; @not_right2:
00202E70                            ; 		btst	#bitJoyLeft,d4
00202E70                            ;  		beq.s	@not_left2
00202E70                            ;  		sub.w	#1,(model_buff+8)
00202E70                            ; @not_left2:
00202E70                            ; 		btst	#bitJoyDown,d4
00202E70                            ;  		beq.s	@not_down2
00202E70                            ;  		add.w	#1,(model_buff+6)
00202E70                            ; @not_down2:
00202E70                            ; 		btst	#bitJoyUp,d4
00202E70                            ;  		beq.s	@not_up2
00202E70                            ;  		sub.w	#1,(model_buff+6)
00202E70                            ; @not_up2:
00202E70                            ; 
00202E70                            ; 		btst	#bitJoyB,d4
00202E70                            ;  		beq.s	@not_B2
00202E70                            ;  		add.w	#1,(model_buff+$A)
00202E70                            ; @not_B2:
00202E70                            ; 		btst	#bitJoyA,d4
00202E70                            ;  		beq.s	@not_A2
00202E70                            ;  		sub.w	#1,(model_buff+$A)
00202E70                            ; @not_A2:
00202E70                            ; 
00202E70                            ; ; ------------------------
00202E70                            ; ; Show values
00202E70                            ; ; ------------------------
00202E70                            ; 
00202E70                            ; 		lea	(model_buff),a1
00202E70                            ; 		moveq	#2,d6
00202E70                            ; 		move.l	#$00050002,d7
00202E70                            ; @next3:
00202E70                            ; 		moveq	#0,d0
00202E70                            ; 		move.l	d7,d1
00202E70                            ; 		move.w	(a1)+,d2
00202E70                            ; 		move.w	#$2000|$580,d3
00202E70                            ; 		moveq	#1,d4
00202E70                            ; 		bsr	Video_PrintVal
00202E70                            ; 		add.l	#$00050000,d7
00202E70                            ; 		dbf	d6,@next3
00202E70                            ; 		
00202E70                            ; 		lea	(model_buff+6),a1
00202E70                            ; 		moveq	#2,d6
00202E70                            ; 		move.l	#$00050003,d7
00202E70                            ; @next4:
00202E70                            ; 		moveq	#0,d0
00202E70                            ; 		move.l	d7,d1
00202E70                            ; 		move.w	(a1)+,d2
00202E70                            ; 		move.w	#$2000|$580,d3
00202E70                            ; 		moveq	#1,d4
00202E70                            ; 		bsr	Video_PrintVal
00202E70                            ; 		add.l	#$00050000,d7
00202E70                            ; 		dbf	d6,@next4
00202E70                            ; 		
00202E70                            ; 		moveq	#0,d0
00202E70                            ; 		move.l	#$0008001A,d1
00202E70                            ; 		move.w	(marsreg+comm14),d2
00202E70                            ; 		move.w	#$2000|$580,d3
00202E70                            ; 		moveq	#1,d4
00202E70                            ; 		bsr	Video_PrintVal
00202E70                            ; 
00202E70                            ; ; 		lea	(marsreg+comm0),a1
00202E70                            ; ; 		moveq	#3,d6
00202E70                            ; ; 		move.l	#$00010019,d7
00202E70                            ; ; @next:
00202E70                            ; ; 		moveq	#0,d0
00202E70                            ; ; 		move.l	d7,d1
00202E70                            ; ; 		move.w	(a1)+,d2
00202E70                            ; ; 		move.w	#$2000|$580,d3
00202E70                            ; ; 		moveq	#1,d4
00202E70                            ; ; 		bsr	Video_PrintVal
00202E70                            ; ; 		add.l	#$00050000,d7
00202E70                            ; ; 		dbf	d6,@next
00202E70                            ; ; 		
00202E70                            ; ; 		lea	(marsreg+comm8),a1
00202E70                            ; ; 		moveq	#3,d6
00202E70                            ; ; 		move.l	#$0001001A,d7
00202E70                            ; ; @next2:
00202E70                            ; ; 		moveq	#0,d0
00202E70                            ; ; 		move.l	d7,d1
00202E70                            ; ; 		move.w	(a1)+,d2
00202E70                            ; ; 		move.w	#$2000|$580,d3
00202E70                            ; ; 		moveq	#1,d4
00202E70                            ; ; 		bsr	Video_PrintVal
00202E70                            ; ; 		add.l	#$00050000,d7
00202E70                            ; ; 		dbf	d6,@next2
00202E70                            ; 		
00202E70                            ; ; ------------------------
00202E70                            ; ; Send data
00202E70                            ; ; ------------------------
00202E70                            ; 
00202E70                            ; @busy:		tst.b	(marsreg+comm0+1)
00202E70                            ; 		bne.s	@busy
00202E70                            ; 		clr.l	(marsreg+comm4)
00202E70                            ; 		clr.l	(marsreg+comm8)
00202E70                            ; 		move.w	#$14,(marsreg+comm0)
00202E70                            ; 		lea	(marsreg+comm4),a0
00202E70                            ; 		move.w	#0,(a0)+
00202E70                            ; 		move.w	(model_buff),(a0)+
00202E70                            ; 		move.w	(model_buff+2),(a0)+
00202E70                            ; 		move.w	(model_buff+4),(a0)+
00202E70                            ;  		bset	#0,(marsreg+intctl)
00202E70                            ;  		
00202E70                            ; @busy2:		tst.b	(marsreg+comm0+1)
00202E70                            ; 		bne.s	@busy2
00202E70                            ; 		clr.l	(marsreg+comm4)
00202E70                            ; 		clr.l	(marsreg+comm8)
00202E70                            ; 		move.w	#$15,(marsreg+comm0)
00202E70                            ; 		lea	(marsreg+comm4),a0
00202E70                            ; 		move.w	#0,(a0)+
00202E70                            ; 		move.w	(model_buff+6),(a0)+
00202E70                            ; 		move.w	(model_buff+8),(a0)+
00202E70                            ; 		move.w	(model_buff+$A),(a0)+
00202E70                            ;  		bset	#0,(marsreg+intctl)
00202E70                            ; 		rts
00202E70                            ; 		
00202E70                            ; ; ------------------------------------
00202E70                            ; 
00202E70                            ; MarsMdl_Set:
00202E70                            ; 		btst	#0,(marsreg+intctl)
00202E70                            ; 		bne.s	@busyinit
00202E70                            ; 		move.w	#$10,(marsreg+comm0)
00202E70                            ; 		lea	(marsreg+comm4),a0
00202E70                            ; 		move.w	(model_buff+$10),d0
00202E70                            ; 		lsl.w	#4,d0
00202E70                            ; 		move.l	List_Models(pc,d0.w),(a0)+
00202E70                            ; 		move.w	#0,(a0)+
00202E70                            ;  		bset	#0,(marsreg+intctl)
00202E70                            ;  		
00202E70                            ;  		clr.l	(model_buff)
00202E70                            ;  		move.w	#0,(model_buff+4)
00202E70                            ;  		
00202E70                            ;  		clr.l	(model_buff+6)
00202E70                            ; 		clr.w	(model_buff+$A)
00202E70                            ; 		
00202E70                            ; ; 		move.w	(model_buff+$10),d0
00202E70                            ; ; 		lsl.w	#4,d0
00202E70                            ; ;  		lea 	List_Models+4(pc,d0.w),a0
00202E70                            ; ; 		moveq	#0,d0
00202E70                            ; ; 		move.l	#$00170001,d1
00202E70                            ; ; 		move.w	#$580|$2000,d2
00202E70                            ; ; 		bsr	Video_PrintText
00202E70                            ;  		
00202E70                            ; @busyinit:
00202E70                            ; 		rts
00202E70                            ; 		
00202E70                            ; 		endif
00202E70                            		
00202E70                            ; ====================================================================
00202E70                            ; --------------------------------------------
00202E70                            ; VBlank
00202E70                            ; --------------------------------------------
00202E70                            
00202E70                            ; ====================================================================		
00202E70                            ; --------------------------------------------
00202E70                            ; HBlank
00202E70                            ; --------------------------------------------
00202E70                            		
00202E70                            ; ====================================================================		
00202E70                            ; --------------------------------------------
00202E70                            ; Data
00202E70                            ; --------------------------------------------
00202E70                            
00202E70                            		
00202E70 4F62 6A20 2D58 2D20 202D+  Asc_MarsMdl:	dc.b "Obj -X-  -Y-  -Z-  Wld -X-  -Y-  -Z- ",$A
00202E96 2020 5020 3030 3030 2030+  		dc.b "  P 0000 0000 0000   P 0000 0000 0000",$A
00202EBC 2020 5220 3030 3030 2030+  		dc.b "  R 0000 0000 0000   R 0000 0000 0000",$A
00202EE2 0A                         		dc.b $A
00202EE3 0A                         		dc.b $A
00202EE4 0A                         		dc.b $A
00202EE5 0A                         		dc.b $A
00202EE6 0A                         		dc.b $A
00202EE7 0A                         		dc.b $A
00202EE8 0A                         		dc.b $A
00202EE9 0A                         		dc.b $A
00202EEA 0A                         		dc.b $A
00202EEB 0A                         		dc.b $A
00202EEC 0A                         		dc.b $A
00202EED 0A                         		dc.b $A
00202EEE 0A                         		dc.b $A
00202EEF 0A                         		dc.b $A
00202EF0 0A                         		dc.b $A
00202EF1 0A                         		dc.b $A
00202EF2 0A                         		dc.b $A
00202EF3 0A                         		dc.b $A
00202EF4 0A                         		dc.b $A
00202EF5 0A                         		dc.b $A
00202EF6 0A                         		dc.b $A
00202EF7 0A                         		dc.b $A
00202EF8 4661 6365 733A 2030 3030+  		dc.b "Faces: 0000",$A
00202F04 00                         		dc.b 0
00202F06 00                         		even
00202F06                            		
00202F06                            Asc_Karasucia:
00202F06 446F 6D69 6E6F 6520 4164+  		dc.b "Dominoe Adventures mini-game",$A
00202F23 0A                         		dc.b $A
00202F24 0A                         		dc.b $A
00202F25 0A                         		dc.b $A
00202F26 0A                         		dc.b $A
00202F27 0A                         		dc.b $A
00202F28 0A                         		dc.b $A
00202F29 0A                         		dc.b $A
00202F2A 0A                         		dc.b $A
00202F2B 0A                         		dc.b $A
00202F2C 0A                         		dc.b $A
00202F2D 0A                         		dc.b $A
00202F2E 0A                         		dc.b $A
00202F2F 0A                         		dc.b $A
00202F30 0A                         		dc.b $A
00202F31 0A                         		dc.b $A
00202F32 0A                         		dc.b $A
00202F33 0A                         		dc.b $A
00202F34 0A                         		dc.b $A
00202F35 0A                         		dc.b $A
00202F36 0A                         		dc.b $A
00202F37 0A                         		dc.b $A
00202F38 0A                         		dc.b $A
00202F39 0A                         		dc.b $A
00202F3A 0A                         		dc.b $A
00202F3B 2843 2947 4636 3420 3230+  		dc.b "(C)GF64 2017"
00202F47 00                         		dc.b 0
00202F48                            		even
00202F48                            		
00202F48                            Art_DebugFont:	incbin "engine/shared/dbgfont.bin"
00203F48                            Art_DebugFont_e:
00203F48                            		even
00203F48                            		
00203F48                            		
00203F48                            		
00203F48                            ; ====================================================================		
00203F48                            ; --------------------------------------------
00203F48                            ; Data
00203F48                            ; --------------------------------------------
00203F48                            
00203F48                            		include	"engine/modes/title/data.asm"
00203F48                            ; ====================================================================
00203F48                            ; -------------------------------------------------
00203F48                            ; Title DATA
00203F48                            ; -------------------------------------------------
00203F48                            		
00203F48                            Pal_Title:	incbin	"engine/modes/title/data/pal.bin"
00203F68                            		even
00203F68                            Map_Title:	incbin	"engine/modes/title/data/map.bin"
00204828                            		even
00204828                            Art_Title:	incbin	"engine/modes/title/data/art.bin"
00206B08                            Art_Title_End:	even
00206B08                            
00206B08                            ; Pal_Gen3:	incbin	"engine/modes/title/data/pal_2.bin"
00206B08                            ; 		even
00206B08                            ; Map_Gen3:	incbin	"engine/modes/title/data/map_2.bin"
00206B08                            ; 		even
00206B08                            ; Art_Gen3:	incbin	"engine/modes/title/data/art_2.bin"
00206B08                            ; Art_Gen3_End:	even
00206B08                            
00206B08                            ; -------------------------------------------------
00206B08                            				
00206B08                            ; --------------------------
00206B08                            ; SFX: COIN
00206B08                            ; --------------------------
00206B08                            
00206B08                            Snd_TestNotes:
00206B08 00FF                       		dc.b 0,-1
00206B0A 0000 0000                  		dc.l @notes
00206B0E 0000 0000                       		dc.l @ins
00206B12 0001                            		dc.w 1
00206B14 0240 800F                        		dc.b FM_3,64,$80,$F
00206B18                            @notes:		incbin "engine/sound/testins.bin"
00206BCE 00                               		even
00206BCE 0000 FFFF 0000             @ins:		dc.w @ymha-@ins,-1,@noise-@ins 
00206BD4 0001 0000                  @ymha:		dc.w 1,0
00206BD8 0000 0000                  		dc.l test_fm
00206BDC 0002 0000                  		dc.w 2,0
00206BE0 0000 0000                  		dc.l test_fm+$19
00206BE4 0003 0000                  		dc.w 3,0
00206BE8 0000 0000                  		dc.l test_fm
00206BEC 0004 0000                  		dc.w 4,0
00206BF0 0000 0000                  		dc.l test_fm
00206BF4 0005 0000                  		dc.w 5,0
00206BF8 0000 0000                  		dc.l test_fm
00206BFC 0006 0000                  		dc.w 6,0
00206C00 0000 0000                  		dc.l test_fm
00206C04                            	
00206C04 0001 0004                  @noise:		dc.w 1,%100
00206C08                            		even
00206C08                            
00206C08                            test_fm:	incbin	"engine/sound/instruments/FM/bass/bass_jazz.bin"
00206C21                            		incbin	"engine/sound/instruments/FM/brass/brass_trumpet.bin"
00206C3A                            		even
00206C3A                            		
00206C3A                            ; -------------------------------------------------
00206C3A                            
00206C3A                            fmVoice_bell_1:
00206C3A                            		incbin	"engine/sound/instruments/fm/bell/bell_xmas.bin"
00206C54 00                         		even
00206C54                            fmVoice_piano_rave:
00206C54                            		incbin	"engine/sound/instruments/fm/piano/piano_rave_old.bin"
00206C6E 00                         		even
00206C6E                            fmVoice_bass_ambient:
00206C6E                            		incbin	"engine/sound/instruments/fm/bass/bass_ambient.bin"
00206C88 00                         		even
00206C88                            fmVoice_bass_2:
00206C88                            		incbin	"engine/sound/instruments/fm/bass/bass_low.bin"
00206CA2 00                         		even
00206CA2                            fmVoice_belllow:
00206CA2                            		incbin	"engine/sound/instruments/fm/brass/brass_funny.bin"
00206CBC 00                         		even
00206CBC                            fmVoice_flaute_2:
00206CBC                            		incbin	"engine/sound/instruments/fm/ding_1.bin"
00206CD6 00                         		even
00206CD6                            fmVoice_brass_trumpet:
00206CD6                            		incbin	"engine/sound/instruments/fm/brass/brass_trumpet.bin"
00206CF0 00                         		even
00206CF0                            fmVoice_bell_low:
00206CF0                            		incbin	"engine/sound/instruments/fm/bell/bell_low.bin"
00206D0A 00                         		even
00206D0A                            		
00206D0A                            fm_hatopen:
00206D0A                            		incbin	"engine/sound/instruments/fm/drums/fm3_openhat.bin"
00206D24 00                         		even
00206D24                            fm_hatclosed:
00206D24                            		incbin	"engine/sound/instruments/fm/drums/fm3_closedhat.bin"
00206D3E 00                         		even
00206D3E                            
00206D3E                            fmVoice_dolp_wha:
00206D3E                            		incbin	"engine/sound/instruments/fm/fx/dolphin_wah.bin"
00206DBC 00                         		even
00206DBC                            fmVoice_openhat:
00206DBC                            		incbin	"engine/sound/instruments/fm/wsb95_bullpen.bin"
00206E6C 00                         		even
00206E6C                            ; 		
00206E6C                            ; 		cnop 0,$8000
00206E6C                            ; wav_yobeats:	incbin	"engine/sound/instruments/dac/beat_yo.wav",$2C
00206E6C                            ; wav_yobeats_e:	even
00206E6C                            ; 
00206E6C                            ; hrdcbyte:	incbin	"engine/sound/instruments/dac/hrdcbyte.wav",$2C
00206E6C                            ; hrdcbyte_e:	even
00206E6C                            ; 
00206E6C                            ; dnceheye:	incbin	"engine/sound/instruments/dac/dnceheye.wav",$2C
00206E6C                            ; dnceheye_e:	even
00206E6C                            
00206E6C                            ; 		if MCD|MARS=0
00206E6C                            ; TEST_WAV:	incbin "ideas/test.wav",$2C,$200000
00206E6C                            ; TEST_WAV_end:	even
00206E6C                            ; 		endif
00206E6C                            
00206E6C                            wav_kick:	incbin	"engine/sound/instruments/dac/sauron_kick.wav",$2C
00207DFA                            wav_kick_e:
00207DFA                            wav_tom:	incbin	"engine/sound/instruments/dac/sauron_tom.wav",$2C
002089B4                            wav_tom_e:
002089B4                            wav_snare:	incbin	"engine/sound/instruments/dac/snare.wav",$2C
00209D88                            wav_snare_e:
00209D88                            		even
00209D88                            		
00209D88                            		
00209D88                            		
00209D88                            ; ====================================================================	
00209D88                            
00209D88                            		inform 0,"TITLE MODE ROM uses: %h",*-$200000
00209D88                            		objend
00009D88                            		align $40000
