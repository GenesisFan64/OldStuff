0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; Game Gear / Master System
0000                      ; -------------------------------------------------
0000                      
0000                      		include "incl/macros.asm"
0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; MACROS
0000                      ; -------------------------------------------------
0000                      
0000                      ; -------------------------------------------------
0000                      ; Slot 2 bankswitch
0000                      ; -------------------------------------------------
0000                      
0000                      bankdata macro LABEL
0000                      	ld	a,(LABEL>>14)&0FFh
0000                      	ld      (0FFFEh),a
0000                      	endm
0000                      	endm
0000                      		include "ram.asm"
0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; Variables
0000                      ; -------------------------------------------------
0000                      
0000 =000000D0            bitFrameWait		equ	0
0000 =000000E5            bitVBlankWait		equ	1
0000 =000000FA            bitHBlankWait		equ	2
0000 =00000111            bitDontWaitHInt		equ	3
0000 =00000124            bitLockPads		equ	4
0000 =00000137            bitHotStart		equ	5
0000 =00000148            bitVerDir		equ	6
0000                      
0000                      ; -------------------------------------------------
0000                      ; RAM
0000                      ; -------------------------------------------------
0000                      
0000                      			rsset 0C000h
0000 =000001E0            ram_modebuffer		rb 800h
0000 =000001F7            ram_sprbuffer		rb 100h
0000                      
0000 =0000020C            ram_vintjmpto		rb 1
0000 =0000021F            ram_vintaddr		rw 1
0000 =00000233            ram_hintjmpto		rb 1
0000 =00000246            ram_hintaddr		rw 1
0000                      
0000 =0000025A            ram_vintwait		rb 1
0000 =0000026E            ram_vdpregs		rb 0Ah
0000 =00000285            ram_runfadecol		rb 10h
0000 =00000297            ram_joypads		rb 8
0000 =000002AA            ram_gamemode		rb 1
0000                      
0000 =000002CB            ram_vscroll		rw 1			;now a WORD
0000 =000002DD            ram_hscroll		rw 1
0000                      
0000 =000002F7            ram_sounddriver		rb 0FFh
0000 =0000030E            ram_palbuffer		rb 32*2
0000 =00000327            ram_palfadebuff		rb 32*2
0000 =0000033E            ram_sprcontrol		rb 10h
0000                      
0000 =00000357            ram_tilestovdp		rb 800h
0000                      
0000 =00000367            ram_end			rb 0
0000                      ; 			inform 0,"RAM ENDS AT: %h",ram_end
0000                      ; 			inform 0,"RAM ENDS AT: %h",ram_end
0000                      		
0000                      ; ====================================================================
0000                      ; -------------------------------------------------
0000                      ; Game starts
0000                      ; -------------------------------------------------
0000                      
0000                      		org     0
0000 F3                   		di				; disable interrupts
0001 ED 56                		im      1
0003 31 F8 DF             		ld      sp,0DFF8h
0006 C3 00 00             		jp      Init
0009                      
0009                      ; ====================================================================
0009                      ; -------------------------------------------------
0009                      ; IRQ
0009                      ; -------------------------------------------------
0009                      
0009                      		include "ints.asm"
0009                      ; ====================================================================
0009                      ; -------------------------------------------------
0009                      ; IRQ
0009                      ; 
0009                      ; AF and HL are always saved
0009                      ; -------------------------------------------------
0009                      
0009                      		org     38h		; AT 38h: Interrupts
0038 F3                    		di
0039 F5                   		push	af
003A                      		
003A DB 00                		in      a,(Vcom)
003C E6 80                		and	%10000000
003E C2 00 00             		jp	nz,@its_vint
0041                      		
0041                      ; -------------------------------------------------
0041                      ; HBlank
0041                      ; -------------------------------------------------
0041                      
0041                      ; 		pop	af
0041                      ; 		ei
0041                      ; 		retn
0041                      ; 		
0041 C3 00 00             		jp	hblank
0044                      		
0044                      ; -------------------------------------------------
0044                      ; VBlank
0044                      ; -------------------------------------------------
0044                      
0044                      @its_vint:
0044 C3 00 00             		jp	vblank
0047                      
0047                      ; ====================================================================
0047                      ; -------------------------------------------------
0047                      ; SMS PAUSE
0047                      ; -------------------------------------------------
0047                      
0047                      		org     66h		; SMS pause button
0066 ED 45                		retn	
0068                      
0068                      ; ====================================================================
0068                      
0068                      
0068                      VBlank_Default:	
0068 D9                   		exx
0069 DD E5                		push	ix
006B FD E5                		push	iy
006D                      		
006D                      
006D                      
006D                      ; 		call	palfade
006D                      ; 		call	pads_read
006D                      
006D                      ; --------------------
006D                      ; Palette
006D                      ; --------------------
006D                       		
006D                      ; 		xor 	a
006D                      ;  		out     (Vcom),a
006D                      ;  		ld      a,Vcolor
006D                      ;  		out     (Vcom),a
006D                      ;  		
006D                      ; 		ld	hl,ram_palbuffer
006D                      ; 		if MERCURY
006D                      ; 		ld	b,32*2
006D                      ; 		else
006D                      ; 		ld	b,32
006D                      ; 		endif
006D                      ;  		ld 	c,Vdata	
006D                      ;  		otir	
006D                      
006D                      ; --------------------
006D                      ; VSync done
006D                      ; --------------------
006D                       		
006D FD E1                		pop	iy
006F DD E1                		pop	ix
0071 D9                   		exx
0072 C9                   		ret
0073                      
0073                      ; -------------------------------------------------
0073                      ; HBlank
0073                      ; -------------------------------------------------
0073                      
0073                      HBlank_Default:
0073 D9                   		exx
0074                      		
0074 3A 00 C0             		ld	a,(ram_modebuffer)
0077 5F                   		ld	e,a
0078 3A 01 C0             		ld	a,(ram_modebuffer+1)
007B 57                   		ld	d,a
007C                      		
007C 1A                    		ld      a,(de)
007D 0F                    		rrca
007E 0F                    		rrca
007F 0F                    		rrca
0080 0F                     		rrca
0081 E6 0F                   		and     %00001111
0083 F6 90                   		or      90h;+40h
0085 D3 7F                    		out     (7Fh),a
0087 C6 20                     		add	20h
0089 D3 7F                     		out     (7Fh),a
008B C6 20                     		add	20h
008D D3 7F                     		out     (7Fh),a
008F                           		
008F 13                   		inc 	de
0090                      		
0090 7A                    		ld	a,d
0091 FE C0                 		cp	0C0h
0093 DA 00 00               		jp	c,@keep
0096 16 80                  		ld	d,80h
0098 3A 02 C0             		ld	a,(ram_modebuffer+2)
009B 3C                   		inc 	a
009C 32 FF FF                 		ld      (0FFFFh),a
009F 32 02 C0             		ld	(ram_modebuffer+2),a
00A2                      		
00A2                      @keep:
00A2 7B                   		ld	a,e
00A3 32 00 C0             		ld	(ram_modebuffer),a
00A6 7A                   		ld	a,d
00A7 32 01 C0             		ld	(ram_modebuffer+1),a
00AA                      		
00AA D9                   		exx
00AB C9                    		ret
00AC                      		
00AC                      ; -------------------------------------------------
00AC                      ; Data
00AC                      ; -------------------------------------------------
00AC                      
00AC                      ver_table:
00AC                      		incbin "subs/vertbl.bin"
0EAC                      		
0EAC                      ; ====================================================================
0EAC                      ; -------------------------------------------------
0EAC                      ; Subs
0EAC                      ; -------------------------------------------------
0EAC                      
0EAC                      		include "subs/vdp.asm"
0EAC                      ; ====================================================================
0EAC                      ; -------------------------------------------------
0EAC                      ; VDP
0EAC                      ; -------------------------------------------------
0EAC                      
0EAC =000000C9            bit_HscrlBar	equ	5
0EAC                      
0EAC                      ; Resolutions:
0EAC                      ; MS: 256x192
0EAC                      ; GG: 160x144 (center)
0EAC                      
0EAC                      ; GG SPRITES AT TOP SCREEN:
0EAC                      ; Y 17h X 30h
0EAC                      
0EAC =0000016C            Vcom            equ     0BFh    ; ADDRESS SETUP FOR VDP REGISTERS
0EAC =000001BB            Vdata           equ     0BEh    ; WRITE OR READ DATA ADDRESS FOR VDP REGISTERS
0EAC =000001F5            Writemask       equ     040h    ; SETS VRAM TO WRITE MODE
0EAC =0000023E            Vcolor          equ     0C0h    ; VALUE OF 2nd BYTE FOR COLOR VRAM WRITE
0EAC =0000028C            Vreg            equ     080h    ; STARTING LOCATION OF VDP REGISTERS (0 - 10)
0EAC =000002D6            sprites         equ     2000h   ; START ADDRESS OF SPRITE GENERATOR TABLE
0EAC =00000321            spritevert      equ     3F00h   ; START ADDRESS OF SPRITE ATTRIBUTE TABLE,
0EAC                      				; VERTICAL POSITION
0EAC =00000384            spritehori      equ     3F80h   ; START ADDRESS OF SPRITE ATTRIBUTE TABLE,
0EAC                      				; HORIZONTAL POSITION
0EAC =000003E9            patterns        equ     0000h   ; START ADDRESS OF PATTERN GENERATOR TABLE
0EAC                      
0EAC                      ; START ADDRESS OF PATTERN NAME TABLE, | topleft    hl = 38CCh
0EAC                      ; OR SCROLL SCREEN
0EAC                      
0EAC =00000453            screen		equ     3800h
0EAC =00000468            screen_gg	equ	38CCh	
0EAC                      
0EAC =00000484            celllength      equ     32
0EAC =0000049F            numcolors       equ     64
0EAC =000004BC            screenlength    equ     1440
0EAC                      
0EAC                      ; -------------------------------------------------
0EAC                      
0EAC                      VDPWrite:
0EAC                      ;****************************************************
0EAC                      ; Inserts a quantity of a number in VRAM
0EAC                      ;        e: holds the number to be written
0EAC                      ;       bc: holds the quantity to be written
0EAC                      ;       hl: holds the VRAM destination to start at
0EAC                      ;****************************************************
0EAC                      
0EAC                      	; set up an initial address in VRAM to write to
0EAC                      
0EAC 7D                   	ld      a,l            ;1st 8 bits
0EAD D3 BF                	out     (Vcom),a
0EAF 7C                   	ld      a,h            ; 2nd 8 bits
0EB0 F6 40                	or      Writemask      ; set write mode
0EB2 D3 BF                	out     (Vcom),a
0EB4                      
0EB4                      	; insert the number into VRAM a quantity of times
0EB4                      
0EB4                      VDPWriteLoop:
0EB4 7B                   	ld      a,e            ; load data to 3rd byte
0EB5 D3 BE                	out     (Vdata),a      ; write to VRAM
0EB7 0B                   	dec     bc             ; dec # of times to write by 1
0EB8 B1                   	or      c              ; or c with a
0EB9 20 F9                	jr      nz,VDPWriteLoop; continue loop if or != 0
0EBB                      
0EBB C9                   	ret
0EBC                      
0EBC                      
0EBC                      VDP_Init:
0EBC                      ;****************************************************
0EBC                      ; initialize the VDP registers and VRAM
0EBC                      ;****************************************************
0EBC                      
0EBC 21 00 00             	ld      hl,VDPregSet    ; address of register initialize table
0EBF 11 07 C9             	ld	de,ram_vdpregs
0EC2 06 0B                	ld      b,11            ; number of registers to initialize
0EC4 0E 80                	ld      c,80h           ; register = 0
0EC6                      
0EC6                      	; read register settings from hl, outputting them to the VDP registers
0EC6                      
0EC6                      VDPinitLoop:
0EC6 7E                   	ld	a,(hl)
0EC7 12                   	ld	(de),a
0EC8 23                   	inc 	hl
0EC9 13                   	inc 	de
0ECA 10 FA                	djnz    VDPinitLoop     ; dec b, jump if b != 0
0ECC                      
0ECC CD 00 00             	call	VDP_update
0ECF                      
0ECF                      	; set up VDP to clear VRAM
0ECF AF                   	xor     a
0ED0 D3 BF                	out     (Vcom),a        ; a is all zeros
0ED2 3E 40                	ld      a,Writemask     ; 0100 0000
0ED4 D3 BF                	out     (Vcom),a        ; setting write mode
0ED6 01 00 40             	ld      bc,4000h        ; how many times to write to VRAM
0ED9                      BlankLoop:
0ED9 AF                   	xor     a               ; a = 0
0EDA D3 BE                	out     (Vdata),a       ; data is zero
0EDC 0B                   	dec     bc              ; dec bc by 1
0EDD 78                   	ld      a,b
0EDE B1                   	or      c               ; or a with c
0EDF 20 F8                	jr      nz,BlankLoop    ; continue blanking until bc = 0
0EE1                      
0EE1 C9                   	ret
0EE2                      	
0EE2                      WriteVRAM:
0EE2                      ;****************************************************
0EE2                      ; Write to VRAM
0EE2                      ;       hl: address of source bytes to load in VRAM
0EE2                      ;       de: destination address in VRAM
0EE2                      ;       bc: number of bytes to write
0EE2                      ;****************************************************
0EE2                      
0EE2 E5                   	push    hl
0EE3 D5                   	push    de              ; save values
0EE4 C5                   	push    bc
0EE5                      
0EE5                      	; let a.b = number of bytes to write
0EE5 78                   	ld      a,b
0EE6 41                   	ld      b,c
0EE7                      
0EE7 F5                   	push    af              ; save copy of high byte value for # of bytes
0EE8                      				;  to write
0EE8                      				;  to write to VRAM
0EE8 7B                   	ld      a,e             ; dest address in vram to write to
0EE9 D3 BF                	out     (Vcom),a
0EEB 7A                   	ld      a,d             ; 2nd byte of dest address
0EEC F6 40                	or      Writemask       ; writemode
0EEE D3 BF                	out     (Vcom),a
0EF0                      
0EF0 0E BE                	ld      c,Vdata         ; data write address in vram, needed for OUTI
0EF2                      
0EF2 78                   	ld      a,b             ; low byte of # of times to write to vram
0EF3 A7                   	and     a
0EF4 20 00                	jr      nz,WriteLoop    ; jump if a not zero
0EF6                      
0EF6 F1                   	pop     af              ; high byte of # of times to write to vram
0EF7 3D                   	dec     a               ; dec high byte
0EF8                      
0EF8                      OuterLoop:
0EF8 F5                   	push    af              ; save value of high byte
0EF9                      
0EF9                      	; write values to VRAM until b, reaches zero
0EF9                      Writeloop:
0EF9 ED A3                	outi                    ; write (hl) to (c), dec b, inc hl
0EFB                      
0EFB 20 FC                	jr      nz,WriteLoop    ; jump if b != 0
0EFD                      
0EFD F1                   	pop     af              ; high byte of # of times to write to vram
0EFE                      
0EFE                      	; go to writeloop until a reaches zero
0EFE 3D                   	dec     a
0EFF F2 F8 0E             	jp      p,OuterLoop     ; jump until a = 0
0F02                      
0F02 C1                   	pop     bc
0F03 D1                   	pop     de              ; restore values
0F04 E1                   	pop     hl
0F05 C9                   	ret
0F06                      
0F06                      
0F06                      WriteSprite:
0F06                      ;****************************************************
0F06                      ; change the attribute table values for a sprite
0F06                      ;       b: the sprite number (0-63)
0F06                      ;       c: the character number in sprite table
0F06                      ;       d: the sprite's x location on screen
0F06                      ;       e: the sprite's y location on screen
0F06                      ;****************************************************
0F06                      
0F06 21 00 3F             	ld      hl,spritevert      ; start of sprite attrib. table, vert pos.
0F09 7D                   	ld      a,l                ; low part of sprite vert. address
0F0A 80                   	add     a,b                ; index into table
0F0B D3 BF                	out     (Vcom),a           ; 1st byte of Write address
0F0D 7C                   	ld      a,h                ; high part of sprite vert. address
0F0E F6 40                	or      Writemask          ; set write mode
0F10 D3 BF                	out     (Vcom),a           ; 2nd byte of Write address
0F12                      
0F12 7B                   	ld      a,e                ; new sprite y, vertical, position
0F13 D3 BE                	out     (Vdata),a          ; write new vertical position
0F15 F5                   	push    af
0F16 F1                   	pop     af                 ; delay for vram write
0F17                      
0F17 21 80 3F             	ld      hl,spritehori      ; start of sprite attrib. table, horiz pos
0F1A 7D                   	ld      a,l                ; low part of sprite horiz address
0F1B 80                   	add     a,b                ; skip over horizontal data
0F1C 80                   	add     a,b                ; skip over character data
0F1D D3 BF                	out     (Vcom),a           ; 1st byte of Write address
0F1F 7C                   	ld      a,h                ; high part of sprite horiz address
0F20 F6 40                	or      Writemask          ; writemode
0F22 D3 BF                	out     (Vcom),a           ; 2nd byte of Write address
0F24                      
0F24 7A                   	ld      a,d                ; new sprite x, horiz, position
0F25 D3 BE                	out     (Vdata),a          ; write new horizontal position
0F27 F5                   	push    af
0F28 F1                   	pop     af                 ; delay for Vram write
0F29 79                   	ld      a,c                ; character number
0F2A D3 BE                	out     (Vdata),a          ; write new char. number
0F2C F5                   	push    af
0F2D F1                   	pop     af                 ; delay for Vram write
0F2E                      
0F2E C9                   	ret
0F2F                      
0F2F                      
0F2F                      screenoff:
0F2F                      ;****************************************************
0F2F                      ; De-activates the screen from being drawn
0F2F                      ;****************************************************
0F2F                      
0F2F                      	;set BLANK bit of VDP register 1 to zero
0F2F                      
0F2F 3E A0                	ld      a,0A0h          ; 1010 0000
0F31 D3 BF                	out     (Vcom),a
0F33 3E 81                	ld      a,Vreg+1        ; register 1
0F35 D3 BF                	out     (Vcom),a        ; set blank bit to zero
0F37                      
0F37 C9                   	ret
0F38                      
0F38                      
0F38                      screenon:
0F38                      ;****************************************************
0F38                      ;Re-activates the screen
0F38                      ;****************************************************
0F38                      
0F38 3E E0                	ld      a,0E0h          ; 1110 0000
0F3A D3 BF                	out     (Vcom),a
0F3C 3E 81                	ld      a,Vreg+1        ; register 1
0F3E D3 BF                	out     (Vcom),a        ; set blank bit to 1, screen on
0F40                      
0F40 C9                   	ret
0F41                      	
0F41                      ; -------------------------------------------------
0F41                      ; VDP_LoadMaps
0F41                      ; 
0F41                      ; normal:
0F41                      ; bc - X size, Y size
0F41                      ; ix - mappings
0F41                      ; hl - vdp address
0F41                      ; 
0F41                      ; uses stack
0F41                      ; -------------------------------------------------
0F41                      
0F41                      VDP_LoadMaps:
0F41 62                   		ld	h,d
0F42 6B                   		ld	l,e
0F43 C5                   		push	bc
0F44                      @X_draw:
0F44 7D                   		ld	a,l		; VDP: address
0F45 D3 BF                		out	(Vcom),a
0F47 7C                   		ld	a,h
0F48 F6 40                		or	Writemask
0F4A D3 BF                		out	(Vcom),a
0F4C                      		
0F4C DD 7E 00             		ld	a,(ix)
0F4F D3 BE                		out	(Vdata),a	; VDP: read
0F51 DD 23                		inc 	ix
0F53 DD 7E 00             		ld	a,(ix)
0F56                      ; 		and 	111b
0F56 D3 BE                		out	(Vdata),a
0F58 DD 23                		inc 	ix
0F5A                      		
0F5A 23                   		inc	hl
0F5B 23                   		inc	hl
0F5C 10 E6                		djnz	@X_draw
0F5E                      
0F5E 62                   		ld	h,d		;Next line
0F5F 6B                   		ld	l,e
0F60 01 40 00             		ld	bc,40h		
0F63 09                   		add 	hl,bc
0F64 54                   		ld	d,h
0F65 5D                   		ld	e,l
0F66                      		
0F66 C1                   		pop	bc
0F67 0D                   		dec	c
0F68 79                   		ld	a,c
0F69 C2 41 0F              		jp	nz,VDP_LoadMaps
0F6C C9                   		ret
0F6D                      		
0F6D                      ; -------------------------------------------------
0F6D                      ; VDP_ClearLayer
0F6D                      ;
0F6D                      ; uses:
0F6D                      ; bc,hl
0F6D                      ; -------------------------------------------------
0F6D                      
0F6D                      VDP_ClearLayer:
0F6D 21 00 38             		ld	hl,screen
0F70                      	
0F70 0E 1C                		ld	c,1Ch
0F72                      @y_loop:
0F72 06 20                		ld	b,20h
0F74                      @x_loop:		
0F74 7D                    		ld	a,l
0F75 D3 BF                 		out	(Vcom),a
0F77 7C                    		ld	a,h
0F78 F6 40                 		or	Writemask
0F7A D3 BF                 		out	(Vcom),a
0F7C                       		
0F7C AF                    		xor	a
0F7D D3 BE                 		out	(Vdata),a
0F7F D3 BE                 		out	(Vdata),a
0F81                       		
0F81 23                    		inc	hl
0F82 23                    		inc	hl
0F83 10 EF                		djnz	@x_loop
0F85                      		
0F85 0D                   		dec	c
0F86 C2 72 0F             		jp	nz,@y_loop
0F89 C9                   		ret
0F8A                      		
0F8A                      ; -------------------------------------------------
0F8A                      ; VDP_LoadPal
0F8A                      ; 
0F8A                      ; normal:
0F8A                      ; b - Num of colors
0F8A                      ; c - Start from
0F8A                      ; 
0F8A                      ; uses:
0F8A                      ; bc,d,hl
0F8A                      ; 
0F8A                      ; uses stack
0F8A                      ; -------------------------------------------------
0F8A                      
0F8A                      VDP_LoadPal:
0F8A 79                   		ld	a,c
0F8B DD 21 2D CA          		ld	ix,ram_palbuffer
0F8F                      ; 		out     (Vcom),a        ; color ram address
0F8F                      ; 		ld      a,Vcolor        ; sets required C0h for a color write
0F8F                      ; 		out     (Vcom),a
0F8F                      
0F8F                      @color_loop:
0F8F                      		
0F8F 1E 00                		ld	e,0		; GG to SMS colors
0F91 7E                   		ld	a,(hl)		; read GGs GREEN+RED
0F92 CB 2F                		sra	a
0F94 CB 2F                		sra	a
0F96 E6 03                		and 	00000011b
0F98 5F                   		ld	e,a
0F99 7E                   		ld	a,(hl)
0F9A CB 2F                		sra	a
0F9C CB 2F                		sra	a
0F9E CB 2F                		sra	a
0FA0 CB 2F                		sra	a
0FA2 E6 0C                		and	00001100b
0FA4 B3                   		or	e
0FA5 5F                   		ld	e,a
0FA6 23                   		inc 	hl
0FA7 7E                    		ld	a,(hl)		; read GGs BLUE
0FA8 CB 27                 		sla	a
0FAA CB 27                 		sla	a
0FAC E6 30                 		and	00110000b
0FAE 57                    		ld	d,a
0FAF 7B                    		ld	a,e
0FB0 B2                    		or	d
0FB1 E6 3F                 		and	00111111b
0FB3                      		
0FB3 DD 77 00             		ld	(ix),a
0FB6 DD 23                		inc	ix
0FB8 23                   		inc 	hl
0FB9                      		
0FB9 F5                    		push    af
0FBA F1                    		pop     af		; delay for writing to ram
0FBB 10 D2                		djnz	@color_loop
0FBD C9                   		ret
0FBE                      	
0FBE                      ; ; -------------------------------------------------
0FBE                      ; ; VDP_GrabPal
0FBE                      ; ; 
0FBE                      ; ; Copy the palette from RAM to VDP
0FBE                      ; ; -------------------------------------------------
0FBE                      ; 
0FBE                      ; VDP_GrabPal:
0FBE                      
0FBE                      ; -------------------------------------------------
0FBE                      ; VDP_Update
0FBE                      ; -------------------------------------------------
0FBE                      
0FBE                      VDP_update:
0FBE 21 07 C9             		ld	hl,ram_vdpregs
0FC1 06 07                		ld	b,7		; 80h-87h
0FC3 0E 80                		ld	c,80h
0FC5                      @nextreg:
0FC5 7E                   		ld      a,(hl)          ; initial  register configs
0FC6 D3 BF                		out     (Vcom),a        ; data out to 1st byte
0FC8 23                   		inc     hl              ; next reg in table
0FC9 79                   		ld      a,c             ; register number
0FCA D3 BF                		out     (Vcom),a        ; write data to register
0FCC 0C                   		inc     c               ; next register
0FCD 10 F6                		djnz	@nextreg
0FCF                      		
0FCF 3A 11 C9             		ld      a,(ram_vdpregs+00Ah) ;08Ah
0FD2 D3 BF                		out     (Vcom),a
0FD4 3E 8A                		ld      a,08Ah
0FD6 D3 BF                		out     (Vcom),a
0FD8 C9                   		ret
0FD9                      		
0FD9                      ; -------------------------------------------------
0FD9                      ; Data
0FD9                      ; -------------------------------------------------
0FD9                      
0FD9                      VDPregSet:
0FD9 16                   		db      00010110b       ;reg 0 (???H???? HBLANK)
0FDA A1                   		db      10100001b       ;1 SPRITES 8x16
0FDB FF                   		db      11111111b       ;2
0FDC FF                   		db      11111111b       ;3
0FDD FF                   		db      11111111b       ;4
0FDE FF                   		db      11111111b       ;5
0FDF 04                   		db      00000100b       ;bit 2: Sprite characters $0x00 ($00xx,$01xx)
0FE0 00                   		db      00000000b       ;7
0FE1 00                   		db      00000000b       ;8 X
0FE2 00                   		db      00000000b       ;9 Y
0FE3 00                   		db      00000000b       ;10 HInt counter
0FE4                      		
0FE4                      ; --------------------------------------------
0FE4                      ; VSync
0FE4                      ; --------------------------------------------
0FE4                      
0FE4                      vsync:
0FE4 3A 06 C9              		ld	a,(ram_vintwait)
0FE7 CB C7                 		set	bitFrameWait,a
0FE9 32 06 C9              		ld	(ram_vintwait),a
0FEC                      @loop:
0FEC 3A 06 C9               		ld	a,(ram_vintwait)
0FEF CB 47                 		bit	bitFrameWait,a
0FF1 C2 EC 0F              		jp	nz,@loop
0FF4 C9                   		ret
0FF5                      		
0FF5                      		
0FF5                      		
0FF5                      		include "subs/misc.asm"
0FF5                      ;****************************************************
0FF5                      ; initialize the system
0FF5                      ;****************************************************
0FF5                      
0FF5                      initsys:
0FF5                      
0FF5 AF                   		xor     a         	; set a to zero
0FF6 32 FC FF             		ld      (0FFFCh),a	; set bank control register to all zeros
0FF9 32 FD FF             		ld      (0FFFDh),a	; set bank reg #0 to all zeros
0FFC 3C                   		inc	a
0FFD 32 FE FF             		ld      (0FFFEh),a	; set bank reg #1 to 0001
1000 3C                   		inc	a
1001 32 FF FF             		ld      (0FFFFh),a	; set bank reg #2 to 0010
1004                      		
1004 21 00 C0             		ld      hl,0C000h  	; zero system RAM
1007 11 01 C0             		ld      de,0C001h  	; C000h to DFF0h
100A 01 F0 1F             		ld      bc,01FF0h  	; number of times to write
100D 36 00                		ld      (hl),0
100F ED B0                		ldir               	; load (de) with (hl). inc de, inc hl, dec bc
1011                      					; continue until bc = 0
1011                      					
1011 C9                   		ret
1012                      
1012                      ;****************************************************
1012                      ; clear the screen data area
1012                      ;****************************************************
1012                      
1012                      clearscreen:
1012 21 00 38             		ld      hl,screen  	; start at VRAM address 3800h
1015 1E 00                		ld      e,0        	; number to place in VRAM
1017 01 00 06             		ld      bc,768*2   	; number of times to write to VRAM
101A C3 AC 0E             		jp      VDPWrite
101D                      
101D                      ; --------------------------------------------
101D                      ; HexToBCD
101D                      ; --------------------------------------------
101D                      
101D                      HexToBCD:
101D 4F                   		ld	c,a		; Original (hex) number
101E 06 08                		ld	b,8		; How many bits
1020 AF                   		xor	a		; Output (BCD) number, starts at 0
1021 CB 21                @rept:		sla	c		; shift c into carry
1023 8F                   		adc	a,a
1024 27                   		daa			; Decimal adjust a, so shift = BCD x2 plus carry
1025 10 FA                		djnz	@rept		; Repeat for 8 bits
1027 C9                   		ret
1028                      		
1028                      ; --------------------------------------------
1028                      ; Mode cleanup
1028                      ; --------------------------------------------
1028                      		
1028                      Mode_Cleanup:
1028 01 00 00             		ld	bc,0
102B ED 43 2C C9          		ld	(ram_hscroll),bc
102F ED 43 2A C9          		ld	(ram_vscroll),bc
1033 C9                   		ret
1034                      
1034                      ; ====================================================================
1034                      ; ---------------------------------------------
1034                      ; Sprites system
1034                      ; ---------------------------------------------
1034                      
1034                      ; TODO: talvez moverlo
1034                      
1034                      		rsreset
1034 =00000898            sprite_free	rw	1
1034 =000008A9            sprite_used	rb	1
1034                      
1034                      ; ---------------------------------------------
1034                      ; Sprites_Reset
1034                      ; ---------------------------------------------
1034                      
1034                      Sprites_Reset:
1034                      ; 		lea	(RAM_SprControl),a6
1034                      ; 		movea.l	sprite_free(a6),a5
1034                      ; 		cmpa	#((RAM_SprBuffer)&$FFFF),a5
1034                      ; 		blt.s	@Full
1034                      ; @NextEntry:
1034                      ; ; 		tst.l	(a5)
1034                      ; ; 		beq.s	@Full
1034                      ; ; 		tst.l	4(a5)
1034                      ; ; 		beq.s	@Full
1034                      ;  		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
1034                      ;  		bgt.s	@Full
1034                      ;  		clr.l	(a5)+
1034                      ;   		clr.l	(a5)+
1034                      ;   		cmpa	#((RAM_SprBuffer+$280)&$FFFF),a5
1034                      ;   		blt.s	@NextEntry
1034                      ; @Full:
1034 01 00 C8             		ld	bc,RAM_SprBuffer
1037 ED 43 AD CA          		ld	(RAM_SprControl),bc
103B                      ; 		move.w	#1,sprite_link(a6)
103B                      ; @Return:
103B C9                   		ret
103C                      	
103C                      ; ---------------------------------------------
103C                      ; Sprites_CopyTiles
103C                      ; 
103C                      ; since i dont have DMA here
103C                      ; lets use RAM-to-VDP
103C                      ; ---------------------------------------------
103C                      
103C                      Sprites_CopyTiles:
103C 21 BD CA             		ld	hl,ram_tilestovdp
103F                      		
103F AF                   		xor	a
1040 D3 BF                  		out 	(Vcom),a
1042 3E 20                  		ld	a,20h
1044 F6 40                  		or	WriteMask
1046 D3 BF                    		out 	(Vcom),a
1048 0E BE                		ld	c,Vdata
104A                      		
104A                      ; 		ld	a,(ram_vdpregs+1)
104A                      ; 		res 	6,a
104A                      ; 		out 	(Vcom),a
104A                      ; 		ld	a,81h
104A                      ; 		out 	(Vcom),a
104A                      ; 		
104A 06 00                		ld	b,0
104C ED B3                		otir
104E 06 00                		ld	b,0
1050 ED B3                		otir
1052 06 00                		ld	b,0
1054 ED B3                		otir
1056 06 00                		ld	b,0
1058 ED B3                		otir
105A                      		
105A                      ; 		ld	a,(ram_vdpregs+1)
105A                      ; 		out 	(Vcom),a
105A                      ; 		ld	a,81h
105A                      ; 		out 	(Vcom),a
105A C9                   		ret 
105B                      		
105B                      		
105B                      		include "subs/fade.asm"
105B                      ; ====================================================================
105B                      ; ---------------------------------------
105B                      ; Equs
105B                      ; ---------------------------------------
105B                      
105B =000000B7            ID_FadeOut		equ	01h
105B =000000CA            ID_FadeIn		equ	02h
105B =000000DE            ID_ToWhite		equ	03h
105B =000000F4            ID_FadeWhite		equ	04h
105B                      
105B                      ; ---------------------------------------
105B                      
105B =00000134            PalFadeFlags		equ	1
105B =00000148            PalFadeStart		equ	2
105B =0000015A            PalFadeEnd		equ	3
105B =0000016C            PalFadeTmr		equ	4
105B =00000181            PalFadeSource		equ	8
105B                      
105B                      ; -------------------------------------------------
105B                      ; FadeIn/FadeOut
105B                      ; -------------------------------------------------
105B                      
105B                      PalFade:
105B DD 21 11 C9          		ld	ix,ram_runfadecol
105F DD 7E 00             		ld	a,(ix)
1062 CB 7F                		bit	7,a
1064 CA 00 00             		jp	z,@run_tasks
1067 DD 7E 05               		ld	a,(ix+(PalFadeTmr+1))
106A 3D                     		dec	a
106B DD 77 05               		ld	(ix+(PalFadeTmr+1)),a
106E F2 00 00              		jp	p,@Return
1071 DD 7E 04             		ld	a,(ix+PalFadeTmr)
1074 DD 77 05             		ld	(ix+(PalFadeTmr+1)),a
1077 AF                   		xor	a
1078 DD 77 00             		ld	(ix),a
107B                      @Return:
107B C9                   		ret
107C                      		
107C                      @run_tasks:
107C CB 27                 		sla	a
107E 01 00 00              		ld	bc,0
1081 4F                    		ld	c,a
1082 21 00 00             		ld	hl,@task_list
1085 09                    		add 	hl,bc
1086 E9                   		jp	(hl)
1087                      
1087                      ; -------------------------------------------------
1087                      
1087                      @task_list:
1087 18 F2                		jr	@Return
1089 18 00                		jr	Pal_FadeOut
108B 18 00                		jr	Pal_FadeIn
108D 18 EC                		jr	@Return
108F 18 EA                		jr	@Return
1091                      	
1091                      ; -------------------------------------------------
1091                      ; FADEIN
1091                      ; -------------------------------------------------
1091                      
1091                      Pal_FadeIn:	
1091 DD 7E 05             		ld	a,(ix+(PalFadeTmr+1))
1094 3D                   		dec	a
1095 DD 77 05             		ld	(ix+(PalFadeTmr+1)),a
1098 F2 00 00             		jp	p,@wait
109B DD 7E 04             		ld	a,(ix+(PalFadeTmr))
109E DD 77 05             		ld	(ix+(PalFadeTmr+1)),a
10A1                      		
10A1 FD 21 6D CA           		ld	iy,ram_palfadebuff
10A5 21 2D CA             		ld	hl,ram_palbuffer
10A8                      		
10A8 11 00 00             		ld	de,0
10AB 01 00 00             		ld	bc,0
10AE DD 46 03             		ld	b,(ix+(PalFadeEnd))
10B1 58                   		ld	e,b
10B2 04                   		inc 	b
10B3                      
10B3                      ; --------------------
10B3                      ; MERCURY
10B3                      ; --------------------
10B3                      
10B3                      @next_entry:
10B3 FD 7E 00             		ld	a,(iy)
10B6 E6 03                		and	00000011b
10B8 4F                   		ld	c,a
10B9 7E                   		ld	a,(hl)		;RED
10BA E6 03                		and	00000011b
10BC B9                   		cp	c
10BD 7E                   		ld	a,(hl)
10BE D2 00 00             		jp	nc,@cont_red
10C1 3C                   		inc	a
10C2 CB C2                		set 	0,d
10C4                      @cont_red:
10C4 77                     		ld	(hl),a
10C5                        		
10C5 FD 7E 00             		ld	a,(iy)
10C8 E6 0C                		and	00001100b
10CA 4F                   		ld	c,a
10CB 7E                   		ld	a,(hl)		;GREEN
10CC E6 0C                		and	00001100b
10CE B9                   		cp	c
10CF 7E                   		ld	a,(hl)
10D0 D2 00 00             		jp	nc,@cont_green
10D3 C6 04                		add 	a,4
10D5 CB CA                		set 	1,d
10D7                      @cont_green:
10D7 77                     		ld	(hl),a
10D8                        		
10D8 FD 7E 00             		ld	a,(iy)
10DB E6 30                		and	00110000b
10DD 4F                   		ld	c,a
10DE 7E                   		ld	a,(hl)		;BLUE
10DF E6 30                		and	00110000b
10E1 B9                   		cp	c
10E2 7E                   		ld	a,(hl)
10E3 D2 00 00             		jp	nc,@cont_blue
10E6 C6 10                		add 	a,10h
10E8 CB D2                		set 	2,d
10EA                      @cont_blue:
10EA 77                     		ld	(hl),a
10EB                        		
10EB 7A                     		ld	a,d
10EC FE 07                  		cp	00000111b
10EE D2 00 00               		jp	nc,@redgreend
10F1 1D                    		dec	e
10F2                      @redgreend:
10F2 23                   		inc	hl
10F3 FD 23                		inc	iy
10F5 10 BC                 		djnz	@next_entry
10F7                       		
10F7                      ; --------------------
10F7                      
10F7                       		
10F7 7B                   		ld	a,e
10F8 F2 00 00             		jp	p,@wait
10FB                      		
10FB DD 7E 00             		ld 	a,(ix)
10FE CB FF                		set 	7,a
1100 DD 77 00             		ld	(ix),a
1103                      @wait:
1103 C9                   		ret
1104                      
1104                      ; -------------------------------------------------
1104                      ; FADEOUT
1104                      ; -------------------------------------------------
1104                      
1104                      Pal_FadeOut:	
1104 DD 7E 05              		ld	a,(ix+(PalFadeTmr+1))
1107 3D                    		dec	a
1108 DD 77 05              		ld	(ix+(PalFadeTmr+1)),a
110B F2 00 00              		jp	p,@wait
110E DD 7E 04              		ld	a,(ix+(PalFadeTmr))
1111 DD 77 05              		ld	(ix+(PalFadeTmr+1)),a
1114                       		
1114 FD 21 6D CA            		ld	iy,ram_palfadebuff
1118 21 2D CA              		ld	hl,ram_palbuffer
111B                       		
111B 11 00 00              		ld	de,0
111E 01 00 00              		ld	bc,0
1121 DD 46 03              		ld	b,(ix+(PalFadeEnd))
1124 58                    		ld	e,b
1125 04                    		inc 	b
1126                       		
1126                      ; --------------------
1126                      ; MERCURY
1126                      ; --------------------
1126                      
1126                      @next_entry:
1126 7E                       		ld	a,(hl)
1127 57                       		ld	d,a
1128 E6 03                    		and 	00000011b
112A FE 00                   		cp	0
112C CA 00 00                		jp	z,@red_done
112F 3D                       		dec	a
1130 E6 03                    		and 	00000011b
1132 57                       		ld	d,a
1133                      @red_done:
1133 7E                   		ld	a,(hl)
1134 E6 3C                		and	00111100b
1136 B2                   		or	d
1137 77                    		ld	(hl),a
1138                       		
1138 7E                        		ld	a,(hl)
1139 57                        		ld	d,a
113A E6 0C                     		and	00001100b
113C FE 00                     		cp	0
113E CA 00 00                  		jp	z,@green_done
1141 D6 04                      		sub	a,4
1143 57                        		ld	d,a
1144 7E                         		ld	a,(hl)
1145 E6 33                      		and	00110011b
1147 4F                         		ld	c,a
1148 7A                         		ld	a,d
1149 B1                         		or	c
114A                      @green_done:
114A 7E                   		ld	a,(hl)
114B E6 33                		and	00110011b
114D B2                   		or	d
114E 77                    		ld	(hl),a
114F                       	
114F 7E                        		ld	a,(hl)
1150 57                        		ld	d,a
1151 E6 30                     		and	00110000b
1153 FE 00                     		cp	0
1155 CA 00 00                  		jp	z,@blue_done
1158 D6 10                      		sub	a,10h
115A 57                        		ld	d,a
115B 7E                         		ld	a,(hl)
115C E6 0F                      		and	00001111b
115E 4F                         		ld	c,a
115F 7A                         		ld	a,d
1160 B1                         		or	c
1161                      @blue_done:
1161 7E                   		ld	a,(hl)
1162 E6 0F                      		and	00001111b
1164 B2                   		or	d
1165 77                    		ld	(hl),a
1166                       		
1166 7E                    		ld	a,(hl)
1167 FE 00                 		cp	0
1169 C2 00 00              		jp	nz,@not_zero
116C 1D                      		dec	e
116D                      @not_zero:
116D 23                   		inc	hl
116E 10 B6                 		djnz	@next_entry
1170                       		
1170                      ; --------------------
1170                      
1170                       		
1170 7B                    		ld	a,e
1171 F2 00 00              		jp	p,@wait
1174                      		
1174 DD 7E 00             		ld 	a,(ix)
1177 CB FF                		set 	7,a
1179 DD 77 00               		ld	(ix),a
117C                      @wait:
117C C9                   		ret
117D                      		
117D                      ; -------------------------------------------------
117D                      ; PalFade_Set
117D                      ;
117D                      ; b -  Command
117D                      ; de - NumOfColors|Speed
117D                      ; -------------------------------------------------
117D                      
117D                      PalFade_Set:
117D DD 21 11 C9          		ld	ix,ram_runfadecol
1181 48                   		ld	c,b
1182                      		
1182 41                   		ld	b,c
1183 7A                   		ld	a,d
1184 DD 77 03             		ld	(ix+(PalFadeEnd)),a
1187 7B                   		ld	a,e
1188 3C                   		inc	a	;slow down on MS
1189 3C                   		inc	a
118A DD 77 04             		ld	(ix+(PalFadeTmr)),a
118D 78                   		ld	a,b
118E DD 70 00             		ld	(ix),b
1191                      		
1191 48                   		ld	c,b
1192 C9                   		ret
1193                      		
1193                      ; -------------------------------------------------
1193                      ; PalFade_Load
1193                      ; 
1193                      ; normal:
1193                      ; b - Num of colors
1193                      ; c - Start from
1193                      ; 
1193                      ; uses:
1193                      ; bc,d,hl
1193                      ; 
1193                      ; uses stack
1193                      ; -------------------------------------------------
1193                      
1193                      PalFade_Load:
1193 D5                   		push	de
1194 11 00 00             		ld	de,0
1197 58                    		ld	e,b
1198                      ;  		ld	ix,ram_palfadebuff
1198 DD 19                 		add 	ix,de
119A                      		
119A                      ; 		out     (Vcom),a        ; color ram address
119A                      ; 		ld      a,Vcolor        ; sets required C0h for a color write
119A                      ; 		out     (Vcom),a
119A                      
119A                      @color_loop:
119A                      		
119A 1E 00                		ld	e,0		; GG to SMS colors
119C 7E                   		ld	a,(hl)		; read GGs GREEN+RED
119D CB 2F                		sra	a
119F CB 2F                		sra	a
11A1 E6 03                		and 	00000011b
11A3 5F                   		ld	e,a
11A4 7E                   		ld	a,(hl)
11A5 CB 2F                		sra	a
11A7 CB 2F                		sra	a
11A9 CB 2F                		sra	a
11AB CB 2F                		sra	a
11AD E6 0C                		and	00001100b
11AF B3                   		or	e
11B0 5F                   		ld	e,a
11B1 23                   		inc 	hl
11B2 7E                    		ld	a,(hl)		; read GGs BLUE
11B3 CB 27                 		sla	a
11B5 CB 27                 		sla	a
11B7 E6 30                 		and	00110000b
11B9 57                    		ld	d,a
11BA 7B                    		ld	a,e
11BB B2                    		or	d
11BC E6 3F                 		and	00111111b
11BE                      		
11BE DD 77 00             		ld	(ix),a
11C1 DD 23                		inc	ix
11C3 23                   		inc 	hl
11C4                      		
11C4 0D                   		dec	c
11C5 C2 9A 11             		jp	nz,@color_loop
11C8 D1                   		pop	de
11C9 C9                   		ret
11CA                      		
11CA                      ; -------------------------------------------------
11CA                      
11CA                      PalFade_Wait:
11CA C9                    ret
11CB CD E4 0F                		call	VSync
11CE                         		
11CE 3A 11 C9                  		ld	a,(ram_runfadecol)
11D1 FE 00                     		cp	0
11D3 C2 CA 11                  		jp	nz,PalFade_Wait
11D6 C9                   		ret
11D7                      		
11D7                      		
11D7                      		include "subs/pads.asm"
11D7                      ; ====================================================================
11D7                      ; -------------------------------------------------
11D7                      ; Joypads/GG controller
11D7                      ; -------------------------------------------------
11D7                      
11D7                      ; -------------------------------------------------
11D7                      ; Variables
11D7                      ; -------------------------------------------------
11D7                      
11D7 =00000184            pad             equ     0DCh    ; I/O PORT FOR JOYPAD AND FIRE BUTTONS
11D7 =000001A8            padright        equ     08h     ; \
11D7 =000001F3            padleft         equ     04h     ;  \___ bit values in joypad port register
11D7 =00000218            padup           equ     01h     ;  /
11D7 =0000023C            paddown         equ     02h     ; /
11D7                      
11D7 =00000262            bitJoyStart	equ	7	; DONT CHANGE THIS
11D7 =00000271            bitJoy1		equ	4
11D7 =00000280            bitJoy2		equ	5
11D7 =00000292            bitJoyRight	equ	3
11D7 =000002A3            bitJoyLeft	equ	2
11D7 =000002B4            bitJoyDown	equ	1
11D7 =000002C3            bitJoyUp	equ	0
11D7                      
11D7 =000002D3            on_hold		equ	0
11D7 =000002E2            on_press	equ	1
11D7                      
11D7                      ; -------------------------------------------------
11D7                      ; Read
11D7                      ; -------------------------------------------------
11D7                      
11D7                      pads_read:
11D7 DD 21 21 C9          		ld	ix,ram_joypads
11DB DB DC                		in      a,(pad)
11DD EE FF                		xor     0FFh
11DF 47                   		ld	b,a
11E0 DD 7E 00              		ld	a,(ix+on_hold)
11E3 A8                    		xor	b
11E4 DD 70 00             		ld	(ix+on_hold),b
11E7 A0                   		and	b	
11E8 DD 77 01             		ld	(ix+on_press),a
11EB C9                   		ret
11EC                      		
11EC                      		
11EC                      		
11EC                      ; ====================================================================
11EC                      ; -------------------------------------------------
11EC                      ; Init
11EC                      ; -------------------------------------------------
11EC                      
11EC                      Init:
11EC CD F5 0F             		call    initsys			; init I/O ports and bank registers
11EF CD BC 0E             		call    VDP_Init		; init VDP and VRAM
11F2 CD 00 00             		call	SMEG_Init
11F5                      		
11F5 3E C3                		ld	a,0C3h			; JMP @here
11F7 32 00 C9             		ld	(ram_vintjmpto),a
11FA 32 03 C9             		ld	(ram_hintjmpto),a
11FD 01 68 00             		ld	bc,VBlank_Default
1200 ED 43 01 C9          		ld	(ram_vintaddr),bc
1204 01 73 00             		ld	bc,HBlank_Default
1207 ED 43 04 C9          		ld	(ram_hintaddr),bc
120B FB                   		ei
120C                      		
120C                      @MainLoop:
120C 3A 29 C9             		ld	a,(ram_gamemode)
120F CB 27                		sla	a
1211 CB 27                		sla	a
1213 CB 27                		sla	a
1215 01 00 00             		ld	bc,0
1218 4F                   		ld	c,a
1219 21 00 00             		ld	hl,@modes_list
121C 09                    		add 	hl,bc
121D E9                   		jp	(hl)
121E                      	
121E                      ; -------------------------------------------------
121E                      
121E                      @modes_list:
121E CD 00 00             		call	segalogo
1221 C3 0C 12             		jp	@MainLoop
1224 00                   		nop
1225 00                   		nop
1226                      ; 		call	Level
1226                      ; 		jp	@MainLoop
1226                      ; 		nop
1226                      ; 		nop
1226                      		
1226                      ; ====================================================================
1226                      ; -------------------------------------------------
1226                      ; Modes
1226                      ; -------------------------------------------------
1226                      
1226                      		include "modes/title/code.asm"
1226                      ; ====================================================================
1226                      ; -------------------------------------------------
1226                      ; Title Screen
1226                      ; -------------------------------------------------
1226                      
1226                      segalogo:
1226 06 01                 		ld	b,ID_FadeOut
1228 11 00 1F              		ld	de,1F00h
122B CD 7D 11              		call	PalFade_Set
122E CD CA 11              		call	PalFade_Wait
1231                       		
1231 F3                   		di
1232                      
1232 3E 00 32 FE FF       		bankdata BANK_Cat
1237 21 00 00             		ld	hl,art_cat			;  hl = 0208   where is data at
123A 11 00 20             		ld	de,100h*20h			;  de = 0      where in VRAM to put data
123D 01 00 00             		ld	bc,art_cat_end			;  bc = 0380   how many times to write to vram
1240 CD E2 0E             		call	WriteVRAM
1243                      		
1243 3E 00 32 FE FF       		bankdata BANK_Title
1248 CD 12 10             		call	clearscreen
124B CD 28 10             		call	Mode_Cleanup
124E 3A 07 C9               		ld	a,(ram_vdpregs)
1251 CB EF                		set	bit_HscrlBar,a
1253                      ; 		set 	4,a
1253 32 07 C9             		ld	(ram_vdpregs),a
1256 3E 80                		ld	a,80h
1258 32 11 C9             		ld	(ram_vdpregs+00Ah),a
125B CD BE 0F             		call	Vdp_Update
125E                      		
125E AF                    		xor	a
125F 32 2C C9              		ld	(ram_hscroll),a
1262                      
1262 21 00 00             		ld	hl,art_title			;  hl = 0208   where is data at
1265 11 00 00             		ld	de,0				;  de = 0      where in VRAM to put data
1268 01 00 00             		ld	bc,art_title_end		;  bc = 0380   how many times to write to vram
126B CD E2 0E             		call	WriteVRAM
126E DD 21 00 00          		ld	ix,map_title
1272 01 12 14             		ld	bc,1412h
1275 11 00 38              		ld	de,screen
1278 CD 41 0F              		call	VDP_LoadMaps
127B                       		
127B 01 68 00             		ld	bc,VBlank_Default
127E ED 43 01 C9          		ld	(ram_vintaddr),bc
1282 01 73 00             		ld	bc,HBlank_Default
1285 ED 43 04 C9          		ld	(ram_hintaddr),bc
1289                      		
1289 21 00 00             		ld	hl,pal_title
128C DD 21 2D CA           		ld	ix,ram_palbuffer
1290 01 20 00             		ld	bc,0020h
1293 CD 93 11              		call	PalFade_Load
1296                       		
1296 AF                    		xor	a
1297 32 3D CA              		ld	(ram_palbuffer+10h),a
129A                      
129A AF                    		xor	a
129B D3 BF                 		out	(Vcom),a
129D F6 C0                 		or	Vcolor
129F D3 BF                 		out	(Vcom),a
12A1 3E 20                 		ld	a,32
12A3 47                    		ld	b,a
12A4 21 2D CA             		ld	hl,ram_palbuffer
12A7                      @next:
12A7 7E                   		ld	a,(hl)
12A8 D3 BE                		out 	(Vdata),a
12AA 23                   		inc 	hl
12AB 10 FA                		djnz	@next
12AD                      		
12AD AF                   		xor	a
12AE D3 BF                  		out	(Vcom),a
12B0 3E 7F                  		ld	a,3Fh|40h
12B2 D3 BF                  		out	(Vcom),a
12B4                        		
12B4 0E 4C                     		ld	c,4Ch
12B6 79                        		ld	a,c
12B7 D3 BE                   		out     (Vdata),a
12B9 D3 BE                   		out     (Vdata),a		
12BB D3 BE                   		out     (Vdata),a
12BD D3 BE                   		out     (Vdata),a
12BF D3 BE                   		out     (Vdata),a
12C1 C6 10                		add	10h
12C3 D3 BE                   		out     (Vdata),a
12C5 D3 BE                   		out     (Vdata),a		
12C7 D3 BE                   		out     (Vdata),a
12C9 D3 BE                   		out     (Vdata),a
12CB D3 BE                   		out     (Vdata),a
12CD C6 10                		add	10h
12CF D3 BE                   		out     (Vdata),a
12D1 D3 BE                   		out     (Vdata),a		
12D3 D3 BE                   		out     (Vdata),a
12D5 D3 BE                   		out     (Vdata),a
12D7 D3 BE                   		out     (Vdata),a
12D9                         		
12D9 01 4C 50               		ld	bc,504Ch
12DC 79                     		ld	a,c
12DD D3 BE                    		out     (Vdata),a
12DF C6 10                  		add	10h
12E1 D3 BE                    		out     (Vdata),a
12E3 C6 10                  		add	10h
12E5 D3 BE                    		out     (Vdata),a	
12E7                          		
12E7 79                     		ld	a,c
12E8 D3 BE                    		out     (Vdata),a
12EA C6 10                  		add	10h
12EC D3 BE                    		out     (Vdata),a
12EE C6 10                  		add	10h
12F0 D3 BE                    		out     (Vdata),a
12F2                          		
12F2 79                     		ld	a,c
12F3 D3 BE                    		out     (Vdata),a
12F5 C6 10                  		add	10h
12F7 D3 BE                    		out     (Vdata),a 
12F9 C6 10                  		add	10h
12FB D3 BE                    		out     (Vdata),a
12FD                          		
12FD                      ; HOR AND CHR
12FD                      ; 
12FD 21 00 C0                  		ld	hl,ram_modebuffer
1300 01 01 5C                  		ld	bc,5C01h
1303                           		rept 3
1303                           		rept 5
1303                           		ld	a,b
1303                         		ld	(hl),a
1303                         		inc 	hl
1303                           		add 	10h
1303                           		ld	b,a
1303                           		ld	a,c
1303                         		ld	(hl),a
1303                         		inc 	hl	
1303                         		inc	c
1303                         		endr
1303                         		ld	b,5Ch
1303 78 77 23 C6 10 47 +     		endr
139F                      
139F 06 30                  		ld	b,30h
13A1 0E 5B                  		ld	c,5Bh
13A3                         		rept 3
13A3                        		ld	a,b
13A3                         		ld	(hl),a
13A3                         		inc 	hl
13A3                         		ld	a,c
13A3                         		inc 	c
13A3                         		ld	(hl),a
13A3                         		inc 	hl
13A3                        		ld	a,b
13A3                         		ld	(hl),a
13A3                         		inc 	hl
13A3                         		ld	a,c
13A3                         		inc 	c
13A3                         		ld	(hl),a
13A3                         		inc 	hl
13A3                        		ld	a,b
13A3                         		ld	(hl),a
13A3                         		inc 	hl
13A3                         		ld	a,c
13A3                         		dec	c
13A3                         		dec	c
13A3                         		ld	(hl),a
13A3                         		inc 	hl
13A3                         		ld	a,b
13A3                         		add	10h
13A3                         		ld	b,a
13A3 78 77 23 79 0C 77 +     		endr
13F1                        		
13F1 3E 80                  		ld	a,80h
13F3 D3 BF                  		out	(Vcom),a
13F5 3E 7F                  		ld	a,3Fh|40h
13F7 D3 BF                  		out	(Vcom),a
13F9                        		
13F9 21 00 C0                  		ld	hl,ram_modebuffer
13FC 06 30                     		ld	b,30h
13FE                      @again:
13FE 7E                      		ld	a,(hl)
13FF 23                      		inc 	hl
1400 D3 BE                   		out     (Vdata),a
1402 10 FA                   		djnz	@again
1404                        		
1404 3E 81                   		ld      a,81h			;write $01 to tone channel 0
1406 D3 7F                   		out     (7Fh),a
1408 AF                      		xor	a
1409 D3 7F                   		out     (7Fh),a
140B 3E A1                   		ld      a,0A1h			;write $01 to tone channel 1
140D D3 7F                   		out     (7Fh),a
140F AF                      		xor	a
1410 D3 7F                   		out     (7Fh),a
1412 3E C1                  		ld      a,0C1h			;write $01 to tone channel 2
1414 D3 7F                  		out     (7Fh),a
1416 AF                     		xor	a
1417 D3 7F                  		out     (7Fh),a
1419                        		
1419 01 F0 00               		ld	bc,0F0h
141C 79                     		ld	a,c
141D 32 88 C0               		ld	(ram_modebuffer+88h),a
1420 78                     		ld	a,b
1421 32 89 C0               		ld	(ram_modebuffer+89h),a
1424                        		
1424 0E 00                   		ld	c,(BANK_WAVE>>14)&0FFh
1426 79                       		ld	a,c
1427 32 FF FF                 		ld      (0FFFFh),a
142A 11 00 80               		ld      de,8000h
142D 21 00 C0                   		ld	hl,ram_modebuffer
1430 FB                   		ei
1431                      	
1431                      ; -------------------------------------------------
1431                      ; Loop
1431                      ; -------------------------------------------------
1431                      
1431                      @Loop:
1431 00                       		nop 
1432                      
1432 1A                    		ld      a,(de)
1433 0F                    		rrca
1434 0F                    		rrca
1435 0F                    		rrca
1436 0F                     		rrca
1437 E6 0F                   		and     %00001111
1439 F6 90                   		or      90h;+40h
143B D3 7F                    		out     (7Fh),a
143D C6 20                     		add	20h
143F D3 7F                     		out     (7Fh),a
1441 C6 20                     		add	20h
1443 D3 7F                     		out     (7Fh),a
1445                           		
1445 06 08                     		ld      b,08h
1447 10 FE                     		djnz    *
1449                         		
1449 13                    		inc     de
144A 7A                    		ld	a,d
144B FE C0                 		cp	0C0h
144D DA 31 14               		jp	c,@Loop
1450 16 80                  		ld	d,80h
1452 0C                     		inc 	c
1453 79                   		ld	a,c
1454 32 FF FF             		ld      (0FFFFh),a
1457 C3 31 14              		jp	@Loop
145A                       		
145A                       	
145A                      ; -------------------------------------------------
145A                      ; Hint
145A                      ; -------------------------------------------------
145A                      
145A                      hblank:
145A 21 00 C0                  		ld	hl,ram_modebuffer
145D 3E 80                  		ld	a,80h
145F D3 BF                  		out	(Vcom),a
1461 3E 7F                  		ld	a,3Fh|40h
1463 D3 BF                  		out	(Vcom),a
1465                      
1465                        		rept 20h*2
1465                         		ld	a,(hl)
1465                         		inc 	hl
1465                         		out     (Vdata),a
1465 7E 23 D3 BE 7E 23 +        		endr
1565                         		
1565 F1                   		pop     af
1566 FB                   		ei
1567 ED 45                		retn
1569                      	
1569                      ; -------------------------------------------------
1569                      ; Vint
1569                      ; -------------------------------------------------
1569                      
1569                      vblank:
1569 C5                   		push	bc
156A 3A 8A C0             		ld	a,(ram_modebuffer+08Ah)
156D FE 01                		cp	1
156F CA 00 00             		jp	z,@keep
1572 3A 88 C0             		ld	a,(ram_modebuffer+88h)
1575 4F                   		ld	c,a
1576 3A 89 C0             		ld	a,(ram_modebuffer+89h)
1579 47                   		ld	b,a
157A 0B                   		dec	bc
157B 79                   		ld	a,c
157C 32 88 C0             		ld	(ram_modebuffer+88h),a
157F 78                   		ld	a,b
1580 32 89 C0             		ld	(ram_modebuffer+89h),a
1583                      		
1583 79                   		ld	a,c
1584 B0                   		or	b
1585 C2 00 00             		jp	nz,@exit
1588                      		
1588 3E 01                		ld	a,1
158A 32 8A C0             		ld	(ram_modebuffer+08Ah),a
158D 3E E1                		ld	a,11100001b
158F D3 BF                		out 	(Vcom),a
1591 3E 81                		ld	a,81h
1593 D3 BF                		out 	(Vcom),a
1595                      		
1595                      		
1595 3E 10                 		ld	a,10h
1597 D3 BF                 		out	(Vcom),a
1599 F6 C0                 		or	Vcolor
159B D3 BF                 		out	(Vcom),a
159D 3E 24                 		ld	a,24h
159F D3 BE                 		out 	(Vdata),a
15A1                       		
15A1                       		
15A1 7B                    		ld	a,e
15A2 32 90 C0              		ld	(ram_modebuffer+090h),a
15A5 7A                    		ld	a,d
15A6 32 91 C0              		ld	(ram_modebuffer+091h),a
15A9                       		
15A9                      @keep:
15A9                      
15A9 3A 2C C9             		ld	a,(ram_hscroll)
15AC 3D                   		dec	a
15AD 32 2C C9             		ld	(ram_hscroll),a	
15B0 D3 BF                		out     (Vcom),a
15B2 3E 88                		ld      a,088h
15B4 D3 BF                		out     (Vcom),a
15B6                      		
15B6 3A 80 C0             		ld	a,(ram_modebuffer+80h)
15B9 3D                   		dec	a
15BA F2 00 00              		jp	p,@plus
15BD                       		
15BD 3A 81 C0              		ld	a,(ram_modebuffer+81h)
15C0 3C                    		inc 	a
15C1 FE 06                 		cp	6
15C3 DA 00 00              		jp	c,@last
15C6 AF                    		xor	a
15C7                      @last:
15C7 32 81 C0             		ld	(ram_modebuffer+81h),a
15CA                      
15CA C5                    		push	bc
15CB 87                    		add	a
15CC 87                    		add	a
15CD 87                    		add	a
15CE 87                    		add	a
15CF 87                    		add	a
15D0 01 00 00              		ld	bc,0
15D3 4F                    		ld	c,a
15D4 DD 21 01 C0           		ld	ix,ram_modebuffer+1
15D8 FD 21 00 00           		ld	iy,kitty_anim
15DC FD 09                 		add	iy,bc
15DE C1                     		pop	bc
15DF                        		
15DF                        		rept (5*3)+9
15DF                        		ld	a,(iy)
15DF                        		ld	(ix),a
15DF                        		inc	ix
15DF                        		inc	ix
15DF                        		inc	iy
15DF FD 7E 00 DD 77 00 +    		endr
16FF                        	
16FF 3E 04                  		ld	a,4
1701                      @plus:
1701 32 80 C0             		ld	(ram_modebuffer+80h),a
1704                      	
1704                      @exit:
1704 C1                   		pop	bc
1705 F1                   		pop     af
1706 FB                   		ei
1707 ED 45                		retn
1709                      		
1709                      kitty_anim:
1709 01 02 03 04 05 06 +  		db 001h,002h,003h,004h,005h,006h,007h,008h,009h,00Ah,00Bh,00Ch,00Dh,00Eh,00Fh
1718 5E 5F 60 5B 5C 5D +   		db 05Eh,05Fh,060h,05Bh,05Ch,05Dh,05Eh,05Fh,060h,  -1,  -1,  -1,  -1,  -1,  -1, -1, -1
1729 10 11 12 13 14 15 +  		db 010h,011h,012h,013h,014h,015h,016h,017h,018h,019h,01Ah,01Bh,01Ch,01Dh,01Eh
1738 5E 5F 60 5B 5C 5D +  		db 05Eh,05Fh,060h,05Bh,05Ch,05Dh,05Eh,05Fh,060h,  -1,  -1,  -1,  -1,  -1,  -1, -1, -1
1749 1F 20 21 22 23 24 +  		db 01Fh,020h,021h,022h,023h,024h,025h,026h,027h,028h,029h,02Ah,02Bh,02Ch,02Dh
1758 5E 5F 60 5B 5C 5D +   		db 05Eh,05Fh,060h,05Bh,05Ch,05Dh,05Eh,05Fh,060h,  -1,  -1,  -1,  -1,  -1,  -1, -1, -1
1769 2E 2F 30 31 32 33 +  		db 02Eh,02Fh,030h,031h,032h,033h,034h,035h,036h,037h,038h,039h,03Ah,03Bh,03Ch
1778 5B 5C 5D 5E 5F 60 +   		db 05Bh,05Ch,05Dh,05Eh,05Fh,060h,05Bh,05Ch,05Dh,  -1,  -1,  -1,  -1,  -1,  -1, -1, -1
1789 3D 3E 3F 40 41 42 +  		db 03Dh,03Eh,03Fh,040h,041h,042h,043h,044h,045h,046h,047h,048h,049h,04Ah,04Bh
1798 5B 5C 5D 5E 5F 60 +   		db 05Bh,05Ch,05Dh,05Eh,05Fh,060h,05Bh,05Ch,05Dh,  -1,  -1,  -1,  -1,  -1,  -1, -1, -1
17A9 4C 4D 4E 4F 50 51 +  		db 04Ch,04Dh,04Eh,04Fh,050h,051h,052h,053h,054h,055h,056h,057h,058h,059h,05Ah
17B8 5B 5C 5D 5E 5F 60 +   		db 05Bh,05Ch,05Dh,05Eh,05Fh,060h,05Bh,05Ch,05Dh,  -1,  -1,  -1,  -1,  -1,  -1, -1, -1
17C9                      		
17C9                      		
17C9                      ; 		include "modes/level/code.asm"		
17C9                      		
17C9                      ; ====================================================================
17C9                      ; -------------------------------------------------
17C9                      ; Sound
17C9                      ; -------------------------------------------------
17C9                      
17C9                       		include "sound/code.asm"
17C9                      ; ================================================================
17C9                      ; SMEG Junior
17C9                      ; Sound and Music Engine for Game Gear/Master System
17C9                      ;
17C9                      ; (C)2015 GF64
17C9                      ; 
17C9                      ; ImpulseTracker
17C9                      ;
17C9                      ; Ticks:
17C9                      ; 150 - NTSC
17C9                      ; 120 - PAL
17C9                      ; ================================================================
17C9                      
17C9                      			rsreset
17C9 =00000144            DrvStatus		rb 1		;Byte
17C9 =0000015E            DrvSettings		rb 1		;Byte
17C9 =00000178            CurrPattern		rb 1		;Byte
17C9 =00000191            PatternEnd		rb 1		;Byte
17C9 =000001AB            PatternLoop		rb 1		;Byte
17C9                      
17C9                      
17C9 =000001C6            PattSize		rw 1		;Word
17C9 =000001DD            PattRead		rw 1		;Word
17C9 =000001F5            SongStart		rw 1		;Word
17C9 =0000020C            SongRead		rw 1		;Word
17C9                      
17C9                      
17C9 =00000228            TicksRead		rb 1		;Byte
17C9 =0000023F            TicksSet		rb 1		;Byte
17C9 =00000256            PsgLast			rb 1		;Byte
17C9 =00000273            DrvSettingsBGM		rb 1		;Byte
17C9 =0000028D            Psg_Vibrato		rb 1		;Byte
17C9 =000002A7            Psg_AutoVol		rb 1		;Byte
17C9                      
17C9 =000002B9            CurrChan		rb 1
17C9 =000002CD            CurrChanType		rb 1
17C9 =000002F0            UsedChnBuff		rb 4		;Array (Bytes)
17C9                      
17C9                      ; --------------------------------------------
17C9                      ; Channel settings
17C9                      ; --------------------------------------------
17C9                      
17C9                      			rsreset
17C9 =0000038B            Chn_Type		rb 1		;Byte
17C9 =000003A1            Chn_ID			rb 1		;Byte
17C9 =000003B8            Chn_Inst		rb 1		;Byte
17C9 =000003CF            Chn_Vol			rb 1		;Byte
17C9                      
17C9 =000003E8            Chn_Freq		rw 1		;Word
17C9 =00000417            Chn_Effect		rw 1		;Word		;TODO: its backwards
17C9 =00000430            Chn_Portam		rw 1		;Word
17C9 =00000449            Chn_DefVol		rb 1		;Byte
17C9 =00000460            Chn_Note		rb 1		;Byte
17C9 =0000047A            Chn_Panning		rb 1		;Byte
17C9 =00000498            Chn_PSG_Vibrato		rb 1		;Byte
17C9 =000004AA            Chn_Unused		rb 2
17C9 =000004BC            sizeof_Chn		rw 0
17C9                       
17C9                      ; --------------------------------------------
17C9                      ; Bits
17C9                      ; --------------------------------------------
17C9                      
17C9 =0000053D            bitPriority		equ	0
17C9 =0000054E            bitSfxOn		equ	1
17C9 =00000562            bitDisabled		equ	2
17C9                      
17C9                      ;Status
17C9 =0000057E            bitDacOn		equ	0
17C9 =00000591            bitDacNote		equ	1
17C9 =000005A2            bitTone3		equ	2
17C9 =000005B6            bitSpecial3		equ	3
17C9                      
17C9                      ; --------------------------------------------
17C9                      ; Channel IDs
17C9                      ; --------------------------------------------
17C9                      
17C9 =0000063B            PSG_1			equ	080h
17C9 =0000064D            PSG_2			equ	0A0h
17C9 =0000065F            PSG_3			equ	0C0h
17C9 =00000671            NOISE			equ	0E0h
17C9 =00000685            MaxChannels		equ	4
17C9                      
17C9                      ; --------------------------------------------
17C9                      ; .IT request ($80+) format
17C9                      ; --------------------------------------------
17C9                      
17C9 =00000717            bitNote			equ	0
17C9 =00000728            bitInst			equ	1
17C9 =0000073A            bitVolume		equ	2
17C9 =0000074C            bitEffect		equ	3
17C9 =00000760            bitSameNote		equ	4
17C9 =00000774            bitSameInst		equ	5
17C9 =00000787            bitSameVol		equ	6
17C9 =0000079D            bitSameEffect		equ	7
17C9                      
17C9                      ; --------------------------------------------
17C9                      ; RAM
17C9                      ; --------------------------------------------
17C9                      
17C9                      			rsset ram_sounddriver
17C9 =0000083B            RAM_SMEG_Buffer		rb 48h
17C9 =00000854            RAM_SMEG_SfxBuff	rb 48h
17C9 =00000871            RAM_SMEG_Chnls_BGM	rb 10h*4
17C9 =0000088E            RAM_SMEG_Chnls_SFX	rb 10h*4
17C9 =000008A1            sizeof_SMEG		rb 0
17C9                      
17C9                      ; ================================================================
17C9                      ; -------------------------------------------
17C9                      ; Init
17C9                      ; -------------------------------------------
17C9                      
17C9                      SMEG_Init:
17C9 21 2E C9             		ld	hl,RAM_SMEG_Buffer
17CC 06 FF                		ld	b,0FFh
17CE AF                   		xor	a
17CF                      @clrall:	
17CF 77                   		ld	(hl),a
17D0 23                   		inc	hl
17D1 10 FC                		djnz	@clrall
17D3                      		
17D3 AF                   		xor	a
17D4 CB D7                		set 	bitDisabled,a
17D6 32 2E C9             		ld	(RAM_SMEG_Buffer),a
17D9 C9                   		ret
17DA                      		
17DA                      ; -------------------------------------------
17DA                      ; Stop ALL Sound
17DA                      ; -------------------------------------------
17DA                      
17DA                      SMEG_StopSnd:
17DA 21 2E C9             		ld	hl,RAM_SMEG_Buffer
17DD 7E                   		ld	a,(hl)
17DE CB D7                		set 	bitDisabled,a
17E0 77                   		ld	(hl),a
17E1 21 76 C9             		ld	hl,RAM_SMEG_SfxBuff
17E4 7E                   		ld	a,(hl)
17E5 CB D7                		set 	bitDisabled,a
17E7 77                   		ld	(hl),a
17E8                      		
17E8 3E 9F                		ld	a,09Fh
17EA D3 7F                		out	(7Fh),a
17EC 3E BF                		ld	a,0BFh
17EE D3 7F                		out	(7Fh),a
17F0 3E DF                		ld	a,0DFh
17F2 D3 7F                		out	(7Fh),a
17F4 3E FF                		ld	a,0FFh
17F6 D3 7F                		out	(7Fh),a
17F8 C9                   		ret
17F9                      
17F9                      ; -------------------------------------------
17F9                      ; Play Song
17F9                      ; -------------------------------------------
17F9                      
17F9                      SMEG_PlaySong:
17F9 21 2E C9             		ld	hl,RAM_SMEG_Buffer
17FC 7E                   		ld	a,(hl)
17FD CB 97                		res 	bitDisabled,a
17FF 77                   		ld	(hl),a
1800 C9                   		ret
1801                      		
1801                      ; -------------------------------------------
1801                      ; Load SFX
1801                      ;
1801                      ; d0 - StartOfSong
1801                      ; d1 - Ticks
1801                      ; -------------------------------------------
1801                      
1801                      SMEG_LoadSfx:
1801                      ; 		movem.l	a4-a6,-(sp)
1801                      ; 		lea	(RAM_SMEG_SfxBuff),a6
1801                      ; 		lea	(RAM_SMEG_Chnls_SFX),a5
1801                      ; 		clr.b	PcmChnOnOff(a6)
1801                      ;                 clr.b	DrvStatus(a6)
1801                      ;                 bset	#bitSfxOn,(a6)
1801                      ; 		bsr	SMEG_Load_SetChnls
1801                      ; 		movem.l	(sp)+,a4-a6
1801 C9                   		ret
1802                      
1802                      ; -------------------------------------------
1802                      ; Load Song
1802                      ;
1802                      ; hl - StartOfSong
1802                      ; b - Ticks
1802                      ; -------------------------------------------
1802                      
1802                      SMEG_LoadSong:
1802 E5                   		push	hl
1803 C5                   		push	bc
1804 CD DA 17             		call	SMEG_StopSnd			;hl and b are gone
1807 C1                   		pop	bc
1808 E1                   		pop	hl
1809                      		
1809 DD 21 2E C9          		ld	ix,RAM_SMEG_Buffer		;a6
180D FD 21 BE C9          		ld	iy,RAM_SMEG_Chnls_BGM		;a5
1811 AF                   		xor	a
1812 DD 77 00             		ld	(ix+DrvStatus),a
1815 CD 00 00             		call	SMEG_Load_SetChnls
1818 C3 00 00             		jp	SMEG_Load_FixBgm
181B                      		
181B                      ; -----------------------
181B                      ; Setup channels
181B                      ; 
181B                      ; hl - Song
181B                      ; b  - Ticks
181B                      ; -----------------------
181B                      
181B                      SMEG_Load_SetChnls:
181B DD 70 0E             		ld	(ix+TicksSet),b
181E                      		
181E                      ; -----------------------
181E                      ; Get instruments
181E                      ; -----------------------
181E                      
181E 23                   		inc	hl			;Probably not making PSG instruments
181F 23                   		inc	hl
1820                      
1820                      ; -----------------------
1820                      ; Get the
1820                      ; PatternEnd/PatternLoop
1820                      ; numbers
1820                      ; -----------------------
1820                      
1820 7E                   		ld	a,(hl)
1821 23                   		inc	hl
1822 DD 77 03             		ld	(ix+PatternEnd),a
1825 7E                   		ld	a,(hl)
1826 23                   		inc	hl
1827 DD 77 04             		ld	(ix+PatternLoop),a
182A                      
182A                      ; -----------------------
182A                      ; Setup the channel IDs
182A                      ; -----------------------
182A                      
182A 06 04                		ld	b,MaxChannels
182C                      @SetId:
182C 3E 01                		ld	a,1
182E FD 77 00             		ld	(iy+Chn_Type),a
1831 7E                   		ld	a,(hl)
1832 23                   		inc	hl
1833 FD 77 01             		ld	(iy+Chn_ID),a
1836 AF                   		xor	a
1837 FD 77 05             		ld	(iy+(Chn_Freq+1)),a
183A FD 77 04             		ld	(iy+Chn_Freq),a
183D                      		
183D 11 10 00             		ld	de,sizeof_Chn
1840 FD 19                		add 	iy,de
1842 10 E8                		djnz	@SetId
1844                      
1844                      ; -----------------------
1844                      ; Master volumes
1844                      ; -----------------------
1844                      
1844                      		; (Removed in this driver)
1844                      		
1844                      ; -----------------------
1844                      ; last steps
1844                      ; -----------------------
1844                       
1844 DD 74 0A              		ld	(ix+(SongStart+1)),h
1847 DD 75 09              		ld	(ix+SongStart),l
184A 7E                    		ld	a,(hl)
184B 23                    		inc	hl
184C DD 77 05              		ld	(ix+PattSize),a
184F 7E                    		ld	a,(hl)
1850 23                    		inc	hl
1851 DD 77 06              		ld	(ix+(PattSize+1)),a	
1854 AF                    		xor	a
1855 DD 77 08              		ld	(ix+(PattRead+1)),a
1858 DD 77 07              		ld	(ix+PattRead),a
185B 23                    		inc	hl
185C 23                     		inc	hl
185D 23                     		inc	hl
185E 23                    		inc	hl
185F 23                     		inc	hl
1860 23                     		inc	hl
1861 DD 74 0C              		ld	(ix+(SongRead+1)),h
1864 DD 75 0B              		ld	(ix+SongRead),l
1867                       		
1867                      ;  		ld	a,1
1867                      ;  		ld	(ix+CurrPattern),a
1867 C9                   		ret
1868                      		
1868                      ; -----------------------
1868                      ; Fix stuff to BGM
1868                      ; -----------------------
1868                      
1868                      SMEG_Load_FixBgm:
1868                      ; 		lea	(RAM_SMEG_Chnls_BGM),a5
1868                      ; 		moveq	#(MaxChannels)-1,d4
1868                      ; @SetId:
1868                      ; 		move.b	#$80,Chn_Panning(a5)
1868                      ; 
1868                      ; 		tst.b	Chn_ID(a5)
1868                      ; 		bmi.s	@NotFM
1868                      ; 		cmp.b	#PCM_1,Chn_ID(a5)
1868                      ; 		bge.s	@NotFM
1868                      ; 
1868                      ; 		clr.b	Chn_FM_Key(a5)
1868                      ; 		move.b	#%00001111,Chn_FM_Key(a5)
1868                      ; 		move.b	#$C0,Chn_Panning(a5)
1868                      ; 		bsr	SMEG_FM_SetPan
1868                      ; 
1868                      ; @NotFM:
1868                      ; 		adda 	#sizeof_Chn,a5
1868                      ; 		dbf	d4,@SetId
1868 C9                   		ret
1869                      		
1869                      ; ================================================================
1869                      ; -------------------------------------------
1869                      ; Run
1869                      ; -------------------------------------------
1869                      
1869                      SMEG_Upd:
1869 DD 21 2E C9          		ld	ix,RAM_SMEG_Buffer
186D DD 7E 00             		ld	a,(ix)
1870 CB C7                		set 	bitPriority,a
1872 DD 77 00             		ld	(ix),a
1875 CD 00 00             		call	@ReadRow
1878                      		
1878 DD 21 76 C9          		ld	ix,RAM_SMEG_SfxBuff
187C DD 7E 00             		ld	a,(ix)
187F CB 87                		res 	bitPriority,a
1881 DD 77 00             		ld	(ix),a
1884 CB 4F                		bit 	bitSfxOn,a
1886 CA 00 00             		jp	z,@Wait
1889 CD 00 00             		call	@ReadRow
188C                      		
188C                      @Wait:
188C C9                   		ret
188D                      
188D                      ; -------------------------------------------
188D                      ; Read row
188D                      ; -------------------------------------------
188D                      
188D                      @ReadRow:
188D DD 7E 00             		ld	a,(ix)
1890 CB 57                		bit 	bitDisabled,a
1892 C2 8C 18             		jp	nz,@Wait
1895                      		
1895 DD 35 0D             		dec 	(ix+TicksRead)
1898 DD 7E 0D             		ld	a,(ix+TicksRead)
189B F2 8C 18             		jp	p,@Wait
189E DD 7E 0E             		ld	a,(ix+TicksSet)
18A1 DD 77 0D             		ld	(ix+TicksRead),a
18A4                      		
18A4 DD 56 0C             		ld	d,(ix+(SongRead+1))
18A7 DD 5E 0B             		ld	e,(ix+SongRead)	
18AA                      	
18AA                      ; --------------------------------
18AA                      ; New pattern
18AA                      ; --------------------------------
18AA                      
18AA                      @Next:
18AA DD 46 08             		ld	b,(ix+(PattRead+1))
18AD DD 7E 06             		ld	a,(ix+(PattSize+1))
18B0 B8                   		cp	b
18B1 C2 00 00             		jp	nz,@NoNextRow
18B4 DD 46 07             		ld	b,(ix+PattRead)
18B7 DD 7E 05             		ld	a,(ix+PattSize)
18BA 3D                   		dec 	a
18BB B8                   		cp	b
18BC D2 00 00             		jp	nc,@NoNextRow
18BF                      		
18BF AF                   		xor	a
18C0 DD 77 08             		ld	(ix+(PattRead+1)),a
18C3 DD 77 07             		ld	(ix+PattRead),a
18C6                      		
18C6 DD 7E 03               		ld	a,(ix+PatternEnd)
18C9 DD 46 02               		ld	b,(ix+CurrPattern)
18CC B8                      		cp	b
18CD C2 00 00               		jp	nz,@NotEnd
18D0                       		
18D0                       		; Restart
18D0 DD 66 0A              		ld	h,(ix+(SongStart+1))
18D3 DD 6E 09              		ld	l,(ix+(SongStart))
18D6 7E                    		ld	a,(hl)
18D7 23                    		inc	hl
18D8 DD 77 05              		ld	(ix+(PattSize)),a
18DB 7E                    		ld	a,(hl)
18DC 23                    		inc	hl
18DD DD 77 06              		ld	(ix+(PattSize+1)),a
18E0 23                    		inc	hl
18E1 23                     		inc	hl
18E2 23                     		inc	hl
18E3 23                    		inc	hl
18E4 23                     		inc	hl
18E5 23                     		inc	hl
18E6 DD 74 0C               		ld	(ix+(SongRead+1)),h
18E9 DD 75 0B               		ld	(ix+SongRead),l
18EC                      		
18EC AF                   		xor	a
18ED DD 77 08             		ld	(ix+(PattRead+1)),a
18F0 DD 77 07             		ld	(ix+PattRead),a
18F3 DD 7E 04              		ld	a,(ix+PatternLoop)
18F6 DD 77 02             		ld	(ix+CurrPattern),a
18F9                      
18F9 AF                   		xor	a
18FA DD 77 0D             		ld	(ix+TicksRead),a
18FD DD 77 02             		ld	(ix+CurrPattern),a
1900 18 8B                 		jr 	@ReadRow
1902                      
1902                      ; --------------------------------
1902                      
1902                      @NotEnd:
1902 DD 7E 02              		ld	a,(ix+CurrPattern)
1905 3C                    		inc	a
1906 DD 77 02              		ld	(ix+CurrPattern),a
1909                       		
1909 DD 7E 02              		ld	a,(ix+CurrPattern)
190C DD 46 04              		ld	b,(ix+PatternLoop)
190F B8                    		cp	b
1910 C2 00 00              		jp	nz,@DontSaveLoop
1913 DD 72 0A              		ld	(ix+(SongStart+1)),d
1916 DD 73 09              		ld	(ix+(SongStart)),e
1919                      		
1919                      @DontSaveLoop:	
1919 1A                    		ld	a,(de)
191A 13                    		inc	de
191B DD 77 05              		ld	(ix+PattSize),a
191E 1A                    		ld	a,(de)
191F 13                    		inc	de
1920 DD 77 06              		ld	(ix+(PattSize+1)),a	
1923 AF                    		xor	a
1924 DD 77 08              		ld	(ix+(PattRead+1)),a
1927 DD 77 07              		ld	(ix+PattRead),a
192A 13                   		inc	de
192B 13                   		inc	de
192C 13                   		inc	de
192D 13                   		inc	de
192E 13                   		inc	de
192F 13                   		inc	de
1930                      		
1930                      ; --------------------------------
1930                      ; Current pattern
1930                      ; --------------------------------
1930                       
1930                      @NoNextRow:
1930 1A                   		ld	a,(de)
1931 13                    		inc	de
1932 DD 77 13              		ld	(ix+CurrChan),a
1935 FE 00                 		cp	0
1937 C2 00 00             		jp	nz,@ValidNote
193A                      		
193A DD 46 08             		ld	b,(ix+(PattRead+1))
193D DD 4E 07             		ld	c,(ix+(PattRead))
1940 03                   		inc	bc
1941 DD 70 08             		ld	(ix+(PattRead+1)),b
1944 DD 71 07             		ld	(ix+(PattRead)),c
1947                      		
1947 DD 72 0C             		ld	(ix+(SongRead+1)),d
194A DD 73 0B             		ld	(ix+(SongRead)),e
194D C9                   		ret
194E                      		
194E                      @ValidNote:
194E DD 7E 13              		ld	a,(ix+CurrChan)
1951 CB 7F                 		bit 	7,a
1953 CA 00 00             		jp	z,@Not80
1956                      		
1956 DD 46 08             		ld	b,(ix+(PattRead+1))
1959 DD 4E 07             		ld	c,(ix+(PattRead))
195C 03                   		inc	bc
195D DD 70 08             		ld	(ix+(PattRead+1)),b
1960 DD 71 07             		ld	(ix+(PattRead)),c
1963 CB BF                		res 	7,a
1965 DD 77 13             		ld	(ix+CurrChan),a
1968                      
1968 1A                    		ld	a,(de)
1969 13                    		inc	de
196A DD 77 14              		ld	(ix+CurrChanType),a
196D                      		
196D                      @Not80:
196D DD 46 08             		ld	b,(ix+(PattRead+1))
1970 DD 4E 07             		ld	c,(ix+(PattRead))
1973 03                   		inc	bc
1974 DD 70 08             		ld	(ix+(PattRead+1)),b
1977 DD 71 07             		ld	(ix+(PattRead)),c
197A                      		
197A 97                   		sub 	a
197B                      		;channel_on flags goes here
197B                      		
197B FD 21 BE C9          		ld	iy,RAM_SMEG_Chnls_BGM
197F DD 7E 00             		ld	a,(ix)
1982 CB 47                		bit 	bitPriority,a
1984 C2 00 00             		jp	nz,@BgmPrio
1987 FD 21 FE C9          		ld	iy,RAM_SMEG_Chnls_SFX		
198B                      @BgmPrio:
198B DD 7E 13             		ld	a,(ix+CurrChan)
198E FE 01                		cp	1
1990 CA 00 00             		jp	z,@First
1993 3D                   		dec 	a
1994                      @NextChn:
1994 01 10 00              		ld	bc,sizeof_Chn
1997 FD 09                   		add 	iy,bc
1999 3D                      		dec	a
199A C2 94 19                		jp	nz,@NextChn
199D                      @First:
199D                      
199D DD 7E 14              		ld	a,(ix+CurrChanType)
19A0 FE 00                 		cp	0
19A2 CA 00 00             		jp	z,@NotRest
19A5 DD 7E 14              		ld	a,(ix+CurrChanType)
19A8 FD 77 00             		ld	(iy+Chn_Type),a
19AB                      
19AB                      @NotRest:
19AB                      
19AB                      ; -------------
19AB                      ; Note
19AB                      ; -------------
19AB                      
19AB FD 7E 00             		ld	a,(iy+Chn_Type)
19AE CB 67                		bit 	bitSameNote,a
19B0 C2 00 00             		jp	nz,@PlayOnly
19B3 CB 47                		bit 	bitNote,a
19B5 CA 00 00             		jp	z,@NoNote
19B8                      
19B8 1A                   		ld	a,(de)
19B9 13                   		inc 	de
19BA FD 77 0B             		ld	(iy+Chn_Note),a
19BD DD 46 08             		ld	b,(ix+(PattRead+1))
19C0 DD 4E 07             		ld	c,(ix+(PattRead))
19C3 03                   		inc	bc
19C4 DD 70 08             		ld	(ix+(PattRead+1)),b
19C7 DD 71 07             		ld	(ix+(PattRead)),c
19CA                      
19CA                      @PlayOnly:
19CA CD 00 00              		call	SMEG_ChannelRest
19CD                      		
19CD                      ; -------------
19CD                      ; Instrument
19CD                      ; -------------
19CD                      
19CD                      @NoNote:
19CD FD 7E 00             		ld	a,(iy+Chn_Type)
19D0 CB 6F                 		bit 	bitSameInst,a
19D2 C2 00 00              		jp	nz,@SameInst
19D5 CB 4F                		bit 	bitInst,a
19D7 CA 00 00             		jp	z,@NoInst
19DA                      		
19DA FD 34 0A             		inc	(iy+Chn_DefVol)
19DD                      		
19DD 1A                   		ld	a,(de)
19DE 13                   		inc 	de
19DF FD 77 02             		ld	(iy+Chn_Inst),a
19E2 DD 46 08             		ld	b,(ix+(PattRead+1))
19E5 DD 4E 07             		ld	c,(ix+(PattRead))
19E8 03                   		inc	bc
19E9 DD 70 08             		ld	(ix+(PattRead+1)),b
19EC DD 71 07             		ld	(ix+(PattRead)),c
19EF                      
19EF                      ; 		bsr	SMEG_SetVoice
19EF                      @SameInst:
19EF                      
19EF                      ; -------------
19EF                      ; Volume
19EF                      ; -------------
19EF                      
19EF                      @NoInst:
19EF FD 7E 00             		ld	a,(iy+Chn_Type)
19F2 CB 77                		bit 	bitSameVol,a
19F4 C2 00 00             		jp	nz,@SameVol
19F7 CB 57                		bit 	bitVolume,a
19F9 CA 00 00             		jp	z,@NoVolume
19FC                       
19FC AF                    		xor	a
19FD FD 77 09             		ld	(iy+(Chn_Portam+1)),a
1A00 FD 77 08             		ld	(iy+Chn_Portam),a
1A03 FD 77 07             		ld	(iy+(Chn_Effect+1)),a
1A06 FD 77 06             		ld	(iy+Chn_Effect),a
1A09 1A                   		ld	a,(de)
1A0A 13                   		inc 	de
1A0B DD 46 08             		ld	b,(ix+(PattRead+1))
1A0E DD 4E 07             		ld	c,(ix+(PattRead))
1A11 03                   		inc	bc
1A12 DD 70 08             		ld	(ix+(PattRead+1)),b
1A15 DD 71 07             		ld	(ix+(PattRead)),c
1A18                      		
1A18 D6 40                  		sub 	64
1A1A ED 44                  		neg 	a
1A1C FD 77 03             		ld	(iy+Chn_Vol),a
1A1F                      		
1A1F                      @SameVol:
1A1F CD 00 00               		call	@ChnVolume
1A22                      
1A22                      ; -------------
1A22                      ; Effect
1A22                      ; -------------
1A22                       
1A22                      @NoVolume:
1A22 FD 7E 00             		ld	a,(iy+Chn_Type)
1A25 CB 7F                		bit 	bitSameEffect,a
1A27 C2 00 00             		jp	nz,@SameEffect
1A2A CB 5F                		bit 	bitEffect,a
1A2C CA 00 00             		jp	z,@NoEffect
1A2F                      
1A2F 1A                   		ld	a,(de)
1A30 FD 77 07             		ld	(iy+(Chn_Effect+1)),a
1A33 13                   		inc 	de
1A34 DD 46 08             		ld	b,(ix+(PattRead+1))
1A37 DD 4E 07             		ld	c,(ix+(PattRead))
1A3A 03                   		inc	bc
1A3B DD 70 08             		ld	(ix+(PattRead+1)),b
1A3E DD 71 07             		ld	(ix+(PattRead)),c
1A41                      		
1A41 1A                   		ld	a,(de)
1A42 FD 77 06             		ld	(iy+Chn_Effect),a
1A45 13                   		inc 	de
1A46 DD 46 08             		ld	b,(ix+(PattRead+1))
1A49 DD 4E 07             		ld	c,(ix+(PattRead))
1A4C 03                   		inc	bc
1A4D DD 70 08             		ld	(ix+(PattRead+1)),b
1A50 DD 71 07             		ld	(ix+(PattRead)),c
1A53                      
1A53                      @SameEffect:
1A53 CD 00 00             		call	@ChannelEffects
1A56                       
1A56                      ; --------------
1A56                      ; Play the note
1A56                      ; --------------
1A56                      ; 
1A56                      @NoEffect:
1A56 FD 7E 00             		ld	a,(iy+Chn_Type)
1A59 CB 67                		bit 	bitSameNote,a
1A5B C2 00 00             		jp	nz,@SameNote
1A5E CB 47                		bit 	bitNote,a
1A60 CA AA 18             		jp	z,@Next
1A63                      		
1A63                      @SameNote:
1A63 CD 00 00              		call	@ChannelPlay	
1A66 C3 AA 18              		jp	@Next
1A69                      
1A69                      ; ================================================================
1A69                      ; -------------------------------
1A69                      ; Set Volume
1A69                      ; -------------------------------
1A69                      
1A69                      @ChnVolume:
1A69 FD 7E 01             		ld	a,(iy+Chn_ID)
1A6C FE FF                		cp	0FFh
1A6E CA 00 00             		jp	z,@Disabled
1A71                      		
1A71 0E 00                		ld	c,00h
1A73 FD 7E 03               		ld	a,(iy+Chn_Vol)
1A76 CA 00 00                 		jp	z,@Full
1A79 D6 40                    		sub 	64
1A7B CB 2F                    		sra 	a
1A7D CB 2F                    		sra	a
1A7F                      @Full:
1A7F E6 0F                 		and 	00001111b
1A81 47                    		ld	b,a
1A82 FD 7E 01              		ld	a,(iy+Chn_ID)
1A85 E6 E0                 		and	11100000b
1A87 CB E7                 		set 	4,a
1A89 B0                    		or	b
1A8A D3 7F                 		out	(7Fh),a
1A8C C9                   		ret 
1A8D                      		
1A8D                      ; -------------------------------
1A8D                      ; Set Freq
1A8D                      ; -------------------------------
1A8D                      
1A8D                      @NoteFreq:	
1A8D FD 7E 0B             		ld	a,(iy+Chn_Note)
1A90 FE FF                		cp	0FFh
1A92 CA 00 00             		jp	z,@ResetFreq
1A95 FE FE                		cp	0FEh
1A97 CA 00 00             		jp	z,@ResetFreq
1A9A                      		
1A9A FD 7E 01             		ld	a,(iy+Chn_ID)
1A9D FE E0                		cp	NOISE
1A9F C2 00 00             		jp	nz,@NotNoise
1AA2                      		
1AA2 AF                   		xor	a
1AA3 FD 77 05             		ld	(iy+(Chn_Freq+1)),a
1AA6 3C                   		inc	a
1AA7 FD 77 04             		ld	(iy+Chn_Freq),a
1AAA                      
1AAA DD 7E 01             		ld	a,(ix+DrvSettings)
1AAD CB 57                		bit	bitTone3,a
1AAF CA 00 00             		jp	z,@Disabled
1AB2                      @NotNoise:
1AB2 01 00 00             		ld	bc,0
1AB5 FD 4E 0B             		ld	c,(iy+Chn_Note)
1AB8 CB 21                		sla	c
1ABA E5                   		push	hl
1ABB 21 00 00             		ld	hl,@Notes_PSG
1ABE FD 7E 01              		ld	a,(iy+Chn_ID)
1AC1 FE E0                  		cp	NOISE
1AC3 C2 00 00               		jp	nz,@NotNoiseFix
1AC6 21 00 00             		ld	hl,@Notes_PSG+(32*2)		
1AC9                      @NotNoiseFix:
1AC9 09                   		add 	hl,bc
1ACA 7E                   		ld	a,(hl)
1ACB FD 77 04             		ld	(iy+(Chn_Freq)),a
1ACE 23                   		inc	hl
1ACF 7E                   		ld	a,(hl)
1AD0 FD 77 05             		ld	(iy+Chn_Freq+1),a
1AD3 E1                   		pop	hl
1AD4 C9                   		ret 
1AD5                      
1AD5                      @ResetFreq:
1AD5 AF                   		xor	a
1AD6 FD 77 05             		ld	(iy+(Chn_Freq+1)),a
1AD9 FD 77 04             		ld	(iy+Chn_Freq),a
1ADC                      		
1ADC                      @Disabled:
1ADC C9                    		ret
1ADD                      		
1ADD                      ; -------------------------------
1ADD                      ; Channel play
1ADD                      ; -------------------------------
1ADD                      
1ADD                      @ChannelPlay:
1ADD FD 7E 01             		ld	a,(iy+Chn_ID)
1AE0 FE FF                		cp	0FFh
1AE2 CA DC 1A             		jp	z,@Disabled
1AE5                      		
1AE5                      		;Portametro later
1AE5 CD 8D 1A             		call	@NoteFreq
1AE8                      			
1AE8 FD 7E 05             		ld	a,(iy+(Chn_Freq+1))
1AEB FD 46 04             		ld	b,(iy+(Chn_Freq))
1AEE B0                   		or	b
1AEF CA 00 00              		jp	z,SMEG_ChannelRest
1AF2                      		
1AF2 FD 7E 01             		ld	a,(iy+Chn_ID)
1AF5 FE E0                		cp	NOISE
1AF7 CA 00 00             		jp	z,@PlayNoise
1AFA                      		
1AFA FE C0                		cp	PSG_3
1AFC C2 00 00             		jp	nz,@NotPsg3
1AFF DD 7E 01             		ld	a,(ix+DrvSettings)
1B02 CB 57                		bit	bitTone3,a
1B04 CA 00 00             		jp	z,@NotPsg3
1B07                      		
1B07 3E DF                		ld	a,0DFh
1B09 D3 7F                		out	(7Fh),a
1B0B C9                   		ret 
1B0C                      
1B0C                      @NotPsg3:
1B0C FD 7E 01              		ld	a,(iy+Chn_ID)
1B0F 4F                    		ld	c,a
1B10 C3 00 00              		jp	@SetFreq
1B13                      		
1B13                      ; ------------------------------------
1B13                      
1B13                      @PlayNoise:
1B13 DD 7E 01             		ld	a,(ix+DrvSettings)
1B16 CB 57                		bit 	bitTone3,a
1B18 CA DC 1A             		jp	z,@Disabled
1B1B 0E C0                		ld	c,11000000b
1B1D                      @SetFreq:
1B1D FD 7E 04              		ld	a,(iy+(Chn_Freq))
1B20 E6 0F                 		and 	00001111b
1B22 47                    		ld	b,a
1B23 79                    		ld	a,c
1B24 E6 E0                 		and	11100000b
1B26 B0                    		or	b
1B27 D3 7F                		out	(7Fh),a
1B29 FD 7E 04              		ld	a,(iy+(Chn_Freq))
1B2C CB 2F                 		sra	a
1B2E CB 2F                 		sra	a
1B30 CB 2F                 		sra	a
1B32 CB 2F                 		sra	a
1B34 E6 0F                 		and 	00001111b
1B36 47                    		ld	b,a
1B37 FD 7E 05              		ld	a,(iy+(Chn_Freq+1))
1B3A CB 27                  		sla	a
1B3C CB 27                 		sla	a
1B3E CB 27                 		sla	a
1B40 CB 27                 		sla	a
1B42 E6 30                 		and 	00110000b
1B44 B0                    		or	b
1B45 D3 7F                 		out	(7Fh),a
1B47 C9                   		ret
1B48                      		
1B48                      ; -------------------------------
1B48                      
1B48                      @Notes_PSG:
1B48 00 00                		dw 0		;x-0
1B4A 00 00                		dw 0
1B4C 00 00                		dw 0
1B4E 00 00                		dw 0
1B50 00 00                		dw 0
1B52 00 00                		dw 0
1B54 00 00                		dw 0
1B56 00 00                		dw 0
1B58 00 00                		dw 0
1B5A 00 00                		dw 0
1B5C 00 00                		dw 0
1B5E 00 00                		dw 0
1B60 00 00                		dw 0
1B62 00 00                		dw 0
1B64 00 00                		dw 0
1B66 00 00                		dw 0
1B68 00 00                		dw 0
1B6A 00 00                		dw 0
1B6C                      
1B6C 00 00                		dw 0		;x-1
1B6E 00 00                		dw 0
1B70 00 00                		dw 0
1B72 00 00                		dw 0
1B74 00 00                		dw 0
1B76 00 00                		dw 0
1B78 00 00                		dw 0
1B7A 00 00                		dw 0
1B7C 00 00                		dw 0
1B7E 00 00                		dw 0
1B80 00 00                		dw 0
1B82 00 00                		dw 0
1B84 00 00                		dw 0
1B86 00 00                		dw 0
1B88 00 00                		dw 0
1B8A 00 00                		dw 0
1B8C 00 00                		dw 0
1B8E 00 00                		dw 0
1B90                      
1B90 00 00                		dw 0
1B92 00 00                		dw 0
1B94 00 00                		dw 0
1B96 00 00                		dw 0
1B98 00 00                		dw 0
1B9A 00 00                		dw 0
1B9C 00 00                		dw 0
1B9E 00 00                		dw 0
1BA0 00 00                		dw 0
1BA2                      
1BA2 F8 03                		dw 3F8h
1BA4 BF 03                                dw 3BFh
1BA6 89 03                                dw 389h
1BA8 56 03                		dw 356h
1BAA 26 03                                dw 326h
1BAC F9 02                                dw 2F9h
1BAE CE 02                                dw 2CEh
1BB0 A5 02                                dw 2A5h
1BB2 80 02                                dw 280h
1BB4 5C 02                                dw 25Ch
1BB6 3A 02                                dw 23Ah
1BB8 1A 02                                dw 21Ah
1BBA FB 01                		dw 1FBh
1BBC DF 01                                dw 1DFh
1BBE C4 01                                dw 1C4h
1BC0 AB 01                                dw 1ABh
1BC2 93 01                                dw 193h
1BC4 7D 01                                dw 17Dh
1BC6 67 01                                dw 167h
1BC8 53 01                                dw 153h
1BCA 40 01                                dw 140h
1BCC 2E 01                		dw 12Eh
1BCE 1D 01                                dw 11Dh
1BD0 0D 01                                dw 10Dh
1BD2 FE 00                                dw 0FEh
1BD4 EF 00                                dw 0EFh
1BD6 E2 00                                dw 0E2h
1BD8 D6 00                                dw 0D6h
1BDA C9 00                                dw 0C9h
1BDC BE 00                                dw 0BEh
1BDE B4 00                                dw 0B4h
1BE0 A9 00                		dw 0A9h
1BE2 A0 00                                dw 0A0h
1BE4 97 00                                dw 97h
1BE6 8F 00                                dw 8Fh
1BE8 87 00                                dw 87h
1BEA 7F 00                                dw 7Fh
1BEC 78 00                                dw 78h
1BEE 71 00                                dw 71h
1BF0 6B 00                                dw 6Bh
1BF2 65 00                                dw 65h
1BF4 5F 00                		dw 5Fh
1BF6 5A 00                                dw 5Ah
1BF8 55 00                                dw 55h
1BFA 50 00                                dw 50h
1BFC 4B 00                                dw 4Bh
1BFE 47 00                                dw 47h
1C00 43 00                                dw 43h
1C02 40 00                                dw 40h
1C04 3C 00                                dw 3Ch
1C06 39 00                                dw 39h
1C08 36 00                		dw 36h
1C0A 33 00                                dw 33h
1C0C 30 00                                dw 30h
1C0E 2D 00                                dw 2Dh
1C10 2B 00                                dw 2Bh
1C12 28 00                                dw 28h
1C14 26 00                                dw 26h
1C16 24 00                                dw 24h
1C18 22 00                                dw 22h
1C1A 20 00                                dw 20h
1C1C 1F 00                		dw 1Fh
1C1E 1D 00                                dw 1Dh
1C20 1B 00                                dw 1Bh
1C22 1A 00                                dw 1Ah
1C24 18 00                                dw 18h
1C26 17 00                                dw 17h
1C28 16 00                                dw 16h
1C2A 15 00                                dw 15h
1C2C 13 00                                dw 13h
1C2E 12 00                                dw 12h
1C30 11 00                		dw 11h
1C32                      		
1C32                      ; ================================================================
1C32                      ; -------------------------------
1C32                      ; Channel effect
1C32                      ; -------------------------------
1C32                      
1C32                      @ChannelEffects:
1C32 01 00 00             		ld	bc,0
1C35 FD 4E 07             		ld	c,(iy+(Chn_Effect+1))
1C38 CB 21                		sla	c
1C3A 21 00 00             		ld	hl,@EffectList
1C3D 09                   		add 	hl,bc
1C3E E9                   		jp	(hl)
1C3F                      
1C3F                      ; -------------------------------
1C3F                      
1C3F                      @EffectList:
1C3F 18 00                		jr	@Null		;(Nothing)
1C41 18 00                		jr	@Null		;A	
1C43 18 00                		jr	@Null
1C45 18 00                		jr	@Null
1C47 18 00                		jr	@Null
1C49 18 00                		jr	@Null
1C4B 18 00                		jr	@Null
1C4D 18 00                		jr	@Null
1C4F 18 00                		jr	@Null
1C51 18 00                		jr	@Null
1C53 18 00                		jr	@Null
1C55 18 00                		jr	@Null
1C57 18 00                		jr	@Null
1C59 18 00                		jr	@Null
1C5B 18 00                		jr	@Null
1C5D 18 00                		jr	@Null
1C5F 18 00                		jr	@Null
1C61 18 00                		jr	@Null
1C63 18 00                		jr	@Null
1C65 18 00                		jr	@Null
1C67 18 00                		jr	@Null
1C69 18 00                		jr	@Null
1C6B 18 00                		jr	@Null
1C6D 18 00                		jr	@Null
1C6F 18 00                		jr	@Flag_X
1C71 18 00                		jr	@Null
1C73 18 00                		jr	@Flag_Z
1C75                      
1C75                      ; -------------------------------
1C75                      ; Null effect
1C75                      ; -------------------------------
1C75                      
1C75                      @Null:
1C75 C9                   		ret
1C76                      		
1C76                      ; -------------------------------
1C76                      ; Flag X - Stereo
1C76                      ; -------------------------------
1C76                      
1C76                      @Flag_X:
1C76 C9                   		ret
1C77                      		
1C77                      ; ======================================================
1C77                      ; -------------------------------
1C77                      ; Flag Z
1C77                      ; -------------------------------
1C77                      
1C77                      @Flag_Z:	
1C77 01 00 00              		ld	bc,0
1C7A FD 7E 06              		ld	a,(iy+(Chn_Effect))
1C7D CB 2F                 		sra	a
1C7F CB 2F                 		sra	a
1C81 CB 2F                 		sra	a
1C83 4F                    		ld	c,a
1C84 21 00 00              		ld	hl,@HashList
1C87 09                    		add 	hl,bc
1C88 E9                   		jp	(hl)
1C89                      
1C89                      @HashList:
1C89 18 EA                		jr	@Null
1C8B 18 E8                		jr	@Null
1C8D 18 E6                		jr	@Null
1C8F 18 E4                		jr	@Null
1C91 18 00                		jr	@PSG
1C93 18 E0                		jr	@Null
1C95 18 DE                		jr	@Null
1C97 18 DC                		jr	@Null
1C99 18 DA                		jr	@Null
1C9B 18 D8                		jr	@Null
1C9D 18 D6                		jr	@Null
1C9F 18 D4                		jr	@Null
1CA1 18 D2                		jr	@Null
1CA3 18 D0                		jr	@Null
1CA5 18 CE                		jr	@Null
1CA7 18 CC                		jr	@Null
1CA9                      		
1CA9                      ; -------------------------------
1CA9                      
1CA9                      @PSG:
1CA9 DD 46 01             		ld	b,(ix+DrvSettings)
1CAC CB 90                  		res	bitTone3,b
1CAE FD 7E 06                		ld	a,(iy+(Chn_Effect))
1CB1 E6 07                   		and	111b
1CB3 FE 03                   		cp	3
1CB5 CA 00 00                		jp	z,@SetIt3
1CB8 FE 07                   		cp	7
1CBA CA 00 00                 		jp	z,@SetIt3
1CBD 18 00                    		jr	@Tone3
1CBF                      @SetIt3:
1CBF CB D0                   		set 	bitTone3,b
1CC1                      @Tone3:
1CC1 DD 70 01             		ld	(ix+DrvSettings),b
1CC4                      ; 		bit 	bitPriority,b
1CC4                      ;  		jp	z,@IsPsg
1CC4                      ;  		
1CC4                      ;  		ld	a,(RAM_SMEG_Buffer+DrvSettings)
1CC4                      ;  		ld	(RAM_SMEG_Buffer+DrvSettingsBGM),a
1CC4                      ;  		ld	a,(iy+(Chn_Effect))
1CC4                      ;  		and 	00000111b
1CC4                      ;  		ld	(RAM_SMEG_Buffer+PsgLast),a
1CC4                      ; 		
1CC4                      ; @IsPsg:
1CC4 FD 7E 06             		ld	a,(iy+(Chn_Effect))
1CC7 E6 07                		and	111b
1CC9 47                   		ld	b,a
1CCA 3E E0                		ld	a,0E0h
1CCC B0                   		or	b
1CCD D3 7F                		out	(7Fh),a
1CCF C9                   		ret	
1CD0                      		
1CD0                      ; ================================================================
1CD0                      ; -------------------------------
1CD0                      ; Mute/Rest channel
1CD0                      ; -------------------------------
1CD0                      
1CD0                      SMEG_ChannelRest:
1CD0 FD 7E 01             		ld	a,(iy+Chn_ID)
1CD3 FE FF                		cp	0FFh
1CD5 CA 00 00             		jp	z,@Return
1CD8                      		
1CD8 FD 7E 01             		ld	a,(iy+Chn_ID)
1CDB E6 E0                		and 	11100000b
1CDD 47                   		ld	b,a
1CDE 3E 1F                		ld	a,00011111b
1CE0 B0                   		or	b
1CE1 D3 7F                		out	(7Fh),a
1CE3                      @Return:
1CE3 C9                   		ret
1CE4                      		
1CE4                      ; ================================================================
1CE4                      ; -------------------------------
1CE4                      ; Play PCM sample
1CE4                      ; -------------------------------
1CE4                      
1CE4                      PlayPCM:
1CE4 26 00                   		ld	h,(BANK_WAVE>>14)&0FFh
1CE6 7C                       		ld	a,h
1CE7 32 FF FF                 		ld      (0FFFFh),a
1CEA 2E 08                  		ld      l,08h
1CEC 11 00 80               		ld      de,8000h
1CEF                       	
1CEF 3E 81                   		ld      a,81h			;write $01 to tone channel 0
1CF1 D3 7F                   		out     (7Fh),a
1CF3 AF                      		xor	a
1CF4 D3 7F                   		out     (7Fh),a
1CF6 3E A1                   		ld      a,0A1h			;write $01 to tone channel 1
1CF8 D3 7F                   		out     (7Fh),a
1CFA AF                      		xor	a
1CFB D3 7F                   		out     (7Fh),a
1CFD 3E C1                  		ld      a,0C1h			;write $01 to tone channel 2
1CFF D3 7F                  		out     (7Fh),a
1D01 AF                     		xor	a
1D02 D3 7F                  		out     (7Fh),a
1D04                       
1D04                      @Loop:
1D04                      ; 		in      a,(pad)
1D04                      ; 		xor     0FFh
1D04                      ; 		jp	nz,@escape
1D04 00                       		nop 
1D05 00                      		nop 
1D06                      ;  		nop
1D06                      
1D06 1A                    		ld      a,(de)
1D07 0F                    		rrca
1D08 0F                    		rrca
1D09 0F                    		rrca
1D0A 0F                     		rrca
1D0B E6 0F                   		and     %00001111
1D0D F6 90                   		or      90h;+40h
1D0F D3 7F                    		out     (7Fh),a
1D11 C6 20                     		add	20h
1D13 D3 7F                     		out     (7Fh),a
1D15 C6 20                     		add	20h
1D17 D3 7F                     		out     (7Fh),a
1D19 45                      		ld      b,l
1D1A 10 FE                   		djnz    *
1D1C                         		
1D1C 13                    		inc     de
1D1D 7A                    		ld	a,d
1D1E FE C0                 		cp	0C0h
1D20 DA 04 1D               		jp	c,@Loop
1D23 16 80                  		ld	d,80h
1D25 24                     		inc 	h
1D26 7C                   		ld	a,h
1D27 32 FF FF             		ld      (0FFFFh),a
1D2A C3 04 1D              		jp	@Loop
1D2D                       		
1D2D 79                    		ld      a,c
1D2E B0                    		or      b
1D2F C2 04 1D              		jp      nz,@Loop
1D32                        
1D32                      @escape:
1D32                      ;  		pop     hl
1D32                      ;  		pop     de
1D32                      ;  		pop     bc
1D32 C9                    		ret
1D33                      		
1D33                      		
1D33                       		include "sound/data.asm"
1D33                      ; ================================================================
1D33                      ; User data
1D33                      ; ================================================================
1D33                      
1D33                      SmegSong_Test:
1D33                      ; 		dw 0
1D33                      ;    		db 7,0
1D33                      ;   		db PSG_1,PSG_2,PSG_3,NOISE
1D33                      ;        		incbin "sound/data/music/smb.it",50h+59Ah
1D33                      ;      		incbin "sound/data/music/froggy.it",50h+188Bh
1D33                      ;      		incbin "sound/data/music/froggy.it",50h+188Bh
1D33                       		
1D33                      ; ====================================================================
1D33                      
1D33                      		inform 0,"CODE Size: %h",*
1D33                          		cnop 0,4000h
4000                          		
4000                      ; ====================================================================
4000                      ; -------------------------------------------------
4000                      ; Data | SLOT 2
4000                      ; 
4000                      ; Header at the end
4000                      ; -------------------------------------------------
4000                      
4000                       		cnop 0,7FF0h
7FF0 54 4D 52 20 53 45 +   		db "TMR SEGA",0,0		; TMR SEGA + unused
7FFA 00 00                 		dw 0				; Checksum
7FFC 00 00                 		db 0,0				; Product code + PCode|Version
7FFE 00 00                 		db 0,0				; Version + Region code|ROM size
8000                       		
8000                      ; ====================================================================
8000                      ; -------------------------------------------------
8000                      ; Data | SLOT 3
8000                      ; 
8000                      ; TO-DO: This can be used as extra RAM
8000                      ; -------------------------------------------------
8000                      
8000                          		cnop 0,0C000h
C000                          		
C000                      ; ====================================================================
C000                      ; -------------------------------------------------
C000                      ; DATA BANKS for Slot 2
C000                      ; -------------------------------------------------
C000                      
C000                      ; -----------------------
C000                      ; Title Screen
C000                      ; -----------------------
C000                      
C000                      BANK_Title:	obj 4000h
4000                      		include "modes/title/data.asm"
4000                      ; ====================================================================
4000                      ; -------------------------------------------------
4000                      ; DATA | Title Screen
4000                      ; -------------------------------------------------
4000                      
4000                      art_title:
4000                      		incbin "modes/title/data/art.bin"
40E0 =00000113            art_title_end	equ *-art_title
40E0                      
40E0                      pal_title:	incbin "modes/title/data/pal.bin"
4100                      		incbin "modes/title/data/cat/pal.bin"
4120                      		
4120                      map_title:	incbin "modes/title/data/map.bin"
4120                      map_title:	incbin "modes/title/data/map.bin"
4720                          		objend
C720                          		inform 0,"BANK Title size: %h",(*-BANK_Title)
C720                          		cnop 0,4000h
0000                      
0000                      BANK_Cat:	obj 4000h
4000                      art_cat:	incbin "modes/title/data/cat/art.bin"
4D40 =00000E7A            art_cat_end	equ *-art_cat
4D40                          		objend
0D40                          		inform 0,"BANK Title size: %h",(*-BANK_Cat)
0D40                          		cnop 0,4000h
4000                          		
4000                      ; ; -----------------------
4000                      ; ; Level
4000                      ; ; -----------------------
4000                      ; 
4000                      ; BANK_LvlMd_Init:
4000                      ; 		obj 4000h
4000                      ; 		include "modes/level/data_1.asm"
4000                      ;     		objend
4000                      ;     		inform 0,"BANK Level (init) size: %h",(*-BANK_LvlMd_Init)
4000                      ;     		cnop 0,4000h
4000                      ; 
4000                      ; BANK_LvlMd_Loop:
4000                      ; 		obj 4000h
4000                      ; 		include "modes/level/data_2.asm"
4000                      ;     		objend
4000                      ;     		inform 0,"BANK Level (loop) size: %h",(*-BANK_LvlMd_Loop)
4000                      ;     		cnop 0,4000h
4000                          		
4000                      ; ====================================================================
4000                      
4000 =000010EB            thisaddr = 02Ch
4000                      BANK_WAVE:
4000                           		rept 31;110
4000                           		obj 4000h
4000                          		incbin "sound/data/pcm/n60029.wav",thisaddr,4000h
4000                       ;    		cnop 0,4000h
4000                          		objend
4000                      thisaddr = thisaddr+4000h
4000                          		endr
C62B                          		
C62B                      ; ====================================================================
C62B                      
C62B                      		inform 0,"ROM Size: %h",*
C62B                      		cnop 0,10000h
0000                      		
0000                      		
